@using GIR.Sigim.Application.DTO.Comercial 
@model GIR.Sigim.Presentation.WebUI.ViewModel.ListaViewModel

@{
    IEnumerable<RelStatusVendaDTO> Lista = Model.Records as IEnumerable<RelStatusVendaDTO>;
}

<div class="table-container">
    @if (Lista != null && Lista.Any())
    {
        <div class="dt-toolbar table-header hidden-xs">
            <div class="col-sm-12 col-xs-12">
                <div class="dataTables_length" id="dt_basic_length" style="float: right!important;">
                    <label>
                        @Html.DropDownListFor(
                            m => m.PageSize,
                            Model.PageSizeList,
                            new
                            {
                                @id = "pageSizeSelector" + Model.UniqueIdentifier,
                                @aria_controls = "dt_basic",
                                @class = "form-control"
                            })
                    </label>
                </div>
            </div>
        </div>
        <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
            <table id="tableSearchResult@(Model.UniqueIdentifier)" class="table table-bordered table-striped table-condensed table-hover dataTable">
                <thead>
                    <tr role="row">
                        @{
                            string sortingSuffix = Model.Ascending ? "_asc" : "_desc";
                            string contratoSortingSuffix = "sorting";
                            string incorporadorSortingSuffix = "sorting";
                            string empreendimentoSortingSuffix = "sorting";
                            string blocoSortingSuffix = "sorting";
                            string unidadeSortingSuffix = "sorting";
                            string descricaoSituacaoContratoSortingSuffix = "sorting";
                            string clienteSortingSuffix = "sorting";
                            string tabelaVendaSortingSuffix = "sorting";
                            string dataVendaSortingSuffix = "sorting";
                            string precoTabelaSortingSuffix = "sorting";
                            string valorDescontoSortingSuffix = "sorting";
                            string percentualDescontoSortingSuffix = "sorting";
                            string precoPraticadoSortingSuffix = "sorting";
                            string dataAssinaturaSortingSuffix = "sorting";
                            string dataCancelamentoSortingSuffix = "sorting";
                            string aprovadoSortingSuffix = "sorting";
                            string usuarioAprovacaoSortingSuffix = "sorting";
                            string dataAprovacaoSortingSuffix = "sorting";

                            switch (Model.OrderBy)
                            {
                                case "incorporador":
                                    incorporadorSortingSuffix += sortingSuffix;
                                    break;
                                case "empreendimento":
                                    empreendimentoSortingSuffix += sortingSuffix;
                                    break;
                                case "bloco":
                                    blocoSortingSuffix += sortingSuffix;
                                    break;
                                case "unidade":
                                    unidadeSortingSuffix += sortingSuffix;
                                    break;
                                case "contratoId":
                                    contratoSortingSuffix += sortingSuffix;
                                    break;
                                case "descricaoSituacaoContrato":
                                    descricaoSituacaoContratoSortingSuffix += sortingSuffix;
                                    break;
                                case "cliente":
                                    clienteSortingSuffix += sortingSuffix;
                                    break;
                                case "tabelaVenda":
                                    tabelaVendaSortingSuffix += sortingSuffix;
                                    break;
                                case "dataVenda":
                                    dataVendaSortingSuffix += sortingSuffix;
                                    break;
                                case "precoTabela":
                                    precoTabelaSortingSuffix += sortingSuffix;
                                    break;
                                case "valorDesconto":
                                    valorDescontoSortingSuffix += sortingSuffix;
                                    break;
                                case "percentualDesconto":
                                    percentualDescontoSortingSuffix += sortingSuffix;
                                    break;
                                case "precoPraticado":
                                    precoPraticadoSortingSuffix += sortingSuffix;
                                    break;
                                case "dataAssinatura":
                                    dataAssinaturaSortingSuffix += sortingSuffix;
                                    break;
                                case "dataCancelamento":
                                    dataCancelamentoSortingSuffix += sortingSuffix;
                                    break;
                                case "aprovado":
                                    aprovadoSortingSuffix += sortingSuffix;
                                    break;
                                case "usuario":
                                    usuarioAprovacaoSortingSuffix += sortingSuffix;
                                    break;
                                case "dataAprovacao":
                                    dataAprovacaoSortingSuffix += sortingSuffix;
                                    break;                                   
                                default:
                                    break;
                            }
                        }
                        <th class="sorting @incorporadorSortingSuffix text-left" data-order="incorporador" style="min-width:60px;">Incorporador</th>
                        <th class="sorting @empreendimentoSortingSuffix text-left" data-order="empreendimento" style="min-width:60px;">Empreendimento</th>
                        <th class="sorting @blocoSortingSuffix text-left" data-order="bloco" style="min-width:60px;">Bloco</th>
                        <th class="sorting @unidadeSortingSuffix text-left" data-order="unidade" style="min-width:60px;">Unidade</th>
                        <th class="sorting @contratoSortingSuffix text-left" data-order="contratoId" style="min-width:90px; ">Contrato</th>
                        <th class="sorting @descricaoSituacaoContratoSortingSuffix text-left" data-order="descricaoSituacaoContrato" style="min-width:50px; ">Situação contrato</th>
                        <th class="sorting @clienteSortingSuffix text-left" data-order="cliente" style="min-width:70px;">Cliente</th>
                        <th class="sorting @tabelaVendaSortingSuffix text-left" data-order="tabelaVenda" style="min-width:60px;">Tabela de Venda</th>
                        <th class="sorting @dataVendaSortingSuffix text-left" data-order="dataVenda" style="min-width:90px;">Data venda</th>
                        <th class="sorting @precoTabelaSortingSuffix text-left" data-order="precoTabela" style="min-width:60px;">Preço Tabela</th>
                        <th class="sorting @valorDescontoSortingSuffix text-left" data-order="valorDesconto" style="min-width:90px;">Valor Desconto</th>
                        <th class="sorting @percentualDescontoSortingSuffix text-left" data-order="percentualDesconto" style="min-width:90px;">% Desconto</th>
                        <th class="sorting @precoPraticadoSortingSuffix text-left" data-order="precoPraticado" style="min-width:60px;">Preço Praticado</th>
                        <th class="sorting @dataAssinaturaSortingSuffix text-left" data-order="dataAssinatura" style="min-width:75px;">Data assinatura</th>
                        <th class="sorting @dataCancelamentoSortingSuffix text-left" data-order="dataCancelamento" style="min-width:90px;">Data Cancelamento</th>
                        <th class="sorting @aprovadoSortingSuffix text-left" data-order="aprovado" style="min-width:75px;">Aprovado</th>
                        <th class="sorting @usuarioAprovacaoSortingSuffix text-left" data-order="usuarioAprovacao" style="min-width:75px;">Usuário aprovação</th>
                        <th class="sorting @dataAprovacaoSortingSuffix text-left" data-order="dataAprovacao" style="min-width:75px;">Dt. aprovação</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Lista)
                    {
                        string aprovado = "Não";
                        if (item.Aprovado.HasValue)
                        {
                            if (item.Aprovado.Value)
                            {
                                aprovado = "Sim";
                            }
                            else
                            {
                                aprovado = "Não";
                            }
                        }
                        string dataAprovacao = "";
                        if (item.DataAprovacao.HasValue)
                        {
                            dataAprovacao = item.DataAprovacao.Value.ToShortDateString();
                        }

                        string valorDesconto = "0,00";
                        if (item.ValorDesconto.HasValue)
                        {
                            valorDesconto =  item.ValorDesconto.Value.ToString("N2");
                        }
                        
                        <tr>
                            <td class="text-left text-nowrap">@item.Contrato.Unidade.Empreendimento.Incorporador.RazaoSocial </td>
                            <td class="text-left text-nowrap">@item.Contrato.Unidade.Empreendimento.Nome</td>
                            <td class="text-left text-nowrap">@item.Contrato.Unidade.Bloco.Nome</td>
                            <td class="text-left text-nowrap">@item.Contrato.Unidade.Descricao</td>
                            <td class="text-left text-nowrap">@item.Contrato.Id</td>
                            <td class="text-left text-nowrap">@item.Contrato.DescricaoSituacaoContrato</td>
                            <td class="text-left text-nowrap">@item.Contrato.ListaVendaParticipante.Where(l => l.TipoParticipanteId == GIR.Sigim.Domain.Constantes.Comercial.ContratoTipoParticipanteTitular).FirstOrDefault().Cliente.Nome</td>
                            <td class="text-left text-nowrap">@item.TabelaVenda.Nome</td>
                            <td class="text-center text-nowrap">@item.DataVenda.Value.ToString("dd/MM/yyyy")</td>
                            <td class="text-right text-nowrap">@item.PrecoTabela.ToString("N2")</td>
                            <td class="text-right text-nowrap">@valorDesconto</td>
                            <td class="text-right text-nowrap">@item.PercentualDesconto.ToString("N2")</td>
                            <td class="text-right text-nowrap">@item.PrecoPraticado.ToString("N2")</td>
                            <td class="text-center text-nowrap">@if (item.DataAssinatura.HasValue){@item.DataAssinatura.Value.ToString("dd/MM/yyyy");}&nbsp;</td>
                            <td class="text-center text-nowrap">@if (item.DataCancelamento.HasValue){@item.DataCancelamento.Value.ToString("dd/MM/yyyy");}&nbsp;</td>
                            <td class="text-center text-nowrap">@aprovado</td>
                            <td class="text-center text-nowrap">@item.UsuarioAprovacao</td>
                            <td class="text-center text-nowrap">@dataAprovacao</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @Html.Partial("_PaginationPartial", Model)
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $('body').addClass("hidden-menu");
    });
</script>