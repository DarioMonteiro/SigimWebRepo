@model GIR.Sigim.Presentation.WebUI.Areas.Sac.ViewModel.ParametrosViewModel

@{
    ViewBag.Title = "Parâmetros";
    ViewBag.IsUploadForm = true;
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-8 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Index",
                            "ParametrosSac",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "onSuccess", UpdateTargetId = "notificationMessages" },
                            new { @id = "formParametros", @class = "smart-form client-form", @novalidate = "novalidate", @enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.ParametrosSac.Id)
                        <div class="panel-group smart-accordion-default" id="accordion">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseGeral" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Geral
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseGeral" class="panel-collapse collapse" style="height: 0px;">
                                    <div class="panel-body no-padding">
                                        <fieldset><legend></legend>
                                            <div class="row">
                                                <section class="col col-12">
                                                    @Html.LabelFor(m => m.ParametrosSac.ClienteId, new { @class = "label" })
                                                    <label class="select">
                                                        @Html.DropDownListFor(m => m.ParametrosSac.ClienteId, Model.ListaEmpresa, string.Empty)
                                                        <i></i>
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.ParametrosSac.Mascara, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ParametrosSac.Mascara, new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.Mascara, "", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.ParametrosSac.PrazoAvaliacao, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ParametrosSac.PrazoAvaliacao, new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.PrazoAvaliacao, "", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.ParametrosSac.PrazoConclusao, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ParametrosSac.PrazoConclusao, new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.PrazoConclusao, "", new { @class = "note note-error" })
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-6">
                                                    @Html.LabelFor(m => m.ParametrosSac.EmailEnvio, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-envelope-o"></i>
                                                        @Html.TextBoxFor(m => m.ParametrosSac.EmailEnvio, new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.EmailEnvio, "", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-6">
                                                    @Html.LabelFor(m => m.ParametrosSac.senhaEnvio, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-lock"></i>
                                                        @Html.PasswordFor(m => m.ParametrosSac.senhaEnvio, new { @class = "lastField" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.senhaEnvio, "", new { @class = "note note-error" })
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.ParametrosSac.PortaEnvio, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ParametrosSac.PortaEnvio, new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.PortaEnvio, "", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.ParametrosSac.ServidorEnvio, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ParametrosSac.ServidorEnvio, new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.ServidorEnvio, "", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-4" style="padding-top: 30px;">
                                                    <label class="checkbox">
                                                        @Html.CheckBoxFor(m => m.ParametrosSac.HabilitaSSL)<i></i>@Html.DisplayNameFor(m => m.ParametrosSac.HabilitaSSL)
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-12">
                                                    @Html.LabelFor(m => m.ParametrosSac.CorpoMensagemAutomaticaSacweb, new { @class = "label" })
                                                    <label class="textarea">
                                                        @Html.TextAreaFor(m => m.ParametrosSac.CorpoMensagemAutomaticaSacweb, new { rows = 5, style = "height:104px;Width:740px" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ParametrosSac.CorpoMensagemAutomaticaSacweb, "", new { @class = "note note-error" })
                                                </section>
                                            </div>
                                             @Html.HiddenFor(m => m.JsonListaEmail)
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                      <div class="panel panel-default">
                           <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseListaEmail" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Emails
                                        </a>
                                    </h4>
                                </div>
                        <div id="collapseListaEmail" class="panel-collapse collapse" style="height: 0px;">
                        <div class="panel-body no-padding">
                        <fieldset id="formItem"><legend></legend>
                             @Html.HiddenFor(m => m.IndexSelecionado)
                            <div class="row">
                               <section class="col col-12">
                                    @Html.LabelFor(m => m.Email, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m =>m.Email, new { @class = "required" })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "note note-error" })
                                </section>
                            </div>
                            <div class="row">
                                <section class="col col-4">
                                    <label class="label">Setor</label>
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.SetorId, Model.ListaSetor, string.Empty, new { @class = "required" })
                                        @*@Html.HiddenFor(m => m.Setor.Descricao)*@
                                        <i></i>
                                    </label>
                                        @Html.ValidationMessageFor(m => m.SetorId, "", new { @class = "note note-error" })
                                </section>
                                <section class="col col-4">
                                        @Html.LabelFor(m => m.Tipo, new { @class = "label" })                                
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.Tipo, Model.ListaSituacaoSolicitacaoSac, string.Empty, new { @class = "required" })
                                        <i></i>
                                    </label>
                                        @Html.ValidationMessageFor(m => m.Tipo, "", new { @class = "note note-error" })
                                </section>
                                <section class="col col-4" style="padding-top: 30px;">
                                    <label class="checkbox">
                                        @Html.CheckBoxFor(m => m.Anexo)<i></i>@Html.DisplayNameFor(m => m.Anexo)
                                    </label>
                                </section>
                            </div>
                            <div class="row">
                                <section class="col col-6">
                                    <button id="btnAddItem" type="button" class="btn btn-primary enable">
                                        Adicionar
                                    </button>
                                    <button id="btnRemoverItem" type="button" class="btn btn-danger enable">
                                        Remover
                                    </button>
                                </section>
                            </div>
                            <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
                                <table id="tableItens" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                    <thead>
                                        <tr role="row">
                                            <th class="text-center" style="width: 5px;"> </th>
                                            <th>Email</th>
                                            <th>Setor</th>
                                            <th>Tipo</th>
                                            <th>Anexo</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>
                    </div>          
                    </div> 
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseIconeRelatorio" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Ícone para relatórios
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseIconeRelatorio" class="panel-collapse collapse" style="height: 0px;">
                                    <div class="panel-body no-padding">
                                        <fieldset><legend></legend>
                                            <div class="row">
                                                <section class="col col-12">
                                                    <div class="alert alert-warning fade in">
                                                        <i class="fa-fw fa fa-warning"></i>
                                                        <strong>Atenção!</strong> A imagem deve medir 48x48 pixels e ser do tipo PNG.
                                                    </div>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-8">
                                                    @*<input type="file" name="@Html.IdFor(m => m.IconeRelatorio)" id="IconeRelatorio" />*@
                                                    @Html.TextBoxFor(m => m.ParametrosSac.IconeRelatorio, new { type = "file" })
                                                </section>
                                                <section class="col col-4">
                                                    @Html.HiddenFor(m => m.ParametrosSac.RemoverImagem)
                                                    <div class="bgIconeRelatorio48x48">
                                                        @{
                                                            string imgPadrao = Url.Content("~/Content/img/48x48.png");
                                                            string imageSrc = imgPadrao;
                                                            if (Model.ParametrosSac != null && Model.ParametrosSac.IconeRelatorio != null && Model.ParametrosSac.IconeRelatorio.Length > 0)
                                                            {
                                                                string imageBase64 = Convert.ToBase64String(Model.ParametrosSac.IconeRelatorio);
                                                                imageSrc = string.Format("data:image/gif;base64,{0}", imageBase64);
                                                            }
                                                            <img id="icone" src="@imageSrc" width="96" height="96" alt="Ícone para relatórios" />
                                                            <script type="text/javascript">
                                                                function removerImagem() {
                                                                    $("#IconeRelatorio").val('');
                                                                    $('#icone').attr('src', '@imgPadrao');
                                                                    $('#@Html.IdFor(m => m.ParametrosSac.RemoverImagem)').val(true);
                                                                }

                                                                function exibirImagem(input) {
                                                                    if (input.files && input.files[0]) {
                                                                        var reader = new FileReader();

                                                                        reader.onload = function (e) {
                                                                            $('#icone').attr('src', e.target.result);
                                                                        }

                                                                        reader.readAsDataURL(input.files[0]);
                                                                        $('#@Html.IdFor(m => m.ParametrosSac.RemoverImagem)').val(false);
                                                                    }
                                                                    else
                                                                        removerImagem();
                                                                }

                                                                $("#IconeRelatorio").on('change', function () {
                                                                    exibirImagem(this);
                                                                });
                                                            </script>
                                                        }
                                                        <a class="btn btn-sm btn-danger btn-block" href="javascript:removerImagem();">Remover</a>
                                                    </div>
                                                </section>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                        </div>    
                        <footer>
                            <button type="submit" class="btn btn-primary">
                                Gravar
                            </button>
                        </footer>
                    }
                </div>
            </div>
        </div> 
    </article>
</div>

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $('#formParametros').ajaxForm({
                success: function (d) {
                    $('#IconeRelatorio').val('');
                },
                complete: function (xhr) {
                    $('#notificationMessages').html(xhr.responseText);
                }
            });
        });
                     
        jsonListaEmailArray = JSON.parse($("#@Html.IdFor(m => m.JsonListaEmail)").val());
        $(document).ready(function () {
            fillTable();
            LimpaItem();

            jQuery.validator.setDefaults({
                ignore: '#formItem *'

            });
        });

            function LimpaItem()
            {
                $("#@Html.IdFor(m => m.Email)").val('');
                $("#@Html.IdFor(m => m.SetorId)").val('');
                $("#@Html.IdFor(m => m.Tipo)").val('');
                $("#@Html.IdFor(m => m.Anexo)").prop('checked', false);
                $("#@Html.IdFor(m => m.IndexSelecionado)").val(-1);
            }

            function loadItem(index) {
                $('#@Html.IdFor(m => m.Email)').val(jsonListaEmailArray[index].Email);
                $('#@Html.IdFor(m => m.SetorId)').val(jsonListaEmailArray[index].SetorId);
                $('#@Html.IdFor(m => m.Tipo)').val(jsonListaEmailArray[index].Tipo);
                $('#@Html.IdFor(m => m.Anexo)').prop('checked', (jsonListaEmailArray[index].Anexo));
                $('#@Html.IdFor(m => m.IndexSelecionado)').val(index);
                goToTop();
            }

            function fillTable() {
                $("#tableItens tbody").empty();
                for (var i = 0; i < jsonListaEmailArray.length; i++) {
                    var row = $('<tr />')
                    $("#tableItens tbody").append(row);

                    var chkDisabled = '';
                    var labelClass = 'checkbox';
                    row.append($('<td><label class="' + labelClass + '"><input type="checkbox" name="checkbox" value="' + i + '" ' + chkDisabled + '><i></i>' + '' + '</label></td>'));
                    row.append($('<td class="text-left" onclick = "loadItem(' + i + ');">' + jsonListaEmailArray[i].Email + '</td>'));
                    row.append($('<td>' + jsonListaEmailArray[i].Setor.Descricao + '</td>'));
                    row.append($('<td>' + jsonListaEmailArray[i].DescricaoTipo + '</td>'));
                    row.append($('<td>' + jsonListaEmailArray[i].DescricaoAnexo + '</td>'));
                }
            }

            $('#btnAddItem').on("click", function () {
                if ($('#formItem input').valid()) {
                    {
                        addItem();
                    }
                }
            });

            function addItem() {
                var item = $("#formItem").toObject({ mode: 'combine', skipEmpty: false, nodeCallback: processData })

                item["DescricaoTipo"] = $("#@Html.IdFor(m => m.Tipo) option:selected").text();
                item["DescricaoAnexo"] = $('#@Html.IdFor(m => m.Anexo)').prop('checked') ? 'Sim' : 'Não';

                var index = -1;
                $.each(jsonListaEmailArray, function (i, obj) {
                    if ($('#@Html.IdFor(m => m.IndexSelecionado)').val() == i) {
                        index = i;
                        return false;
                    }
                });

                if (index >= 0) jsonListaEmailArray.splice(index, 1, item);
                else {
                    JSON.parse($("#@Html.IdFor(m => m.JsonListaEmail)").val());
                    jsonListaEmailArray.push(item);
                }

                $("#@Html.IdFor(m => m.JsonListaEmail)").val(JSON.stringify(jsonListaEmailArray));
                LimpaItem();
                fillTable();
            }

            $('#btnRemoverItem').on("click", function ()
            {
                removerItem();
            });

            function removerItem()
            {
                var arrSequencial = [];
                var index;
                $($('#tableItens input[type=checkbox]:checked').get().reverse()).each(function ()
                {
                    index = parseInt($(this).val());
                    arrSequencial.push(index);
                    jsonListaEmailArray.splice(index, 1);
                })

                if (arrSequencial.length > 0)
                {
                    $("#@Html.IdFor(m => m.JsonListaEmail)").val(JSON.stringify(jsonListaEmailArray));
                    fillTable();
                }
                else smartAlert("Erro", "Selecione pelo menos 1 item para remover.", "error");
                
            }

            function processData(node) {
                var fieldId = node.getAttribute ? node.getAttribute('id') : '';
                var fieldName = node.getAttribute ? node.getAttribute('name') : '';

                if (fieldName != '' && (fieldId == "@Html.IdFor(m => m.SetorId)")) {
                    return {
                        name: "Setor",
                        value: {
                            Descricao: $("#@Html.IdFor(m => m.SetorId) option:selected").text(),
                            Id: $("#@Html.IdFor(m => m.SetorId)").val()
                        }
                    }
                }
                return false;
            }
        
    </script>
}