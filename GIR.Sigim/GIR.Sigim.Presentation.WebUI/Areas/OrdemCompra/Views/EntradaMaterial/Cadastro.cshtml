@model GIR.Sigim.Presentation.WebUI.Areas.OrdemCompra.ViewModel.EntradaMaterialCadastroViewModel

@{
    ViewBag.Title = "Entrada de material";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    @{
        string disablebtnLiberarTitulos = string.Empty;
        if (!Model.PodeLiberarTitulos)
        {
            disablebtnLiberarTitulos = "disabled";
        }
    }
    <button id="btnLiberarTitulos" type="button" class="btn btn-primary @disablebtnLiberarTitulos" title="Liberar títulos para o Financeiro">
        Liberar Títulos
    </button>
    @Html.ActionLink("Novo", "Cadastro", new { @id = "" }, new { @class = "btn btn-primary", @style = "float:right;" })
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                        "Cadastro",
                        "EntradaMaterial",
                        null,
                        new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "onSuccess", UpdateTargetId = "notificationMessages" },
                        new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="panel-group smart-accordion-default" id="accordion">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseGeral" class="">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Entrada de material
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseGeral" class="panel-collapse collapse in">
                                    <div class="panel-body no-padding">
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.EntradaMaterial.Id, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.Id, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.EntradaMaterial.Data, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.Data, "{0:dd/MM/yyyy}", new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.Data, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <script type="text/javascript">
                                                    $(document).ready(function () {
                                                        $('#@Html.IdFor(m => m.EntradaMaterial.Data)').datepicker({
                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                            changeMonth: true,
                                                            changeYear: true,
                                                            onClose: function (selectedDate) {
                                                                $(this).valid();
                                                            }
                                                        });
                                                    });
                                                </script>
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.EntradaMaterial.SituacaoDescricao, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.SituacaoDescricao, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                @Html.EditorFor(m => m.EntradaMaterial.CentroCusto, "CentroCusto", new { @sectionClass = "col col-3", @labelText = "Centro de Custo", @somenteNivelFolha = true, @required = true, @podeEdidar = Model.PodeEditarCentroCusto })
                                                <input type="hidden" id="orcamentoId" value="0" />
                                            </div>
                                            <div class="row">
                                                @Html.EditorFor(m => m.EntradaMaterial.ClienteFornecedor, "ClienteFornecedorPesquisaGenerica", 
                                                    new { @sectionClass = "col col-6", 
                                                            @required = true, 
                                                            @label = "Fornecedor", 
                                                            @clienteFornecedorModulo = ((int)GIR.Sigim.Application.Enums.ClienteFornecedorModuloAutoComplete.OrdemCompra),
                                                            @situacao = ((int)GIR.Sigim.Application.Enums.SituacaoAutoComplete.Ativo),
                                                            @exibirBotaoPesquisa = true,
                                                            @podeEdidar = Model.PodeEditarFornecedor
                                                    })

                                                @Html.EditorFor(m => m.EntradaMaterial.FornecedorNota, "ClienteFornecedorPesquisaGenerica", 
                                                    new { @sectionClass = "col col-6", 
                                                            @required = false, 
                                                            @label = "Fornecedor NF", 
                                                            @clienteFornecedorModulo = ((int)GIR.Sigim.Application.Enums.ClienteFornecedorModuloAutoComplete.OrdemCompra),
                                                            @situacao = ((int)GIR.Sigim.Application.Enums.SituacaoAutoComplete.Ativo),
                                                            @exibirBotaoPesquisa = true
                                                    })
                                            </div>
                                            <div class="row">
                                                <section class="col col-12" style="margin-top:15px;">
                                                    <ul id="notaFiscalTab" class="nav nav-tabs bordered">
											            <li class="active">
												            <a href="#notaFiscalTabContentDadosNF" data-toggle="tab">Dados da Nota Fiscal</a>
											            </li>
											            <li>
												            <a href="#notaFiscalTabContentDadosGerais" data-toggle="tab">Dados Gerais</a>
											            </li>
                                                        <li>
												            <a href="#notaFiscalTabContentCodigoBarras" data-toggle="tab">Código de barras</a>
											            </li>
										            </ul>

                                                    <div id="notaFiscalTabContent" class="tab-content padding-10">
											            <div class="tab-pane fade active in" id="notaFiscalTabContentDadosNF">
                                                            <div class="row">
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.TipoNotaFiscalId, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.TipoNotaFiscalId, Model.ListaTipoNotaFiscal, string.Empty, new { @class = "required" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.TipoNotaFiscalId, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.NumeroNotaFiscal, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.EntradaMaterial.NumeroNotaFiscal, new { @class = "required" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.NumeroNotaFiscal, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.DataEmissaoNota, new { @class = "label" })
                                                                    <label class="input">
                                                                        <i class="icon-append fa fa-calendar"></i>
                                                                        @Html.TextBoxFor(m => m.EntradaMaterial.DataEmissaoNota, "{0:dd/MM/yyyy}", new { @class = "required" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.DataEmissaoNota, "Informe uma data válida.", new { @class = "note note-error" })
                                                                </section>
                                                                <script type="text/javascript">
                                                                    $(document).ready(function () {
                                                                        $('#@Html.IdFor(m => m.EntradaMaterial.DataEmissaoNota)').datepicker({
                                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                                            changeMonth: true,
                                                                            changeYear: true,
                                                                            onClose: function (selectedDate) {
                                                                                $(this).valid();
                                                                            }
                                                                        });
                                                                    });
                                                                </script>
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.DataEntregaNota, new { @class = "label" })
                                                                    <label class="input">
                                                                        <i class="icon-append fa fa-calendar"></i>
                                                                        @Html.TextBoxFor(m => m.EntradaMaterial.DataEntregaNota, "{0:dd/MM/yyyy}", new { @class = "required" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.DataEntregaNota, "Informe uma data válida.", new { @class = "note note-error" })
                                                                </section>
                                                                <script type="text/javascript">
                                                                    $(document).ready(function () {
                                                                        $('#@Html.IdFor(m => m.EntradaMaterial.DataEntregaNota)').datepicker({
                                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                                            changeMonth: true,
                                                                            changeYear: true,
                                                                            onClose: function (selectedDate) {
                                                                                $(this).valid();
                                                                            }
                                                                        });
                                                                    });
                                                                </script>
                                                            </div>
											            </div>
											            <div class="tab-pane fade" id="notaFiscalTabContentDadosGerais">
												            <div class="row">
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.CodigoTipoCompra, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.CodigoTipoCompra, Model.ListaTipoCompra, string.Empty)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.CodigoTipoCompra, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.CifFobId, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.CifFobId, Model.ListaCifFob, string.Empty)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.CifFobId, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.CodigoNaturezaOperacao, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.CodigoNaturezaOperacao, Model.ListaNaturezaOperacao, string.Empty)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.CodigoNaturezaOperacao, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
                                                            <div class="row">
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.SerieNFId, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.SerieNFId, Model.ListaSerieNF, string.Empty)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.SerieNFId, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.CodigoCST, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.CodigoCST, Model.ListaCST, string.Empty)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.CodigoCST, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.CodigoContribuicaoId, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.EntradaMaterial.CodigoContribuicaoId, Model.ListaCodigoContribuicao, string.Empty)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.CodigoContribuicaoId, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
											            </div>
                                                        <div class="tab-pane fade" id="notaFiscalTabContentCodigoBarras">
                                                            <div class="row">
                                                                <section class="col col-12">
                                                                    @Html.LabelFor(m => m.EntradaMaterial.CodigoBarras, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.EntradaMaterial.CodigoBarras, new { @class = "text-right numeric", @maxlength = 50 })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.CodigoBarras, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
                                                        </div>
										            </div>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-12">
                                                    @Html.LabelFor(m => m.EntradaMaterial.Observacao, new { @class = "label" })
                                                    <label class="textarea">
                                                        @Html.TextAreaFor(m => m.EntradaMaterial.Observacao, new { rows = 4 })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.EntradaMaterial.Observacao, "", new { @class = "note note-error" })
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.EntradaMaterial.LoginUsuarioCadastro, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.LoginUsuarioCadastro, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.EntradaMaterial.DataCadastro, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.DataCadastro, "{0:dd/MM/yyyy}", new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.EntradaMaterial.LoginUsuarioLiberacao, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.LoginUsuarioLiberacao, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.EntradaMaterial.DataLiberacao, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.EntradaMaterial.DataLiberacao, "{0:dd/MM/yyyy}", new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                            @if (Model.PodeAdicionarItem) {
                                <div class="panel panel-default">
                                    <div class="panel-heading">
                                        <h4 class="panel-title">
                                            <a data-toggle="collapse" data-parent="#accordion" href="#collapseItensOrdemCompra" class="collapsed" id="btnItensOrdemCompra">
                                                <i class="fa fa-lg fa-angle-down pull-right"></i>
                                                <i class="fa fa-lg fa-angle-up pull-right"></i>
                                                Seleção de itens de ordem de compra
                                            </a>
                                        </h4>
                                    </div>
                                    <div id="collapseItensOrdemCompra" class="panel-collapse collapse">
                                        <div class="panel-body no-padding">
                                            <fieldset>
                                                <div class="row">
                                                    <section class="col col-12">
                                                        <button id="btnSelecionarItensOrdemCompra" type="button" class="btn btn-primary right">
                                                            Selecionar Item
                                                        </button>
                                                    </section>
                                                </div>
                                                <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
                                                    <table id="tableItensOrdemCompra" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                                        <thead>
                                                            <tr role="row">
                                                                <th><label class="checkbox"><input type="checkbox" id="chkSelecionarTodosItensOrdemCompra"><i></i>&nbsp;</label></th>
                                                                <th class="text-right">OC</th>
                                                                <th class="text-right">Item OC</th>
                                                                <th class="text-center">Data OC</th>
                                                                <th class="text-right">Material</th>
                                                                <th>Descrição</th>
                                                                <th>Complemento</th>
                                                                <th class="text-center">UN</th>
                                                                <th class="text-right" style="min-width: 70px;">Quantidade</th>
                                                                <th class="text-right" style="min-width: 70px;">Valor unitário</th>
                                                                <th>Classe</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </fieldset>
                                            <script type="text/javascript">
                                                $(document).ready(function () {
                                                    $('#btnItensOrdemCompra').on('click', function () {
                                                        $("#tableItensOrdemCompra tbody").empty();
                                                        if (!$('#collapseItensOrdemCompra').is(":visible")) {
                                                            if (houveAlteracao) {
                                                                smartAlert("Erro", "A Entrada de Material foi alterada.<br />Salve os dados antes de incluir novos itens.", "error");
                                                            }
                                                            else {
                                                                $.ajax({
                                                                    type: 'POST',
                                                                    url: '@Url.Action("ListarItensDeOrdemCompraLiberadaComSaldo", "EntradaMaterial")',
                                                                    cache: false,
                                                                    //async: false,
                                                                    contentType: 'application/json; charset=utf-8',
                                                                    data: JSON.stringify({
                                                                        entradaMaterialId: '@Html.DisplayFor(m => m.EntradaMaterial.Id)'
                                                                    })
                                                                })
                                                                .success(function (result) {
                                                                    if (result.errorMessage.length > 0)
                                                                        smartAlert("Erro", result.errorMessage, "error");
                                                                    else {
                                                                        fillTableItensOrdemCompra(JSON.parse(result.itens));
                                                                    }
                                                                });
                                                            }
                                                        }
                                                    });

                                                    $('#btnSelecionarItensOrdemCompra').on('click', function () {
                                                        adicionarItensSelecionados();
                                                    });

                                                    function adicionarItensSelecionados() {
                                                        var arrItemOC = [];
                                                        $('#tableItensOrdemCompra tbody input[type=checkbox]:checked').each(function () {
                                                            arrItemOC.push(parseInt($(this).val()));
                                                        });

                                                        if (arrItemOC.length > 0) {
                                                            $.SmartMessageBox({
                                                                title: "<i class='fa fa-question-circle txt-color-blue'></i> Confirma a inclusão do(s) iten(s) selecionado(s) na Entrada de Material?",
                                                                buttons: '[Não][Sim]'
                                                            }, function (ButtonPressed) {
                                                                if (ButtonPressed === "Sim") {
                                                                    $.ajax({
                                                                        type: 'POST',
                                                                        url: '@Url.Action("AdicionarItens", "EntradaMaterial")',
                                                                        cache: false,
                                                                        async: false,
                                                                        contentType: 'application/json; charset=utf-8',
                                                                        data: JSON.stringify({
                                                                            entradaMaterialId: '@Model.EntradaMaterial.Id',
                                                                            itens: arrItemOC
                                                                        })
                                                                    })
                                                                    .success(function (result) {
                                                                        var houveErro = false;
                                                                        $(result.Messages).each(function () {
                                                                            if (this.Type.toString() == '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Error)') {
                                                                                houveErro = true;
                                                                            }
                                                                        });

                                                                        if (!houveErro) {
                                                                            $('#@Html.IdFor(m => m.JsonItens)').val(result.Itens);
                                                                            fillTableItens();
                                                                            $('#btnItens').click();
                                                                            setTimeout(function () {
                                                                                $('html, body').animate({
                                                                                    scrollTop: $("#headerPanelItens").offset().top
                                                                                }, 500);
                                                                            }, 500);
                                                                        }

                                                                        showMessages(result.Messages);
                                                                    });
                                                                }
                                                            });
                                                        }
                                                        else
                                                            smartAlert("Erro", "Selecione pelo menos 1 item.", "error");
                                                    }

                                                    $('#chkSelecionarTodosItensOrdemCompra').on('change', function () {
                                                        checkOrUncheckAllItensOrdemCompra($(this).prop('checked'));
                                                    });

                                                    $(document).on('change', '.chkItemOrdemCompra', function () {
                                                        $('#chkSelecionarTodosItensOrdemCompra').prop('checked', isAllItensOrdemCompraChecked());
                                                    });
                                                });

                                                function isAllItensOrdemCompraChecked() {
                                                    var isAllChecked = true;
                                                    $($('#tableItensOrdemCompra tbody input[type=checkbox]').get().reverse()).each(function () {
                                                        if (!$(this).prop('checked')) {
                                                            isAllChecked = false;
                                                            return false;
                                                        }
                                                    });
                                                    return isAllChecked;
                                                }

                                                function checkOrUncheckAllItensOrdemCompra(checked) {
                                                    $($('#tableItensOrdemCompra input[type=checkbox]').get().reverse()).each(function () {
                                                        if (!$(this).is(":disabled")) {
                                                            $(this).prop("checked", checked);
                                                        }
                                                    });
                                                }

                                                function fillTableItensOrdemCompra(jsonItensOrdemCompra) {
                                                    for (var i = 0; i < jsonItensOrdemCompra.length; i++) {
                                                        var row = $('<tr />')
                                                        $("#tableItensOrdemCompra tbody").append(row);
                                                        row.append($('<td><label class="checkbox"><input type="checkbox" class="chkItemOrdemCompra" name="checkbox" value="' + jsonItensOrdemCompra[i].Id + '"><i></i>&nbsp;</label></td>'));
                                                        row.append($('<td class="text-right">' + jsonItensOrdemCompra[i].OrdemCompraId + '</td>'));
                                                        row.append($('<td class="text-right">' + jsonItensOrdemCompra[i].Sequencial + '</td>'));
                                                        row.append($('<td class="text-center">' + new Date(jsonItensOrdemCompra[i].DataOrdemCompra).toFormatDDMMYYYY() + '</td>'));
                                                        row.append($('<td class="text-right">' + jsonItensOrdemCompra[i].MaterialId + '</td>'));
                                                        row.append($('<td class="text-nowrap">' + jsonItensOrdemCompra[i].Material.Descricao + '</td>'));
                                                        row.append($('<td class="text-nowrap">' + jsonItensOrdemCompra[i].Complemento + '</td>'));
                                                        row.append($('<td class="text-center">' + jsonItensOrdemCompra[i].Material.SiglaUnidadeMedida + '</td>'));
                                                        row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItensOrdemCompra[i].Saldo), 5) + '</td>'));
                                                        row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItensOrdemCompra[i].ValorUnitario), 5) + '</td>'));
                                                        row.append($('<td class="text-nowrap">' + jsonItensOrdemCompra[i].Classe.ClasseDescricao + '</td>'));
                                                    }
                                                }
                                            </script>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="panel panel-default">
                                <div id="headerPanelItens" class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseItens" class="collapsed" id="btnItens">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Itens
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseItens" class="panel-collapse collapse">
                                    <div class="panel-body no-padding">
                                        <fieldset id="formItem">
                                            <div class="row">
                                                @Html.HiddenFor(m => m.Sequencial)
                                                <section class="col col-6" style="margin: 0;">
                                                    @Html.HiddenFor(m => m.Material.Id)
                                                    <section class="col col-10" style="padding-left: 0;">
                                                        @Html.LabelFor(m => m.Material.Descricao, "Material", new { @class = "label" })
                                                        <label class="input">
                                                            @Html.TextBoxFor(m => m.Material.Descricao, new { @readonly = "", @class = "readonly" })
                                                        </label>
                                                    </section>
                                                    <section class="col col-2" style="padding-right: 0;">
                                                        @Html.LabelFor(m => m.Material.SiglaUnidadeMedida, "UN", new { @class = "label" })
                                                        <label class="input">
                                                            @Html.TextBoxFor(m => m.Material.SiglaUnidadeMedida, new { @readonly = "", @class = "readonly" })
                                                        </label>
                                                    </section>
                                                    @Html.ValidationMessageFor(m => m.Material.Id, "", new { @id = Html.IdFor(m => m.Material.Id) + "_ValidationMessage", @class = "note note-error" })
                                                </section>
                                                <section class="col col-6">
                                                    @Html.LabelFor(m => m.Complemento, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Complemento, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-2">
                                                    @Html.LabelFor(m => m.Classe.Codigo, "Classe", new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Classe.Codigo, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.Classe.Codigo, "", new { @id = Html.IdFor(m => m.Classe.Codigo) + "_ValidationMessage", @class = "note note-error" })
                                                </section>
                                                <section class="col col-4">
                                                    <label class="label" for="@Html.IdFor(m => m.Classe.Descricao)">&nbsp;</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Classe.Descricao, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-12" style="margin-top:15px;">
                                                    <ul id="itemTab" class="nav nav-tabs bordered">
											            <li class="active">
                                                            <a href="#itemTabContentDadosGerais" data-toggle="tab">Dados Gerais</a>
											            </li>
											            <li>
												            <a href="#itemTabContentImpostos" data-toggle="tab">Impostos</a>
											            </li>
                                                        <li>
												            <a href="#itemTabContentComplementos" data-toggle="tab">Complementos</a>
											            </li>
										            </ul>
                                                    <div id="itemTabContent" class="tab-content padding-10">
											            <div class="tab-pane fade active in" id="itemTabContentDadosGerais">
                                                            @Html.HiddenFor(m => m.Saldo)
                                                            @Html.HiddenFor(m => m.QuantidadeInicial)
                                                            <div class="row">
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.Quantidade, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.Quantidade, "{0:F4}", new { @class = "text-right decimal-4-casas required" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.Quantidade, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.ValorUnitario, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.ValorUnitario, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ValorUnitario, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.PercentualDesconto, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.PercentualDesconto, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.PercentualDesconto, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-3">
                                                                    @Html.LabelFor(m => m.ValorTotal, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.ValorTotal, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ValorTotal, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
											            </div>
											            <div class="tab-pane fade" id="itemTabContentImpostos">
												            <div class="row">
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.BaseICMS, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.BaseICMS, "{0:F4}", new { @class = "text-right decimal-4-casas" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.BaseICMS, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.PercentualICMS, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.PercentualICMS, "{0:F4}", new { @class = "text-right decimal-4-casas" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.PercentualICMS, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.ValorICMS, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.ValorICMS, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ValorICMS, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
                                                            <div class="row">
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.BaseIPI, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.BaseIPI, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.BaseIPI, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.PercentualIPI, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.PercentualIPI, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.PercentualIPI, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.ValorIPI, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.ValorIPI, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ValorIPI, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
                                                            <div class="row">
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.BaseICMSST, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.BaseICMSST, "{0:F4}", new { @class = "text-right decimal-4-casas" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.BaseICMSST, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.PercentualICMSST, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.PercentualICMSST, "{0:F4}", new { @class = "text-right decimal-4-casas" })
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.PercentualICMSST, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.ValorICMSST, new { @class = "label" })
                                                                    <label class="input">
                                                                        @Html.TextBoxFor(m => m.ValorICMSST, "{0:F4}", new { @readonly = "", @class = "text-right decimal-4-casas readonly" })
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ValorICMSST, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
											            </div>
                                                        <div class="tab-pane fade" id="itemTabContentComplementos">
                                                            <div class="row">
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.ComplementoNaturezaOperacao.Codigo, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.ComplementoNaturezaOperacao.Codigo, Model.ListaComplementoNaturezaOperacao, string.Empty)
                                                                        @Html.HiddenFor(m => m.ComplementoNaturezaOperacao.Descricao)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ComplementoNaturezaOperacao.Codigo, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.ComplementoCST.Codigo, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.ComplementoCST.Codigo, Model.ListaComplementoCST, string.Empty)
                                                                        @Html.HiddenFor(m => m.ComplementoCST.Descricao)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.ComplementoCST.Codigo, "", new { @class = "note note-error" })
                                                                </section>
                                                                <section class="col col-4">
                                                                    @Html.LabelFor(m => m.NaturezaReceita.Codigo, new { @class = "label" })
                                                                    <label class="select">
                                                                        @Html.DropDownListFor(m => m.NaturezaReceita.Codigo, Model.ListaNaturezaReceita, string.Empty)
                                                                        @Html.HiddenFor(m => m.NaturezaReceita.Descricao)
                                                                        <i></i>
                                                                    </label>
                                                                    @Html.ValidationMessageFor(m => m.NaturezaReceita.Codigo, "", new { @class = "note note-error" })
                                                                </section>
                                                            </div>
                                                        </div>
										            </div>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-6">
                                                    @{
                                                        string disableBtnAddItem = string.Empty;
                                                        if (!Model.PodeAdicionarItem)
                                                        {
                                                            disableBtnAddItem = "disabled";
                                                        }
                                                    }
                                                    <button id="btnAddItem" type="button" class="btn btn-primary @disableBtnAddItem">
                                                        Adicionar Item
                                                    </button>

                                                    @{
                                                        string disableBtnRemoverItem = string.Empty;
                                                        if (!Model.PodeRemoverItem)
                                                        {
                                                            disableBtnRemoverItem = "disabled";
                                                        }
                                                    }
                                                    <button id="btnRemoverItem" type="button" class="btn btn-danger @disableBtnRemoverItem">
                                                        Remover Item
                                                    </button>
                                                </section>
                                            </div>
                                            @Html.HiddenFor(m => m.JsonItens)
                                            <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; width:100%; overflow-x: auto;">
                                                <table id="tableItens" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                                    <thead>
                                                        <tr role="row">
                                                            <th class="text-center" style="min-width: 65px;">Item EM</th>
                                                            <th>OC</th>
                                                            <th>Item OC</th>
                                                            <th class="text-right">Material</th>
                                                            <th>Descrição</th>
                                                            <th>Complemento</th>
                                                            <th class="text-center">UN</th>
                                                            <th class="text-right">Quantidade</th>
                                                            <th class="text-right">Valor unitário</th>
                                                            <th>IPI %</th>
                                                            <th>Desconto %</th>
                                                            <th>Valor total</th>
                                                            <th>Classe de despesa</th>
                                                            <th>ICMS %</th>
                                                            <th>ICMSST %</th>
                                                            <th>Compl. natureza operação</th>
                                                            <th>Complemento CST</th>
                                                            <th>Natureza da receita</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </fieldset>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                fillTableItens();

                                                $(document).on('change', '#@Html.IdFor(m => m.EntradaMaterial.CodigoNaturezaOperacao)', function () {
                                                    $('#@Html.IdFor(m => m.ComplementoNaturezaOperacao.Codigo)').html('').append($('<option>').text('').attr('value', ''));
                                                    $.ajax({
                                                        type: 'POST',
                                                        url: '@Url.Action("ListaComplementoNaturezaOperacao", "EntradaMaterial")',
                                                        cache: false,
                                                        async: false,
                                                        contentType: 'application/json; charset=utf-8',
                                                        data: JSON.stringify({
                                                            codigoNaturezaOperacao: $(this).val()
                                                        })
                                                    })
                                                    .success(function (result) {
                                                        $.each(result, function (index, item) {
                                                            $('#@Html.IdFor(m => m.ComplementoNaturezaOperacao.Codigo)').append($('<option>').text(item.Descricao).attr('value', item.Codigo));
                                                        });
                                                    });
                                                });

                                                $('#btnAddItem').on('click', function () {
                                                    addItem();
                                                });

                                                $('#btnRemoverItem').on('click', function () {
                                                    if (houveAlteracao) {
                                                        smartAlert("Erro", "A Entrada de Material foi alterada.<br />Salve os dados antes de remover algum item.", "error");
                                                    }
                                                    else {
                                                        var arrItemEM = [];
                                                        $('#tableItens tbody input[type=checkbox]:checked').each(function () {
                                                            arrItemEM.push(parseInt($(this).val()));
                                                        });

                                                        if (arrItemEM.length > 0) {
                                                            $.SmartMessageBox({
                                                                title: "<i class='fa fa-question-circle txt-color-blue'></i> Confirma a exclusão do(s) iten(s) selecionado(s)?",
                                                                buttons: '[Não][Sim]'
                                                            }, function (ButtonPressed) {
                                                                if (ButtonPressed === "Sim") {
                                                                    $.ajax({
                                                                        type: 'POST',
                                                                        url: '@Url.Action("RemoverItens", "EntradaMaterial")',
                                                                        cache: false,
                                                                        async: false,
                                                                        contentType: 'application/json; charset=utf-8',
                                                                        data: JSON.stringify({
                                                                            entradaMaterialId: '@Model.EntradaMaterial.Id',
                                                                            itens: arrItemEM
                                                                        })
                                                                    })
                                                                    .success(function (result) {
                                                                        var houveErro = false;
                                                                        $(result.Messages).each(function () {
                                                                            if (this.Type.toString() == '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Error)') {
                                                                                houveErro = true;
                                                                            }
                                                                        });

                                                                        if (!houveErro) {
                                                                            $('#@Html.IdFor(m => m.JsonItens)').val(result.Itens);
                                                                            fillTableItens();
                                                                        }

                                                                        showMessages(result.Messages);
                                                                    });
                                                                }
                                                            });
                                                        }
                                                        else
                                                            smartAlert("Erro", "Selecione pelo menos 1 item.", "error");
                                                    }
                                                });

                                                $(document).on('change', '#@Html.IdFor(m => m.Quantidade)', function () {
                                                    if (validaQuantidadeItem())
                                                        atualizarValorTotalItem();
                                                });

                                                $(document).on('change', '#@Html.IdFor(m => m.BaseICMS)', function () {
                                                    atualizarValorICMS();
                                                });

                                                $(document).on('change', '#@Html.IdFor(m => m.PercentualICMS)', function () {
                                                    atualizarValorICMS();
                                                });

                                                $(document).on('change', '#@Html.IdFor(m => m.BaseICMSST)', function () {
                                                    atualizarValorICMSST();
                                                });

                                                $(document).on('change', '#@Html.IdFor(m => m.PercentualICMSST)', function () {
                                                    atualizarValorICMSST();
                                                });
                                            });

                                            function fillTableItens() {
                                                var jsonItens = JSON.parse($("#@Html.IdFor(m => m.JsonItens)").val());
                                                $("#tableItens tbody").empty();

                                                var chkDisabled = '';
                                                var labelClass = 'checkbox';
                                                @if (!Model.PodeRemoverItem)
                                                {
                                                    @:chkDisabled = 'disabled';
                                                    @:labelClass += ' state-disabled';
                                                }

                                                for (var i = 0; i < jsonItens.length; i++) {
                                                    var row = $('<tr />')
                                                    $("#tableItens tbody").append(row);
                                                    row.append($('<td><label class="' + labelClass + '"><input type="checkbox" class="chkItemOrdemCompra" name="checkbox" value="' + jsonItens[i].Id + '" ' + chkDisabled + '><i></i>' + jsonItens[i].Sequencial + '</label></td>'));
                                                    row.append($('<td class="text-right">' + jsonItens[i].OrdemCompraItem.OrdemCompraId + '</td>'));
                                                    row.append($('<td class="text-right">' + jsonItens[i].OrdemCompraItem.Id + '</td>'));
                                                    row.append($('<td class="text-right">' + jsonItens[i].OrdemCompraItem.Material.Id + '</td>'));
                                                    @if (Model.PodeEditarItem)
                                                    {
                                                        @:row.append($('<td class="text-nowrap" onclick="loadItem(' + jsonItens[i].Sequencial + ');">' + jsonItens[i].OrdemCompraItem.Material.Descricao + '</td>'));
	                                                }
                                                    else
                                                    {
                                                        @:row.append($('<td class="text-nowrap">' + jsonItens[i].OrdemCompraItem.Material.Descricao + '</td>'));
                                                    }
                                                    row.append($('<td class="text-nowrap">' + jsonItens[i].OrdemCompraItem.Complemento + '</td>'));
                                                    row.append($('<td class="text-center">' + jsonItens[i].OrdemCompraItem.Material.SiglaUnidadeMedida + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].Quantidade), 4) + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].ValorUnitario), 4) + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].PercentualIPI), 4) + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].PercentualDesconto), 4) + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].ValorTotal), 4) + '</td>'));
                                                    row.append($('<td class="text-nowrap">' + jsonItens[i].Classe.ClasseDescricao + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].PercentualICMS), 4) + '</td>'));
                                                    row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItens[i].PercentualICMSST), 4) + '</td>'));
                                                    if (jsonItens[i].ComplementoNaturezaOperacao)
                                                        row.append($('<td class="text-right">' + jsonItens[i].ComplementoNaturezaOperacao.Descricao + '</td>'));
                                                    else
                                                        row.append($('<td class="text-right">&nbsp;</td>'));

                                                    if (jsonItens[i].ComplementoCST)
                                                        row.append($('<td class="text-right">' + jsonItens[i].ComplementoCST.Descricao + '</td>'));
                                                    else
                                                        row.append($('<td class="text-right">&nbsp;</td>'));

                                                    if (jsonItens[i].NaturezaReceita)
                                                        row.append($('<td class="text-right">' + jsonItens[i].NaturezaReceita.Descricao + '</td>'));
                                                    else
                                                        row.append($('<td class="text-right">&nbsp;</td>'));
                                                }
                                            }

                                            function loadItem(sequencial) {
                                                clearFormItem();
                                                var jsonItens = JSON.parse($("#@Html.IdFor(m => m.JsonItens)").val());
                                                var arr = jQuery.grep(jsonItens, function (item, i) {
                                                    return (item.Sequencial == sequencial);
                                                });

                                                if (arr.length > 0) {
                                                    var item = arr[0];
                                                    $("#@Html.IdFor(m => m.Sequencial)").val(item.Sequencial);
                                                    $("#@Html.IdFor(m => m.Material.Id)").val(item.OrdemCompraItem.Material.Id);
                                                    $("#@Html.IdFor(m => m.Material.Descricao)").val(item.OrdemCompraItem.Material.Descricao);
                                                    $("#@Html.IdFor(m => m.Material.SiglaUnidadeMedida)").val(item.OrdemCompraItem.Material.SiglaUnidadeMedida);
                                                    $("#@Html.IdFor(m => m.Complemento)").val(item.Complemento);
                                                    $("#@Html.IdFor(m => m.Classe.Codigo)").val(item.Classe.Codigo);
                                                    $("#@Html.IdFor(m => m.Classe.Descricao)").val(item.Classe.Descricao);
                                                    $("#@Html.IdFor(m => m.Saldo)").val(roundDecimal(floatToString(item.OrdemCompraItem.Saldo), 4));
                                                    $("#@Html.IdFor(m => m.QuantidadeInicial)").val(roundDecimal(floatToString(item.QuantidadeInicial), 4));
                                                    $("#@Html.IdFor(m => m.Quantidade)").val(roundDecimal(floatToString(item.Quantidade), 4));
                                                    $("#@Html.IdFor(m => m.ValorUnitario)").val(roundDecimal(floatToString(item.ValorUnitario), 4));
                                                    $("#@Html.IdFor(m => m.PercentualDesconto)").val(roundDecimal(floatToString(item.PercentualDesconto), 4));
                                                    $("#@Html.IdFor(m => m.ValorTotal)").val(roundDecimal(floatToString(item.ValorTotal), 2));
                                                    $("#@Html.IdFor(m => m.BaseICMS)").val(roundDecimal(floatToString(item.BaseICMS), 4));
                                                    $("#@Html.IdFor(m => m.PercentualICMS)").val(roundDecimal(floatToString(item.PercentualICMS), 4));
                                                    $("#@Html.IdFor(m => m.ValorICMS)").val(roundDecimal(floatToString(item.BaseICMS * item.PercentualICMS / 100), 4));
                                                    $("#@Html.IdFor(m => m.BaseIPI)").val(roundDecimal(floatToString(item.BaseIPI), 4));
                                                    $("#@Html.IdFor(m => m.PercentualIPI)").val(roundDecimal(floatToString(item.PercentualIPI), 4));
                                                    $("#@Html.IdFor(m => m.ValorIPI)").val(roundDecimal(floatToString(item.BaseIPI * item.PercentualIPI / 100), 4));
                                                    $("#@Html.IdFor(m => m.BaseICMSST)").val(roundDecimal(floatToString(item.BaseICMSST), 4));
                                                    $("#@Html.IdFor(m => m.PercentualICMSST)").val(roundDecimal(floatToString(item.PercentualICMSST), 4));
                                                    $("#@Html.IdFor(m => m.ValorICMSST)").val(roundDecimal(floatToString(item.BaseICMSST * item.PercentualICMSST / 100), 4));
                                                    
                                                    if (item.ComplementoNaturezaOperacao)
                                                        $("#@Html.IdFor(m => m.ComplementoNaturezaOperacao.Codigo)").val(item.ComplementoNaturezaOperacao.Codigo);

                                                    if (item.ComplementoCST)
                                                        $("#@Html.IdFor(m => m.ComplementoCST.Codigo)").val(item.ComplementoCST.Codigo);

                                                    if (item.NaturezaReceita)
                                                        $("#@Html.IdFor(m => m.NaturezaReceita.Codigo)").val(item.NaturezaReceita.Codigo);

                                                    if (item.BaseICMS == 0)
                                                        $("#@Html.IdFor(m => m.BaseICMS)").val(roundDecimal(floatToString(item.ValorTotal), 4));

                                                    if (item.BaseICMSST == 0)
                                                        $("#@Html.IdFor(m => m.BaseICMSST)").val(roundDecimal(floatToString(item.ValorTotal), 4));

                                                    if (item.BaseIPI == 0)
                                                        $("#@Html.IdFor(m => m.BaseIPI)").val(roundDecimal(floatToString(item.ValorTotal), 4));
                                                }
                                            }


                                            function validaQuantidadeItem() {
                                                if ($('#@Html.IdFor(m => m.Sequencial)').val() != '' && $('#@Html.IdFor(m => m.Sequencial)').val() != '0') {
                                                    var quantidade = parseFloat($("#@Html.IdFor(m => m.Quantidade)").val().replace(".", "").replace(",", "."));
                                                    var saldo = parseFloat($("#@Html.IdFor(m => m.Saldo)").val().replace(".", "").replace(",", "."));
                                                    var quantidadeInicial = parseFloat($("#@Html.IdFor(m => m.QuantidadeInicial)").val().replace(".", "").replace(",", "."));

                                                    if (isNaN(quantidade) || (quantidade <= 0)) {
                                                        smartAlert("Erro", "A quantidade dever ser maior que zero.", "error");
                                                        return false;
                                                    }
                                                    else if (quantidade > (saldo + quantidadeInicial)) {
                                                        smartAlert("Erro", "Quantidade maior que a pendente.", "error");
                                                        return false;
                                                    }
                                                }
                                                else
                                                    return false;

                                                return true;
                                            }

                                            function atualizarValorTotalItem() {
                                                var quantidade = parseFloat($("#@Html.IdFor(m => m.Quantidade)").val().replace(".", "").replace(",", "."));
                                                var valorUnitario = parseFloat($("#@Html.IdFor(m => m.ValorUnitario)").val().replace(".", "").replace(",", "."));
                                                var baseIPI = parseFloat($("#@Html.IdFor(m => m.BaseIPI)").val().replace(".", "").replace(",", "."));
                                                var percentualIPI = parseFloat($("#@Html.IdFor(m => m.PercentualIPI)").val().replace(".", "").replace(",", "."));
                                                var percentualDesconto = parseFloat($("#@Html.IdFor(m => m.PercentualDesconto)").val().replace(".", "").replace(",", "."));

                                                var valorTotal = (quantidade * valorUnitario);
                                                valorTotal = valorTotal + ((baseIPI * percentualIPI) / 100)
                                                valorTotal = valorTotal - ((valorTotal * percentualDesconto) / 100)

                                                $("#@Html.IdFor(m => m.ValorTotal)").val(roundDecimal(floatToString(valorTotal), 2));
                                            }

                                            function atualizarValorICMS() {
                                                var baseICMS = parseFloat($("#@Html.IdFor(m => m.BaseICMS)").val().replace(".", "").replace(",", "."));
                                                var percentualICMS = parseFloat($("#@Html.IdFor(m => m.PercentualICMS)").val().replace(".", "").replace(",", "."));;
                                                $("#@Html.IdFor(m => m.ValorICMS)").val(roundDecimal(floatToString(baseICMS * percentualICMS / 100), 4));
                                            }

                                            function atualizarValorICMSST() {
                                                var baseICMSST = parseFloat($("#@Html.IdFor(m => m.BaseICMSST)").val().replace(".", "").replace(",", "."));
                                                var percentualICMSST = parseFloat($("#@Html.IdFor(m => m.PercentualICMSST)").val().replace(".", "").replace(",", "."));;
                                                $("#@Html.IdFor(m => m.ValorICMSST)").val(roundDecimal(floatToString(baseICMSST * percentualICMSST / 100), 4));
                                            }

                                            function processData(node) {
                                                var fieldId = node.getAttribute ? node.getAttribute('id') : '';
                                                var fieldName = node.getAttribute ? node.getAttribute('name') : '';

                                                if (fieldName != '' && (fieldId == "@Html.IdFor(m => m.ComplementoNaturezaOperacao.Descricao)")) {
                                                    return { name: fieldName, value: $("#@Html.IdFor(m => m.ComplementoNaturezaOperacao.Codigo) option:selected").text() };
                                                }

                                                if (fieldName != '' && (fieldId == "@Html.IdFor(m => m.ComplementoCST.Descricao)")) {
                                                    return { name: fieldName, value: $("#@Html.IdFor(m => m.ComplementoCST.Codigo) option:selected").text() };
                                                }

                                                if (fieldName != '' && (fieldId == "@Html.IdFor(m => m.NaturezaReceita.Descricao)")) {
                                                    return { name: fieldName, value: $("#@Html.IdFor(m => m.NaturezaReceita.Codigo) option:selected").text() };
                                                }

                                                if (fieldName != '' &&
                                                    (fieldId == "@Html.IdFor(m => m.Quantidade)"
                                                    || fieldId == "@Html.IdFor(m => m.ValorTotal)"
                                                    || fieldId == "@Html.IdFor(m => m.BaseICMS)"
                                                    || fieldId == "@Html.IdFor(m => m.PercentualICMS)"
                                                    || fieldId == "@Html.IdFor(m => m.ValorICMS)"
                                                    || fieldId == "@Html.IdFor(m => m.BaseIPI)"
                                                    || fieldId == "@Html.IdFor(m => m.PercentualIPI)"
                                                    || fieldId == "@Html.IdFor(m => m.ValorIPI)"
                                                    || fieldId == "@Html.IdFor(m => m.BaseICMSST)"
                                                    || fieldId == "@Html.IdFor(m => m.PercentualICMSST)"
                                                    || fieldId == "@Html.IdFor(m => m.ValorICMSST)")) {
                                                    var value = $("#" + fieldId).val();
                                                    return { name: fieldName, value: parseFloat(value.toString().replace(".", "").replace(",", ".")) };
                                                }

                                                return false;
                                            }

                                            function addItem() {
                                                var jsonObj = $("#formItem").toObject({ mode: 'combine', skipEmpty: false, nodeCallback: processData })

                                                //alert(item.ComplementoNaturezaOperacao.Descricao);

                                                $('#formItem').append(JSON.stringify(jsonObj));

                                                @*if (item["@Html.IdFor(m => m.Sequencial)"] == '') {
                                                    if (jsonItemArray.length == 0)
                                                        item["@Html.IdFor(m => m.Sequencial)"] = 1;
                                                    else
                                                        item["@Html.IdFor(m => m.Sequencial)"] = Math.max.apply(Math, jsonItemArray.map(function (o) { return o.Sequencial; })) + 1;
                                                }*@

                                                //item["Situacao"] = 0;
                                                //item["SituacaoDescricao"] = "Requisitado";
                                                //item["ListaRequisicaoMaterialItem"] = [];

                                                if (validaQuantidadeItem()) {
                                                    var jsonItens = JSON.parse($("#@Html.IdFor(m => m.JsonItens)").val());

                                                    $.each(jsonItens, function (i, item) {
                                                        if ($('#@Html.IdFor(m => m.Sequencial)').val() == item.Sequencial) {
                                                            item.Quantidade = jsonObj.Quantidade;
                                                            item.ValorTotal = jsonObj.ValorTotal;
                                                            item.BaseICMS = jsonObj.BaseICMS;
                                                            item.PercentualICMS = jsonObj.PercentualICMS;
                                                            item.ValorICMS = jsonObj.ValorICMS;
                                                            item.BaseIPI = jsonObj.BaseIPI;
                                                            item.PercentualIPI = jsonObj.PercentualIPI;
                                                            item.ValorIPI = jsonObj.ValorIPI;
                                                            item.BaseICMSST = jsonObj.BaseICMSST;
                                                            item.PercentualICMSST = jsonObj.PercentualICMSST;
                                                            item.ValorICMSST = jsonObj.ValorICMSST;
                                                            item.ComplementoNaturezaOperacao = jsonObj.ComplementoNaturezaOperacao;
                                                            item.ComplementoCST = jsonObj.ComplementoCST;
                                                            item.NaturezaReceita = jsonObj.NaturezaReceita;
                                                            return false;
                                                        }
                                                    });

                                                    $("#@Html.IdFor(m => m.JsonItens)").val(JSON.stringify(jsonItens));
                                                    fillTableItens();
                                                    @*$("#@Html.IdFor(m => m.ItemId)").val('');
                                                    $("#@Html.IdFor(m => m.Sequencial)").val('');
                                                    limpaCentroCusto();
                                                    limpaClasse();*@
                                                    clearFormItem();
                                                }

                                                function clearFormItem() {

                                                }
                                            }
                                        </script>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseFormasPagamentoOrdemCompra" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Seleção de formas de pagamento da ordem de compra
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseFormasPagamentoOrdemCompra" class="panel-collapse collapse">
                                    <div class="panel-body no-padding">
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.OrdemCompraId, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.OrdemCompraId, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.DataVencimento, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.DataVencimento, "{0:dd/MM/yyyy}", new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.DataVencimento, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.QuantidadeDiasAposEmissao, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.QuantidadeDiasAposEmissao)
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.DataVencimentoLiberado, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.DataVencimentoLiberado, "{0:dd/MM/yyyy}", new { @class = "required" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.DataVencimentoLiberado, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <script type="text/javascript">
                                                    $(document).ready(function () {
                                                        $('#@Html.IdFor(m => m.DataVencimentoLiberado)').datepicker({
                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                            changeMonth: true,
                                                            changeYear: true,
                                                            onClose: function (selectedDate) {
                                                                $(this).valid();
                                                            }
                                                        });
                                                    });
                                                </script>
                                                
                                            </div>
                                            <div class="row">
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.ValorParcela, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ValorParcela, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.ValorParcelaLiberado, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ValorParcelaLiberado, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-12">
                                                    <button id="btnAddFormaPagamento" type="button" class="btn btn-primary right">
                                                        Adicionar
                                                    </button>
                                                </section>
                                            </div>
                                            <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
                                                <table id="tableOrdemCompraFormaPagamento" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                                    <thead>
                                                        <tr role="row">
                                                            <th class="text-right">OC</th>
                                                            <th>Data vencimento</th>
                                                            <th>Valor parcela</th>
                                                            <th class="text-center">Compromisso</th>
                                                            <th class="text-right">Título pagar</th>
                                                            <th class="text-right">Data vencimento lib.</th>
                                                            <th>Valor liberado</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                            <div class="row">
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.ValorTotalEM, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ValorTotalEM, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.ValorTotalDistribuido, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ValorTotalDistribuido, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.ValorTotalPendente, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ValorTotalPendente, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.ValorTotalLiberado, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ValorTotalLiberado, new { @readonly = "", @class = "readonly" })
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="table-responsive" style="min-height: 85px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
                                                <table id="tableOrdemCompraValor" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                                    <thead>
                                                        <tr role="row">
                                                            <th class="text-right">OC</th>
                                                            <th>Valor da OC</th>
                                                            <th>Valor distribuído</th>
                                                            <th>Valor pendente</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseFormasPagamento" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Formas de pagamento
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseFormasPagamento" class="panel-collapse collapse">
                                    <div class="panel-body no-padding">
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-6">
                                                    @{
                                                    string disableBtnRemoverFormaPagamento = string.Empty;
                                                    if (!Model.PodeRemoverItem)
                                                    {
                                                        disableBtnRemoverFormaPagamento = "disabled";
                                                    }
                                                    }
                                                    <button id="btnRemoverFormaPagamento" type="button" class="btn btn-danger @disableBtnRemoverFormaPagamento">
                                                        Remover Forma de Pagamento
                                                    </button>
                                                </section>
                                            </div>
                                            <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; width:100%; overflow-x: auto;">
                                                <table id="tableFormaPagamento" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                                    <thead>
                                                        <tr role="row">
                                                            <th>OC</th>
                                                            <th>Data vencimento</th>
                                                            <th class="text-right">Valor</th>
                                                            <th>Tipo de compromisso</th>
                                                            <th>Liberado</th>
                                                            <th>Título</th>
                                                            <th>Antecipação</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseFrete" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Frete
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseFrete" class="panel-collapse collapse">
                                    <div class="panel-body no-padding">
                                        <fieldset>

                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseImpostos" class="collapsed">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Impostos
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseImpostos" class="panel-collapse collapse">
                                    <div class="panel-body no-padding">
                                        <fieldset>

                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <footer>
                            @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-primary" })
                            @{
                                                    string disableBtnCancelar = string.Empty;
                                                    if (!Model.PodeCancelarEntrada)
                                                    {
                                                        disableBtnCancelar = "disabled";
                                                    }
                            }
                            <a id="btnCancelarEntrada" href="#" class="btn btn-danger @disableBtnCancelar">Cancelar</a>
                            @if (Model.PodeCancelarEntrada)
                            {
                                <div class="modal fade" id="MotivoCancelamento_ModalPanel" tabindex="-1" role="dialog">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                                    &times;
                                                </button>
                                                <h4 class="modal-title">
                                                    Motivo do Cancelamento
                                                </h4>
                                            </div>
                                            <div class="modal-body">
                                                @if (Model.ExisteEstoqueParaCentroCusto && !Model.ExisteMovimentoNoEstoque)
                                                {
                                                    <article class="col-sm-12">
                                                        <div class="alert alert-info alert-block fade in">
                                                            <h4 class="alert-heading">Informação</h4>
                                                            O cancelamento não irá abater a quantidade do insumo no estoque.
                                                            Porque, quando da entrada desse insumo, o sistema não o incluiu no estoque.<br />
                                                            Em caso de dúvida, favor anotar o número da Entrada de Material e reportar a GIR.
                                                        </div>
                                                    </article>
                                                }
                                                <label class="textarea">
                                                    @Html.TextAreaFor(m => m.EntradaMaterial.MotivoCancelamento, new { @rows = "3" })
                                                </label>
                                            </div>
                                            <div class="modal-footer">
								                <button type="button" id="btnConfirmaCancelamentoEntrada" class="btn btn-primary">
									                Ok
								                </button>
							                </div>
                                        </div>
                                    </div>
                                    <script type="text/javascript">
                                        $("#btnCancelarEntrada").on("click", function (e) {
                                            e.preventDefault();
                                            $.ajax({
                                                type: 'POST',
                                                url: '@Url.Action("HaPossibilidadeCancelamentoEntradaMaterial", "EntradaMaterial")',
                                                cache: false,
                                                //async: false,
                                                contentType: 'application/json; charset=utf-8',
                                                data: JSON.stringify({
                                                    entradaMaterialId: '@Html.DisplayFor(m => m.EntradaMaterial.Id)'
                                                })
                                            })
                                            .success(function (result) {
                                                if (result.HaPossibilidadeCancelamentoEntradaMaterial)
                                                    $('#MotivoCancelamento_ModalPanel').modal('show');
                                                else {
                                                    var errorMessages = result.ErrorMessages;
                                                    if (errorMessages.length !== 0) {
                                                        for (var i = 0; i < errorMessages.length; i++)
                                                            smartAlert("Erro", errorMessages[i].Text, "error");
                                                    }
                                                }
                                            });
                                        });

                                        $("#btnConfirmaCancelamentoEntrada").on("click", function () {
                                            var motivo = $("#@Html.IdFor(m => m.EntradaMaterial.MotivoCancelamento)").val();
                                            if (motivo.length != 0) {
                                                $.ajax({
                                                    type: 'POST',
                                                    url: '@Url.Action("Cancelar", "EntradaMaterial")',
                                                    cache: false,
                                                    //async: false,
                                                    contentType: 'application/json; charset=utf-8',
                                                    data: JSON.stringify({
                                                        id: '@Html.DisplayFor(m => m.EntradaMaterial.Id)',
                                                        motivo: motivo
                                                    })
                                                })
                                                .success(function (result) {
                                                    $('#notificationMessages').html(result);
                                                });
                                            }
                                            else
                                                smartAlert("Erro", "@GIR.Sigim.Application.Resource.OrdemCompra.ErrorMessages.InformeMotivoCancelamentoEntradaMaterial", "error");
                                        });
                                    </script>
                                </div>
                            }

                            @{
                            var url = Url.Action("Imprimir", "EntradaMaterial") + "/" + @Html.DisplayFor(m => m.EntradaMaterial.Id);
                            }
                            @Html.EditorFor(m => m.PodeImprimir, "Imprimir", new { @url = url })
                            
                            @{
                            string disableBtnSalvar = string.Empty;
                            if (!Model.PodeSalvar)
                            {
                                disableBtnSalvar = "disabled";
                            }
                            }
                            <button id="btnSalvar" type="submit" class="btn btn-primary right @disableBtnSalvar">
                                Salvar
                            </button>
                        </footer>
                    }
                </div>
            </div>
        </div>
    </article>
</div>
<script type="text/javascript">
    var houveAlteracao = false;
    $(document).ready(function () {
        $('#btnLiberarTitulos').on("click", function () {
            $.SmartMessageBox({
                title: "<i class='fa fa-question-circle txt-color-blue'></i> Confirma a liberação dos títulos para o Financeiro?",
                content: "Esta ação não poderá ser revertida.",
                buttons: '[Não][Sim]'
            }, function (ButtonPressed) {
                if (ButtonPressed === "Sim") {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("LiberarTitulos", "EntradaMaterial")',
                        cache: false,
                        async: false,
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify({
                            id: '@Model.EntradaMaterial.Id'
                        })
                    })
                    .success(function (result) {
                        $('#notificationMessages').html(result);
                    })
                }
            });
        });
    });

    function showMessages(messages) {
        $(messages).each(function () {
            var typeMessage = '';
            var titleMessage = '';
            switch (this.Type.toString()) {
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Info)':
                    typeMessage = 'info';
                    titleMessage = 'Informação';
                    break;
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Success)':
                    typeMessage = 'success';
                    titleMessage = 'Sucesso';
                    break;
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Warning)':
                    typeMessage = 'warning';
                    titleMessage = 'Alerta';
                    break;
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Error)':
                default:
                    typeMessage = 'error';
                    titleMessage = 'Erro';
                    break;
            }
            smartAlert(titleMessage, this.Text, typeMessage);
        });
    }
</script>