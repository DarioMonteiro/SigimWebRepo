@model GIR.Sigim.Presentation.WebUI.Areas.Admin.ViewModel.PerfilViewModel

@{
    ViewBag.Title = "Perfil";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    <a href="javascript:novo();" class="btn btn-primary" style="float:right;">Novo</a>
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Cadastro",
                            "Perfil",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "refresh", UpdateTargetId = "notificationMessages" },
                            new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                    <div class="panel-body no-padding">
                        <fieldset>
                            <div class="row">
                                <section class="col col-12">
                                    @Html.HiddenFor(m => m.Perfil.Id)
                                    @Html.LabelFor(m => m.Perfil.Descricao, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.Perfil.Descricao, new { @maxlength = "100",  @class = "required" })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.Perfil.Descricao, "", new { @class = "note note-error" })
                                </section>
                                <section class="col col-6">
                                    @Html.LabelFor(m => m.Perfil.ModuloId, new { @class = "label" })
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.Perfil.ModuloId, Model.ListaModulo, string.Empty, new { @class = "disabled" })<i></i>
                                    </label>
                                </section>
                            </div>
                        </fieldset>
                        <fieldset id="formItem">
                            @Html.HiddenFor(m => m.JsonFuncionalidadesModulo)
                            @Html.HiddenFor(m => m.JsonFuncionalidadesPerfil)
                            <div class="row">
                                <section class="col col-5">
                                    <label class="checkbox">
								    <input type="checkbox" name="checkbox" checked="checked" id="chkMarcaTodos">
								    <i></i>Marca todos</label>
                                </section>
                            </div>

                            <div class="table-responsive" style="min-height: 115px; height:450px;  border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto; overflow-y: auto;">
                                <table id="tableItens" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                    <thead>
                                        <tr role="row">
                                            <th class="text-center" style="width: 30px;">...</th>
                                            <th class="text-left">Funcionalidade</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>

                        </fieldset>
                    </div>
                    <footer>
                        @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-primary" })
                        @{
                            string disableBtnDeletar = string.Empty;
                            if (!Model.PodeDeletar)
                            {
                                disableBtnDeletar = "disabled";
                            }
                        }
                        <button type="button" id="btnDeletar" class="btn btn-danger @disableBtnDeletar">
                            Deletar
                        </button>
                        @{
                            string disableBtnSalvar = string.Empty;
                            if (!Model.PodeSalvar)
                            {
                                disableBtnSalvar = "disabled";
                            }
                        }
                        <button type="submit" class="btn btn-primary @disableBtnSalvar">
                            Salvar
                        </button>
                    </footer>
                    }
                </div>
            </div>
        </div>
    </article>
</div>

<script type="text/javascript">
    jsonFuncionalidadesModuloArray = JSON.parse($("#@Html.IdFor(m => m.JsonFuncionalidadesModulo)").val());
    jsonFuncionalidadesPerfilArray = JSON.parse($("#@Html.IdFor(m => m.JsonFuncionalidadesPerfil)").val());

    $(document).ready(function ()
    {
        $("#@Html.IdFor(m => m.Perfil.ModuloId)").prop('disabled', false);
        carregaFuncionalidades(true);
        $('#chkMarcaTodos').prop('checked', false);

        $("#@Html.IdFor(m => m.Perfil.ModuloId)").on("change", function ()
        {
            jsonFuncionalidadesPerfilArray = [];
            carregaFuncionalidades(true);
        });

        $("#chkMarcaTodos").on("change", function ()
        {
            marcaDesmarcaCheckBox($(this).is(':checked'));
        });

        $("#btnDeletar").on("click", function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Deletar", "Perfil")',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    Id: $('#@Html.IdFor(m => m.Perfil.Id)').val()
                })
            })
            .success(function (result) {
                $('#notificationMessages').html(result);
                clearForm();
            });
        });

    });

    function clearForm()
    {
        $('#@Html.IdFor(m => m.Perfil.Id)').val(0);
        $('#@Html.IdFor(m => m.Perfil.Descricao)').val('');
        $('#@Html.IdFor(m => m.Perfil.ModuloId)').val(0);
        jsonFuncionalidadesModuloArray = [];
        jsonFuncionalidadesPerfilArray = [];
        $('#chkMarcaTodos').prop('checked', false);
        $("#@Html.IdFor(m => m.Perfil.ModuloId)").prop('disabled', false);
        $("#tableItens tbody").empty();
    }

    function novo()
    {
        clearForm();
        limpaMsg();
    }

    function limpaMsg()
    {
        $('#notificationMessages').html('');
        $('#Perfil_Descricao-error').remove();
        $('#CentroCusto_Codigo-error').remove();
    }

    function refresh()
    {
        onSuccess();
    }

    function carregaFuncionalidades(bolLimpaMsg)
    {
        $("#tableItens tbody").empty();
        var moduloId = $('#@Html.IdFor(m => m.Perfil.ModuloId)').val();
        if (moduloId != 0)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CarregarFuncionalidades", "Perfil")',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    moduloId: moduloId
                })
            })
            .success(function (result) {
                if (bolLimpaMsg == true) { limpaMsg(); }
                jsonFuncionalidadesModuloArray = result;
                $("#@Html.IdFor(m => m.JsonFuncionalidadesModulo)").val(JSON.stringify(result));
                $('#chkMarcaTodos').prop('checked', false);
                fillTable();
                goToTop();
            });
        }
    };

    function fillTable()
    {
        $("#tableItens tbody").empty();
        $("#tableItens tbody").click
        $.each(jsonFuncionalidadesModuloArray, function (index, objModulo) {
            var row = $('<tr />')
            $("#tableItens tbody").append(row);
            var chkDisabled = '';
            var labelClass = 'checkbox';
            var chkChecked = '';

            $.each(jsonFuncionalidadesPerfilArray, function (index, objPerfil) {
                if (objModulo.Codigo == objPerfil.Funcionalidade)
                {
                    chkChecked = 'checked';
                }
            })

            row.append($('<td><label class="' + labelClass + '"><input type="checkbox" name="FuncionalidadeMarcada" ' + chkChecked + ' value="' + objModulo.Codigo + '" ' + chkDisabled + '><i></i>' + '' + '</label></td>'));
            row.append($('<td class="text-left">' + objModulo.Descricao + '</td>'));
        })

        if ($('#@Html.IdFor(m => m.Perfil.Id)').val() != 0)
        {
            $("#@Html.IdFor(m => m.Perfil.ModuloId)").prop('disabled', true);
        }
        
    }

    function marcaDesmarcaCheckBox(condicao)
    {
        var arrSequencial = [];
        var index;
        $($('#tableItens input[type=checkbox]').get().reverse()).each(function () {
            $(this).prop("checked", condicao);
        });
    }

</script>