@using GIR.Sigim.Application.Adapter;
@using GIR.Sigim.Application.DTO.Sigim;

@model GIR.Sigim.Presentation.WebUI.Areas.Contrato.ViewModel.LiberacaoContratoLiberacaoViewModel

@{
    ViewBag.Title = "Liberação";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <header>
                <h2 id="cabLiberacao"></h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Liberacao",
                            "LiberacaoContrato",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "refresh", UpdateTargetId = "notificationMessages" },
                            new { @id = "formLiberacao", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(m => m.JsonListaItemLiberacao)
                        @Html.HiddenFor(m => m.PodeHabilitarBotoes)
                        @Html.HiddenFor(m => m.PodeAprovarLiberar)
                        @Html.HiddenFor(m => m.PodeAprovar)
                        @Html.HiddenFor(m => m.PodeLiberar)
                        @Html.HiddenFor(m => m.PodeCancelarLiberacao)
                        @Html.HiddenFor(m => m.PodeAssociarNotaFiscal)
                        @Html.HiddenFor(m => m.PodeAlterarDataVencimento)
                        @Html.HiddenFor(m => m.PodeImprimirMedicao)
                        @Html.HiddenFor(m => m.ContratoRetificacao.Id)
                        @Html.HiddenFor(m => m.PodeConcluirContrato)
                        @Html.HiddenFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)
                       
                        <div class="panel-group smart-accordion-default" id="accordion">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseContrato" class="">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Contrato
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseContrato" class="panel-collapse collapse in">
                                    <div class="panel-body no-padding">
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-6">
                                                    <label class="label">Contrato</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.ContratoRetificacaoItemMedicao.ContratoId, new { @class="readonly", @readonly = "" })  
                                                    </label>
                                                </section>
                                                <section class="col col-6">
                                                    <label class="label">Descrição Contrato</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Contrato.ContratoDescricao.Descricao, new { @class="readonly", @readonly = "" })  
                                                    </label>
                                                </section>
                                            </div>
                                            <div class="row">
                                                <section class="col col-12">
                                                    @Html.LabelFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId, new { @class = "label" })
                                                    <label class="select">
                                                        @Html.DropDownListFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId, Model.ListaServicoContratoRetificacaoItem, "" ,new {@class="required", @novalidate = "novalidate" })
                                                        <i></i>
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId, "", new { @id = Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId) + "_ValidationMessage", @class = "note note-error" })
                                                </section>
                                            </div>
                                            <fieldset>
                                                <legend>Resumo</legend>
                                                <div class="row">
                                                        <section class="col col-4">
                                                            @Html.LabelFor(m => m.Resumo.ValorContratado, new { @class = "label" })
                                                            <label class="input">
                                                                @Html.TextBoxFor(m => m.Resumo.ValorContratado, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                            </label>
                                                        </section>
                                                        <section class="col col-4">
                                                            @Html.LabelFor(m => m.Resumo.ValorRetidoContrato, new { @class = "label" })
                                                            <label class="input">
                                                                @Html.TextBoxFor(m => m.Resumo.ValorRetidoContrato, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                            </label>
                                                        </section>
                                                        <section class="col col-4">
                                                            @Html.LabelFor(m => m.Resumo.ValorProvisionado, new { @class = "label" })
                                                            <label class="input">
                                                                @Html.TextBoxFor(m => m.Resumo.ValorProvisionado, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                            </label>
                                                        </section>                                               
                                                </div>
                                                <div class="row">
                                                    <section class="col col-4">
                                                        @Html.LabelFor(m => m.Resumo.ValorMedido, new { @class = "label" })
                                                        <label class="input">
                                                            @Html.TextBoxFor(m => m.Resumo.ValorMedido, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                        </label>
                                                    </section>
                                                    @{
                                                        string propStyle = "font-weight:bold";
                                                        if (Model.Resumo.Diferenca < 0)
                                                        {
                                                            propStyle = "font-weight:bold; color:red";
                                                        }
                                                    }
                                                    <section class="col col-4">
                                                        @Html.LabelFor(m => m.Resumo.Diferenca, new { @class = "label" })
                                                        <label class="input">
                                                            @Html.TextBoxFor(m => m.Resumo.Diferenca, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style=@propStyle})  
                                                        </label>
                                                    </section>
                                                </div>
                                                <div class="row">
                                                        <section class="col col-4">
                                                            @Html.LabelFor(m => m.Resumo.AguardandoLiberacao, new { @class = "label" })
                                                            <label class="input">
                                                                @Html.TextBoxFor(m => m.Resumo.AguardandoLiberacao, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                            </label>
                                                        </section>
                                                        <section class="col col-4">
                                                            @Html.LabelFor(m => m.Resumo.Retido, new { @class = "label" })
                                                            <label class="input">
                                                                @Html.TextBoxFor(m => m.Resumo.Retido, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                            </label>
                                                        </section>
                                                        <section class="col col-4">
                                                            @Html.LabelFor(m => m.Resumo.Liberado, new { @class = "label" })
                                                            <label class="input">
                                                                @Html.TextBoxFor(m => m.Resumo.Liberado, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                            </label>
                                                        </section>
                                                
                                                </div>
                                                <div class="row">
                                                    <section class="col col-4">
                                                        @Html.LabelFor(m => m.Resumo.RetencaoLiberada, new { @class = "label" })
                                                        <label class="input">
                                                            @Html.TextBoxFor(m => m.Resumo.RetencaoLiberada, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                        </label>
                                                    </section>
                                                    <section class="col col-4">
                                                        @Html.LabelFor(m => m.Resumo.Saldo, new { @class = "label" })
                                                        <label class="input">
                                                            @Html.TextBoxFor(m => m.Resumo.Saldo, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                        </label>
                                                    </section>
                                                </div>
                                            </fieldset>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseLiberacao" class="collapsed" id="accordionLiberacao">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Liberação
                                        </a>
                                    </h4>
                                </div>
                                <div id="collapseLiberacao" class="panel-collapse collapse" style="height: 0px;">
                                    <div class="panel-body no-padding">
                                        <div class="btn-toolbar">
                                            <a class="btn btn-default btn-xs disabled" id="btnAprovarLiberar" href="javascript:tratarAprovarLiberar();">Aprovar e Liberar</a>
                                            <a class="btn btn-default btn-xs disabled" id="btnAprovar" href="javascript:tratarAprovar();">Aprovar</a>
                                            <a class="btn btn-default btn-xs disabled" id="btnLiberar" href="javascript:tratarLiberar();">Liberar</a>
                                            <a class="btn btn-default btn-xs disabled" id="btnCancelarLiberacao" href="javascript:tratarCancelar();">Cancelar Liberação</a>
                                            <a data-toggle="modal" class="btn btn-default btn-xs disabled" id="btnAssociarNF" href="#associarNotaFiscal_ModalPanel">Associar NF</a>
                                            <a class="btn btn-default btn-xs disabled" id="btnAlterarVencimento" href="javascript:validarTrocarDataVencimento();">Alterar Vencimento</a>
                                            <a data-toggle="modal" class="btn btn-default btn-xs disabled" id="btnImprimirMedicao" href="#formatoImpressaoMedicao_ModalPanel">Imprimir Medição</a>
                                            @if (Model.PodeImprimirMedicao) {
                                                <div class="modal fade" id="formatoImpressaoMedicao_ModalPanel" tabindex="-1" role="dialog">
                                                    <div class="modal-dialog">
                                                        <div class="modal-content">
                                                            <div class="modal-header">
                                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                                                    &times;
                                                                </button>
                                                                <h4 class="modal-title">
                                                                    Formato do Arquivo para Impressão
                                                                </h4>
                                                            </div>
                                                            <div class="modal-body">
                                                                <div class="row">
                                                                    <div class="col col-12">
                                                                        @{
                                                                            var listaFormatoExportacaoArquivo = new SelectList(typeof(FormatoExportacaoArquivo).ToItemListaDTO(), "Id", "Descricao", (int)FormatoExportacaoArquivo.PDF);
                                                                            foreach (var item in listaFormatoExportacaoArquivo)
	                                                                        {
                                                                                var itemChecked = string.Empty;
                                                                                if (item.Selected)
                                                                                {
                                                                                    itemChecked = "checked=\"checked\"";
                                                                                }
                                                                                @:<label class="radio">
							                                                    @:  <input type="radio" name="formatoExportacaoArquivo" value="@item.Value" @itemChecked>
							                                                    @:  <i></i>@item.Text
                                                                                @:</label>
	                                                                        }
                                                                        }
					                                                </div>
                                                                </div>
                                                            </div>
                                                            <div class="modal-footer">
					                                            <button type="button" id="btnConfirmarImpressaoMedicao" class="btn btn-primary" data-dismiss="modal">
						                                            Ok
					                                            </button>
				                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        <div class="widget-body">
                                            <hr class="simple">
                                            <div id="divTableItens" class="table-responsive" style="min-height: 115px; height:320px; width: auto;  border: 1px solid #ddd; margin-bottom: 13px; overflow: auto;">
                                                <table id="tableItens" class="table table-bordered table-condensed table-hover datatable" style="font-size:11px;">
                                                    <thead>
                                                        <tr role="row">
                                                            <th class="text-left" style="min-width: 45px;">Item</th>
                                                            <th class="text-left" style="min-width: 65px;">Medição</th>
                                                            <th class="text-left" style="min-width: 83px;">Vencimento</th>
                                                            <th class="text-left" style="min-width: 80px;">Tipo documento</th>
                                                            <th class="text-left" style="min-width: 80px;">Nº documento</th>
                                                            <th class="text-left" style="min-width: 70px;">Emissão</th>
                                                            <th class="text-left" style="min-width: 125px;">Situação</th>
                                                            <th class="text-left" style="min-width: 70px;">Valor</th>
                                                            <th class="text-left" style="min-width: 85px;">Valor retido</th>
                                                            <th class="text-left" style="min-width: 80px;">Resp. medição</th>
                                                            <th class="text-left" style="min-width: 50px;">Título</th>
                                                            <th class="text-left" style="min-width: 70px;">Liberação</th>
                                                            <th class="text-left" style="min-width: 75px;">Resp. liberação</th>
                                                            <th class="text-left" style="min-width: 250px;">Evento</th>
                                                            <th class="text-left" style="min-width: 70px;">Data cadastro</th>
                                                            <th class="text-left" style="min-width: 70px;">Avaliação</th>
                                                            <th class="text-left" style="display:none;">Posição na lista</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    <h5 style="padding-left:10px;">Total Selecionado</h5>
                                    <div class="row">
                                        <section class="col col-6">
                                            <section class="col col-6">
                                                @Html.LabelFor(m => m.Resumo.TotalValorSelecionado, new { @class = "label" })
                                                <label class="input">
                                                    @Html.TextBoxFor(m => m.Resumo.TotalValorSelecionado, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                </label>
                                            </section>
                                            <section class="col col-6">
                                                @Html.LabelFor(m => m.Resumo.TotalRetidoSelecionado, new { @class = "label" })
                                                <label class="input">
                                                    @Html.TextBoxFor(m => m.Resumo.TotalRetidoSelecionado, "{0:F2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style="font-weight:bold" })  
                                                </label>
                                            </section>
                                        </section>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="ui-dialog ui-widget ui-widget-content ui-corner-all ui-front ui-dialog-buttons ui-draggable" 
                            tabindex="-1" role="dialog" aria-describedby="dlgSimpleConcluirContrato" aria-labelledby="ui-id-1" 
                                style="height: auto; width: 600px; top: 220px; left: 262px; display: none;">
                            <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
                                <span id="ui-id-1" class="ui-dialog-title">
                                </span>
                            </div>
                            <div id="dlgSimpleConcluirContrato" class="ui-dialog-content ui-widget-content" style="width: auto; min-height: 0px; max-height: none; height: auto;">
	                            <p>
		                            Deseja concluir o contrato ?
	                            </p>
                            </div>
                            <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                                <div class="ui-dialog-buttonset">
                                </div>
                            </div>
                        </div>
                        <div class="ui-dialog ui-widget ui-widget-content ui-corner-all ui-front ui-dialog-buttons ui-draggable" 
                            tabindex="-1" role="dialog" aria-describedby="dlgTrocaDtVencto" aria-labelledby="ui-id-2" 
                                style="height: auto; width: 600px; top: 220px; left: 262px; display: none;">
                            <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
                                <span id="ui-id-2" class="ui-dialog-title">
                                </span>
                            </div>
                            <div id="dlgTrocaDtVencto" class="ui-dialog-content ui-widget-content" style="width: auto; min-height: 0px; max-height: none; height: auto;">
                                <div style="padding-left:20px;">
                                    @Html.LabelFor(m => m.DataVencimento)
                                    <label class="input">
                                        <i class="icon-append fa fa-calendar"></i>
                                        @Html.TextBoxFor(m => m.DataVencimento, "{0:dd/MM/yyyy}")
                                    </label>
                                    @Html.ValidationMessageFor(m => m.DataVencimento, "Informe uma data válida.", new { @class = "note note-error" })
                                    <script type="text/javascript">
                                        $(document).ready(function () {
                                            $('#@Html.IdFor(m => m.DataVencimento)').datepicker({
                                                prevText: '<i class="fa fa-chevron-left"></i>',
                                                nextText: '<i class="fa fa-chevron-right"></i>',
                                                changeMonth: true,
                                                changeYear: true,
                                                minDate: 0,
                                                onClose: function (selectedDate) {
                                                    if (selectedDate == '') {
                                                        $(this).datepicker('disable');
                                                        $(this).datepicker('setDate', new Date());
                                                        $(this).datepicker('enable');
                                                        selectedDate = new Date();
                                                    }
                                                }
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                            <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                                <div class="ui-dialog-buttonset">
                                </div>
                            </div>
                        </div>
                        if (Model.PodeAssociarNotaFiscal)
                        {
                            <div class="modal fade in" id="associarNotaFiscal_ModalPanel" tabindex="-1" role="dialog" aria-labelledby="remoteModalLabel" aria-hidden="false" style="display: none;">  
				                <div class="modal-dialog">  
					                <div class="modal-content">
                                        <div class="modal-header">
	                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
		                                        ×
	                                        </button>
	                                        <h4 class="modal-title" id="myModalLabel">Associa nota fiscal</h4>
                                        </div>
                                        <div class="modal-body" style="margin: 5px 10px 0px 0px;">
	                                        <div class="row">
                                                <section class="col col-3">
                                                    <label class="label">Tipo</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.TipoDocumentoAntigo, new { @class = "readonly", @readonly = "" })  
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    <label class="label">Nº</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.NumeroDocumentoAntigo, new { @class = "readonly", @readonly = "" })  
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    <label class="label">Data emissão</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.DataEmissaoAntigo, new { @class = "readonly", @readonly = "" })  
                                                    </label>
                                                </section>
                                                <section class="col col-3">
                                                    <label class="label">Data vencimento</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.DataVencimentoAntigo, new { @class = "readonly", @readonly = "" })  
                                                    </label>
                                                </section>
	                                        </div>
	                                        <div class="row">
                                                <section class="col col-3">
                                                    <label class="label">Tipo</label>
                                                    <label class="select">
                                                        @Html.DropDownListFor(m => m.TipoDocumentoNovoId, Model.ListaTipoDocumentoNovo, "", new { @class = "required", @required = true, @novalidate = "novalidate" })
                                                        <i></i>
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.TipoDocumentoNovoId, "Informe o tipo do documento.", new { @id = Html.IdFor(m => m.TipoDocumentoNovoId) + "_ValidationMessage", @class = "note note-error" })
                                                </section>

                                                <section class="col col-3">
                                                    <label class="label">Nº</label>
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.NumeroDocumentoNovo, new { @class = "required", @maxlength = "10", @required = true })  
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.NumeroDocumentoNovo, "Informe o número do documento.", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-3">
                                                    <label class="label">Data emissão</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.DataEmissaoNovo, "{0:dd/MM/yyyy}", new { @class = "required", @required = true })  
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.DataEmissaoNovo, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-3">
                                                    <label class="label">Data vencimento</label>
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.DataVencimentoNovo, "{0:dd/MM/yyyy}", new { @class = "required", @required = true })  
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.DataVencimentoNovo, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <script type="text/javascript">
                                                    $(document).ready(function () {
                                                        $('#@Html.IdFor(m => m.DataEmissaoNovo)').datepicker({
                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                            changeMonth: true,
                                                            changeYear: true,
                                                            onClose: function (selectedDate) {
                                                                if ($(this).valid()) {
                                                                    $('#@Html.IdFor(m => m.DataVencimentoNovo)').datepicker('option', 'minDate', selectedDate);
                                                                }
                                                                else {
                                                                    $(this).val("");
                                                                }
                                                            }
                                                        });
                                                        $('#@Html.IdFor(m => m.DataVencimentoNovo)').datepicker({
                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                            changeMonth: true,
                                                            changeYear: true,
                                                            minDate: '#@Html.IdFor(m => m.DataEmissaoNovo)',
                                                            onClose: function (selectedDate) {
                                                                if ($(this).valid()) {
                                                                    $('#@Html.IdFor(m => m.DataEmissaoNovo)').datepicker('option', 'maxDate', selectedDate);
                                                                }
                                                                else {
                                                                    $(this).val("");
                                                                }
                                                            }
                                                        });
                                                    });
                                                </script>
	                                        </div>
                                        </div>
                                        <div class="modal-footer">
	                                        <button id="btnAssociarNotaFiscal" type="button" class="btn btn-primary">
		                                        Associar
	                                        </button>
	                                        <button id="btnCancelarAssociarNotaFiscal" type="button" class="btn btn-default" data-dismiss="modal">
		                                        Cancelar
	                                        </button>
                                        </div>
					                </div>  
				                </div>  
			                </div>
                        }
                        <footer>
                            @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-primary" })
                        </footer>                        
                    }
                </div>
            </div>

        </div>
    </article>
</div> 
<script type="text/javascript">
    var parametrosUrlImpressaoMedicao = '';
    jsonListaItemLiberacaoArray = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
    var colunaAnteriorSelecionada = "";
    var indiceDaColunaAnteriorSelecionada = -1;
    var ordenacaoAsc = true;

    $(document).ready(function () {

        $('body').addClass("hidden-menu");

        $(document).on("show.bs.modal", "#formatoImpressaoMedicao_ModalPanel", function (e) {
            var contratoId = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val();
            var listaItemLiberacao = $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val();
            var contratoRetificacaoItemMedicaoId = null;

            if (listaItemLiberacao.length == 0) {
                smartAlert("Atenção", "Nenhum item da lista foi selecionado", "error");
                e.preventDefault();
            }

            if (contratoId == 0) {
                smartAlert("Atenção", "Informe o contrato", "warning");
                e.preventDefault();
            }


            var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
            var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
                return (item.Selecionado == true)
            });

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ValidarImpressaoMedicao", "LiberacaoContrato", new { area = "Contrato" })',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    contratoId: contratoId,
                    listaItemLiberacao: JSON.stringify(arr)
                }),
                success: function (result) {
                    msgValidacaoImpressao = result.message;
                    contratoRetificacaoItemMedicaoId = result.contratoRetificacaoItemMedicaoId;
                },
                error: function (result) {
                    msgValidacaoImpressao = "Ocorreu erro na validação da impressão da medição";
                }
            });

            if (msgValidacaoImpressao.length > 0) {
                smartAlert("Atenção", msgValidacaoImpressao, "error");
                e.preventDefault();
            }

            parametrosUrlImpressaoMedicao = '&contratoId=' + contratoId;
            parametrosUrlImpressaoMedicao += '&contratoRetificacaoItemMedicaoId=' + contratoRetificacaoItemMedicaoId;
        });

        $("#btnConfirmarImpressaoMedicao").on("click", function () {
            @{
                var url = Url.Action("ImprimirMedicao", "LiberacaoContrato");
            }
            window.open('@url?formato=' + $("input:radio[name=formatoExportacaoArquivo]:checked").val() + parametrosUrlImpressaoMedicao);
        });

        $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
            _title: function (title) {
                if (!this.options.title) {
                    title.html("&#160;");
                } else {
                    title.html(this.options.title);
                }
            }
        }));

        $('#dlgTrocaDtVencto').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            title: "<div class='widget-header'><h4> Troca da data de vencimento</h4></div>",
            open: function () {
                var $this = $(this);
                $.validator.unobtrusive.parse($this);
            },
            buttons: [{
                html: "Concluir",
                "class": "btn btn-primary",
                click: function () {
                    $(this).dialog("close");
                    var ehDataValida = validarData($("#@Html.IdFor(m => m.DataVencimento)").val());
                    if (ehDataValida == true) {
                        trocarDataVencimento();
                    }
                    else {
                        var dataAtual = new Date().toFormatDDMMYYYY();
                        $("#@Html.IdFor(m => m.DataVencimento)").val(dataAtual);
                    }
                    return false;
                }
            }, {
                html: "<i class='fa fa-times'></i>&nbsp; Cancelar",
                "class": "btn btn-default",
                click: function () {
                    $(this).dialog("close");
                    var dataAtual = new Date().toFormatDDMMYYYY();
                    $("#@Html.IdFor(m => m.DataVencimento)").val(dataAtual);
                    return false;
                }
            }]
        });

        $('#dlgSimpleConcluirContrato').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            title: "<div class='widget-header'><h4><i class='fa fa-warning'></i> Atenção</h4></div>",
            buttons: [{
                html: "Concluir",
                "class": "btn btn-primary",
                click: function () {
                    $(this).dialog("close");
                    executarConcluirContrato();
                }
            }, {
                html: "<i class='fa fa-times'></i>&nbsp; Cancelar",
                "class": "btn btn-default",
                click: function () {
                    $(this).dialog("close");
                }
            }]
        });

        //remove focus do botão
        $('.ui-dialog :button').blur();

        exibeInfoContrato();
        preencheListaLiberacao();
        exibeModalConcluirContrato();

        $(document).on("change", "#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId)", function () {
            exibeInfoContrato();
            desabilitarBotoes();
            recuperaContratoRetificacaoItem();
            exibeModalConcluirContrato();
        });

        $(document).on("show.bs.modal", "#associarNotaFiscal_ModalPanel", function (e) {
            var validou = false;


            var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
            var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
                return (item.Selecionado == true)
            });
            $.ajax({
                type: 'POST',
                url: '@Url.Action("ValidarAssociacaoNotaFiscal", "LiberacaoContrato", new { Area = "Contrato" })',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                    contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                    dataVencimento: $("#@Html.IdFor(m => m.DataVencimento)").val(),
                    listaItemLiberacao: JSON.stringify(arr)
                }),
                success: function (result) {
                    if (result.ehValidouAssociacaoNF) {
                        validou = result.ehValidouAssociacaoNF;
                        $('#@Html.IdFor(m => m.TipoDocumentoAntigo)').val(result.itemLiberacao.TipoDocumento);
                        $('#@Html.IdFor(m => m.NumeroDocumentoAntigo)').val(result.itemLiberacao.NumeroDocumento);
                        $('#@Html.IdFor(m => m.DataEmissaoAntigo)').val(new Date(parseInt(result.itemLiberacao.DataEmissao.substr(6))).toFormatDDMMYYYY());
                        $('#@Html.IdFor(m => m.DataVencimentoAntigo)').val(new Date(parseInt(result.itemLiberacao.DataVencimento.substr(6))).toFormatDDMMYYYY());
                        $('#@Html.IdFor(m => m.DataEmissaoNovo)').val(new Date(parseInt(result.itemLiberacao.DataEmissao.substr(6))).toFormatDDMMYYYY());
                        $('#@Html.IdFor(m => m.DataVencimentoNovo)').val(new Date(parseInt(result.itemLiberacao.DataVencimento.substr(6))).toFormatDDMMYYYY());
                        $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val(result.itemLiberacao.ContratoRetificacaoItemMedicaoId);
                    }
                    else {
                        smartAlert("Ocorreu erro ao trocar a data de vencimento !", result.message, "error");
                        $('#@Html.IdFor(m => m.TipoDocumentoAntigo)').val("");
                        $('#@Html.IdFor(m => m.NumeroDocumentoAntigo)').val("");
                        $('#@Html.IdFor(m => m.DataEmissaoAntigo)').val("");
                        $('#@Html.IdFor(m => m.DataVencimentoAntigo)').val("");
                        $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val(null);
                    }
                },
                error: function (result) {
                    smartAlert("Ocorreu erro ao trocar a data de vencimento !", result.message, "error");
                    $('#@Html.IdFor(m => m.TipoDocumentoAntigo)').val("");
                    $('#@Html.IdFor(m => m.NumeroDocumentoAntigo)').val("");
                    $('#@Html.IdFor(m => m.DataEmissaoAntigo)').val("");
                    $('#@Html.IdFor(m => m.DataVencimentoAntigo)').val("");
                    $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val(null);
                }
            });

            if (validou == false) {
                e.preventDefault();
            }
        });

        $("#btnAssociarNotaFiscal").on("click", function (e) {
            var validou = false;

            validou = validarAssociacaoNotaFiscal();
            if (validou == true)
            {
                tratarAssociacaoNotaFiscal();
            }
            else
            {
                e.preventDefault();
            }
        });

        $("#btnCancelarAssociarNotaFiscal").on("click", function (e) {
            $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val(null);
        });

        $(document).on('click', 'table#tableItens th', function (e) {
            var row_index = $(this).parent().index();
            var col_index = $(this).index();

            ordenarListaItemLiberacao(row_index, col_index);
        });

        $(document).on('click','table#tableItens td',function (e) {
            var row_index = $(this).parent().index();
            var col_index = $(this).index();

            tratarSelecaoItemLiberacao(row_index, col_index);
        });

        //$(document).on('mouseover', 'table#tableItens td', function (e) {

        //});
    });


    function validarData(valor) {
        var date=valor;
        var ardt=new Array;
        var ExpReg=new RegExp("(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[012])/[12][0-9]{3}");
        ardt=date.split("/");
        erro=false;
        if ( date.search(ExpReg)==-1){
            erro = true;
        }
        else if (((ardt[1]==4)||(ardt[1]==6)||(ardt[1]==9)||(ardt[1]==11))&&(ardt[0]>30))
            erro = true;
        else if ( ardt[1]==2) {
            if ((ardt[0]>28)&&((ardt[2]%4)!=0))
                erro = true;
            if ((ardt[0]>29)&&((ardt[2]%4)==0))
                erro = true;
        }
        if (erro) {
            smartAlert("Atenção !", "Data de vencimento informada não é válida !", "error");
            return false;
        }
        return true;
    }

    function exibeModalConcluirContrato() {
        var podeConcluirContrato = $("#@Html.IdFor(m => m.PodeConcluirContrato)").val();
        if (podeConcluirContrato === '@true') {
            $('#dlgSimpleConcluirContrato').dialog('open');
        }
    }

    function exibeInfoContrato() {
        var infoContrato = "Contrato : " + $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val();
        infoContrato = infoContrato + " " + $("#@Html.IdFor(m => m.Contrato.ContratoDescricao.Descricao)").val();

        var e = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId)");
        var itemSelecionado = e[0].options[e[0].selectedIndex].text;

        if (itemSelecionado.length > 0) {
            infoContrato = infoContrato + " - Item : " + itemSelecionado;
        }

        $("#cabLiberacao").text(infoContrato);

    }

    function executarConcluirContrato() {
        var contratoId = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val();
        var contratoRetificacaoId = $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ConcluirContrato", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: contratoId,
                contratoRetificacaoId: contratoRetificacaoId
            }),
            success: function (result) {
                if (result.ehConcluido) {
                    smartAlert("Sucesso", result.message, "success");
                }
                else {
                    smartAlert("Ocorreu erro na conclusão do contrato", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro na conclusão do contrato", result.message, "error");
            }
        });
    }

    function recuperaContratoRetificacaoItem() {
        var isRecuperou = false;
        var codigoContratoRetificacaoItem = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId)").val();
        var contratoId = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val();
        var contratoRetificacaoId = $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("RecuperaContratoRetificacaoItem", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: contratoId,
                contratoRetificacaoId: contratoRetificacaoId,
                contratoRetificacaoItemId: codigoContratoRetificacaoItem
            }),
            success: function (result) {
                if (result.redirectToUrl.length > 0) {
                    window.location.href = result.redirectToUrl;
                }
                else {
                    showErrorMessage(getErrorMessageContainer('@Html.NameFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId)'), result.errorMessage);

                    if (result.ehRecuperou) {
                        $('#@Html.IdFor(m => m.Resumo.ValorContratado)').val(roundDecimal(floatToString(result.resumo.ValorContratado), 2));
                        $('#@Html.IdFor(m => m.Resumo.ValorRetidoContrato)').val(roundDecimal(floatToString(result.resumo.ValorRetidoContrato), 2));
                        $('#@Html.IdFor(m => m.Resumo.ValorProvisionado)').val(roundDecimal(floatToString(result.resumo.ValorProvisionado), 2));
                        $('#@Html.IdFor(m => m.Resumo.ValorMedido)').val(roundDecimal(floatToString(result.resumo.ValorMedido), 2));
                        $('#@Html.IdFor(m => m.Resumo.Diferenca)').val(roundDecimal(floatToString(result.resumo.Diferenca), 2));
                        if (result.resumo.Diferenca < 0) {
                            $('#@Html.IdFor(m => m.Resumo.Diferenca)').css("color","red");
                        }
                        else {
                            $('#@Html.IdFor(m => m.Resumo.Diferenca)').css("color", "black");
                        }
                        $('#@Html.IdFor(m => m.Resumo.AguardandoLiberacao)').val(roundDecimal(floatToString(result.resumo.AguardandoLiberacao), 2));
                        $('#@Html.IdFor(m => m.Resumo.Retido)').val(roundDecimal(floatToString(result.resumo.Retido), 2));
                        $('#@Html.IdFor(m => m.Resumo.Liberado)').val(roundDecimal(floatToString(result.resumo.Liberado), 2));
                        $('#@Html.IdFor(m => m.Resumo.RetencaoLiberada)').val(roundDecimal(floatToString(result.resumo.RetencaoLiberada), 2));
                        $('#@Html.IdFor(m => m.Resumo.Saldo)').val(roundDecimal(floatToString(result.resumo.Saldo), 2));
                        $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val(result.listaItemLiberacao);
                        jsonListaItemLiberacaoArray = JSON.parse(result.listaItemLiberacao);
                        if (result.podeConcluirContrato) {
                            $("#@Html.IdFor(m => m.PodeConcluirContrato)").val('@true');
                        }
                        else {
                            $("#@Html.IdFor(m => m.PodeConcluirContrato)").val('@false');
                        }
                    }
                    else {
                        limpaResumo();
                        $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val(null);
                        jsonListaItemLiberacaoArray = null;
                        $("#@Html.IdFor(m => m.PodeConcluirContrato)").val('@false');

                    }
                }
                isRecuperou = result.ehRecuperou;
            },
            error: function (result) {
                showErrorMessage(getErrorMessageContainer('@Html.NameFor(m => m.ContratoRetificacaoItemMedicao.ContratoRetificacaoItemId)'), result.errorMessage);
                limpaResumo();
                $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val(null);
                jsonListaItemLiberacaoArray = null;
                $("#@Html.IdFor(m => m.PodeConcluirContrato)").val('@false');
            }
        });

        preencheListaLiberacao();

        return isRecuperou;
    }

    function limpaResumo() {
        $('#@Html.IdFor(m => m.Resumo.ValorContratado)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.ValorRetidoContrato)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.ValorProvisionado)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.ValorMedido)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.Diferenca)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.Diferenca)').css("color","black");
        $('#@Html.IdFor(m => m.Resumo.AguardandoLiberacao)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.Retido)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.Liberado)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.RetencaoLiberada)').val(roundDecimal(floatToString(0), 2));
        $('#@Html.IdFor(m => m.Resumo.Saldo)').val(roundDecimal(floatToString(0), 2));
    }

    function preencheListaLiberacao() {
        var totalValor = 0;
        var totalValorRetido = 0;

        $("#tableItens tbody").empty();

        if (jsonListaItemLiberacaoArray != null) {
            for (var i = 0; i < jsonListaItemLiberacaoArray.length; i++) {

                var cor = jsonListaItemLiberacaoArray[i].CorTexto + ";";
                if (jsonListaItemLiberacaoArray[i].Selecionado) {
                    cor = cor + jsonListaItemLiberacaoArray[i].CorLinhaSelecionada + ";";
                    totalValor = totalValor + jsonListaItemLiberacaoArray[i].Valor;
                    totalValorRetido = totalValorRetido + jsonListaItemLiberacaoArray[i].ValorRetido;
                }

                var row = $('<tr style="' + cor + '">')

                $("#tableItens tbody").append(row);
                //row.append($('<td class="text-left" style="' + cor + '" onclick="trataItemLiberacaoSelecionado(' + jsonListaItemLiberacaoArray[i].PosicaoLista + ');">' + jsonListaItemLiberacaoArray[i].SequencialItem + '</td>'));
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].SequencialItem + '</td>'));
                if (jsonListaItemLiberacaoArray[i].DataMedicao != null) {
                    row.append($('<td class="text-center">' + new Date(jsonListaItemLiberacaoArray[i].DataMedicao).toFormatDDMMYYYY() + '</td>'));
                }
                else {
                    row.append($('<td class="text-center"></td>'));
                }
                if (jsonListaItemLiberacaoArray[i].DataVencimento != null) {
                    row.append($('<td class="text-center">' + new Date(jsonListaItemLiberacaoArray[i].DataVencimento).toFormatDDMMYYYY() + '</td>'));
                }
                else {
                    row.append($('<td class="text-center"></td>'));
                }
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].TipoDocumento + '</td>'));

                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].NumeroDocumento + '</td>'));
                if (jsonListaItemLiberacaoArray[i].DataEmissao != null) {
                    row.append($('<td class="text-center">' + new Date(jsonListaItemLiberacaoArray[i].DataEmissao).toFormatDDMMYYYY() + '</td>'));
                }
                else {
                    row.append($('<td class="text-center"></td>'));
                }
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].DescricaoSituacao + '</td>'));
                row.append($('<td class="text-right decimal-2-casas">' + roundDecimal(floatToString(jsonListaItemLiberacaoArray[i].Valor), 2) + '</td>'));
                row.append($('<td class="text-right decimal-2-casas">' + roundDecimal(floatToString(jsonListaItemLiberacaoArray[i].ValorRetido), 2) + '</td>'));
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].ResponsavelMedicao + '</td>'));
                row.append($('<td class="text-right">' + jsonListaItemLiberacaoArray[i].TituloId + '</td>'));
                if (jsonListaItemLiberacaoArray[i].DataLiberacao != null) {
                    row.append($('<td class="text-center">' + new Date(jsonListaItemLiberacaoArray[i].DataLiberacao).toFormatDDMMYYYY() + '</td>'));
                }
                else {
                    row.append($('<td class="text-center"></td>'));
                }
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].ResponsavelLiberacao + '</td>'));
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].DescricaoEvento + '</td>'));
                if (jsonListaItemLiberacaoArray[i].DataCadastro != null) {
                    row.append($('<td class="text-center">' + new Date(jsonListaItemLiberacaoArray[i].DataCadastro).toFormatDDMMYYYY() + '</td>'));
                }
                else {
                    row.append($('<td class="text-center"></td>'));
                }
                row.append($('<td class="text-left">' + jsonListaItemLiberacaoArray[i].Avaliacao + '</td>'));
                row.append($('<td class="text-left" style="display:none;">' + jsonListaItemLiberacaoArray[i].PosicaoLista + '</td>'));
                row.append($('</tr>'));
            }

            var row = $('<tr />')

            jsonListaItemLiberacaoArray = null;
        }

        $('#@Html.IdFor(m => m.Resumo.TotalValorSelecionado)').val(roundDecimal(floatToString(totalValor), 2));
        $('#@Html.IdFor(m => m.Resumo.TotalRetidoSelecionado)').val(roundDecimal(floatToString(totalValorRetido), 2));

        //$('table#tableItens td:nth-child(17),th:nth-child(17)').hide();

        initializeDecimalBehaviour();
    }

    function trataItemLiberacaoSelecionado(posicaoLista) {
        jsonListaItemLiberacaoArray = JSON.parse($('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val());

        var podeHabilitarBotoes = $('#@Html.IdFor(m => m.PodeHabilitarBotoes)').val();

        if (podeHabilitarBotoes === '@false') {
            return;
        }

        desabilitarBotoes();

        var qtdAguardandoAprovacao = 0;
        var qtdAguardandoLiberacao = 0;
        var foiSelecionado = false;
        var codigoSituacaoEscolhido = -1;
        var codigoSituacaoSelecionadoUltimoDaLista = -1;

        if ((jsonListaItemLiberacaoArray != null) && (posicaoLista != null)) {

            if (jsonListaItemLiberacaoArray[posicaoLista].Selecionado === false) {
                jsonListaItemLiberacaoArray[posicaoLista].Selecionado = true;
                jsonListaItemLiberacaoArray[posicaoLista].DataSelecionado = new Date().valueOf();
                foiSelecionado = true;
                codigoSituacaoEscolhido = jsonListaItemLiberacaoArray[posicaoLista].CodigoSituacao;
            }
            else {
                jsonListaItemLiberacaoArray[posicaoLista].Selecionado = false;
                jsonListaItemLiberacaoArray[posicaoLista].DataSelecionado = 0;
                foiSelecionado = false;
            }

            var arr = jQuery.grep(jsonListaItemLiberacaoArray, function (item, i) {
                return (item.Selecionado == true)
            });

            var ultimoDataSelecionado = -1;

            for (var i = 0; i < arr.length; i++) {
                if (arr[i].CodigoSituacao == 0) {
                    qtdAguardandoAprovacao = qtdAguardandoAprovacao + 1;
                }
                if (arr[i].CodigoSituacao == 1) {
                    qtdAguardandoLiberacao = qtdAguardandoLiberacao + 1;
                }
                if (arr[i].DataSelecionado > ultimoDataSelecionado) {
                    codigoSituacaoSelecionadoUltimoDaLista = arr[i].CodigoSituacao;
                    ultimoDataSelecionado = arr[i].DataSelecionado;
                }
            }

            if (foiSelecionado === true){
                if ((codigoSituacaoEscolhido == 0) || (codigoSituacaoEscolhido == 1)) {
                    if ((qtdAguardandoAprovacao > 0) && (qtdAguardandoLiberacao > 0)) {
                        codigoSituacaoEscolhido = 0;
                    }
                    else {
                        if (qtdAguardandoAprovacao == 0) {
                            codigoSituacaoEscolhido = 1;
                        }
                        else {
                            codigoSituacaoEscolhido = 0;
                        }
                    }
                }
                habilitarDesabilitarBotoes(codigoSituacaoEscolhido);
            }
            else {
                habilitarDesabilitarBotoes(codigoSituacaoSelecionadoUltimoDaLista);
            }

            $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val(JSON.stringify(jsonListaItemLiberacaoArray));
            preencheListaLiberacao();
            jsonListaItemLiberacaoArray = null;
        }
    }

    function tratarSelecaoItemLiberacao(row_index, col_index) {

        var totalValor = stringToFloat($('#@Html.IdFor(m => m.Resumo.TotalValorSelecionado)').val());
        var totalValorRetido = stringToFloat($('#@Html.IdFor(m => m.Resumo.TotalRetidoSelecionado)').val());

        jsonListaItemLiberacaoArray = JSON.parse($('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val());

        var podeHabilitarBotoes = $('#@Html.IdFor(m => m.PodeHabilitarBotoes)').val();

        if (podeHabilitarBotoes === '@false') {
            return;
        }

        desabilitarBotoes();

        var qtdAguardandoAprovacao = 0;
        var qtdAguardandoLiberacao = 0;
        var foiSelecionado = false;
        var codigoSituacaoEscolhido = -1;
        var codigoSituacaoSelecionadoUltimoDaLista = -1;

        var posicaoLista = $('table#tableItens tr:eq(' + (row_index + 1) + ') td:last').text();

        if ((jsonListaItemLiberacaoArray != null) && (posicaoLista != null)) {

            posicaoLista = +posicaoLista;

            var cor = jsonListaItemLiberacaoArray[posicaoLista].CorTexto + ";";

            if (jsonListaItemLiberacaoArray[posicaoLista].Selecionado === false) {
                jsonListaItemLiberacaoArray[posicaoLista].Selecionado = true;
                jsonListaItemLiberacaoArray[posicaoLista].DataSelecionado = new Date().valueOf();
                foiSelecionado = true;
                codigoSituacaoEscolhido = jsonListaItemLiberacaoArray[posicaoLista].CodigoSituacao;

                cor = cor + jsonListaItemLiberacaoArray[posicaoLista].CorLinhaSelecionada + ";";
                totalValor = totalValor + jsonListaItemLiberacaoArray[posicaoLista].Valor;
                totalValorRetido = totalValorRetido + jsonListaItemLiberacaoArray[posicaoLista].ValorRetido;

            }
            else {
                jsonListaItemLiberacaoArray[posicaoLista].Selecionado = false;
                jsonListaItemLiberacaoArray[posicaoLista].DataSelecionado = 0;
                foiSelecionado = false;

                totalValor = totalValor - jsonListaItemLiberacaoArray[posicaoLista].Valor;
                totalValorRetido = totalValorRetido - jsonListaItemLiberacaoArray[posicaoLista].ValorRetido;

            }

            $('table#tableItens tr').eq(row_index + 1).attr('style', cor);

            var arr = jQuery.grep(jsonListaItemLiberacaoArray, function (item, i) {
                return (item.Selecionado == true)
            });

            var ultimoDataSelecionado = -1;

            for (var i = 0; i < arr.length; i++) {
                if (arr[i].CodigoSituacao == 0) {
                    qtdAguardandoAprovacao = qtdAguardandoAprovacao + 1;
                }
                if (arr[i].CodigoSituacao == 1) {
                    qtdAguardandoLiberacao = qtdAguardandoLiberacao + 1;
                }
                if (arr[i].DataSelecionado > ultimoDataSelecionado) {
                    codigoSituacaoSelecionadoUltimoDaLista = arr[i].CodigoSituacao;
                    ultimoDataSelecionado = arr[i].DataSelecionado;
                }
            }

            if (foiSelecionado === true) {
                if ((codigoSituacaoEscolhido == 0) || (codigoSituacaoEscolhido == 1)) {
                    if ((qtdAguardandoAprovacao > 0) && (qtdAguardandoLiberacao > 0)) {
                        codigoSituacaoEscolhido = 0;
                    }
                    else {
                        if (qtdAguardandoAprovacao == 0) {
                            codigoSituacaoEscolhido = 1;
                        }
                        else {
                            codigoSituacaoEscolhido = 0;
                        }
                    }
                }
                habilitarDesabilitarBotoes(codigoSituacaoEscolhido);
            }
            else {
                habilitarDesabilitarBotoes(codigoSituacaoSelecionadoUltimoDaLista);
            }
        }

        $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val(JSON.stringify(jsonListaItemLiberacaoArray));
        jsonListaItemLiberacaoArray = null;

        $('#@Html.IdFor(m => m.Resumo.TotalValorSelecionado)').val(roundDecimal(floatToString(totalValor), 2));
        $('#@Html.IdFor(m => m.Resumo.TotalRetidoSelecionado)').val(roundDecimal(floatToString(totalValorRetido), 2));

        initializeDecimalBehaviour();

    }

    function ordenarListaItemLiberacao(row_index, col_index) {
        var arrayColunas = ["Item","Medição","Vencimento","Tipo documento","Nº documento","Emissão",
                            "Situação", "Valor", "Valor retido", "Resp. medição", "Título", "Liberação",
                            "Resp. liberação", "Evento", "Data cadastro", "Avaliação", "Posição na lista"]
        var arrayIdentificacaoColunas = ["item", "medicao", "vencimento", "tipodocumento", "numerodocumento", "emissao",
                            "situacao", "valor", "valorretido", "responsavelmedicao", "titulo", "liberacao",
                            "responsavelliberacao", "evento", "datacadastro", "avaliacao", "posicaolista"]

        var colunaSelecionada = "item";
        colunaSelecionada = arrayIdentificacaoColunas[col_index];

        if (colunaAnteriorSelecionada != colunaSelecionada) {
            ordenacaoAsc = true;
        }
        else {
            ordenacaoAsc = !ordenacaoAsc;
        }

        var campo = arrayColunas[col_index];
        if (ordenacaoAsc) {
            campo = campo + " <i class='fa fa-sort-asc'></i>"
        }
        else {
            campo = campo + " <i class='fa fa-sort-desc'></i>"
        }

        $('table#tableItens tr:first th:eq(' + indiceDaColunaAnteriorSelecionada + ')').text(arrayColunas[indiceDaColunaAnteriorSelecionada]);
        $('table#tableItens tr:first th:eq(' + col_index + ')').html(campo);

        colunaAnteriorSelecionada = colunaSelecionada;
        indiceDaColunaAnteriorSelecionada = col_index;

        $.ajax({
            type: 'POST',
            url: '@Url.Action("OrdenarListaLiberacao", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                colunaSelecao: colunaSelecionada,
                ordenacaoAscendente: ordenacaoAsc,
                listaItemLiberacao: JSON.stringify(JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val()))
            }),
            success: function (result) {
                if (result.estaOrdenado) {
                    $('#@Html.IdFor(m => m.JsonListaItemLiberacao)').val(result.listaItemLiberacao);
                    jsonListaItemLiberacaoArray = JSON.parse(result.listaItemLiberacao);
                }
                else {
                    smartAlert("Ocorreu erro na ordenação da lista", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro na ordenação da lista", result.message, "error");
            }
        });

        preencheListaLiberacao();
    }

    function desabilitarBotoes() {
        $('#btnAprovarLiberar').attr("class","btn btn-default btn-xs disabled");
        $('#btnAprovar').attr("class","btn btn-default btn-xs disabled");
        $('#btnLiberar').attr("class", "btn btn-default btn-xs disabled");
        $('#btnCancelarLiberacao').attr("class","btn btn-default btn-xs disabled");
        $('#btnAssociarNF').attr("class","btn btn-default btn-xs disabled");
        $('#btnAlterarVencimento').attr("class","btn btn-default btn-xs disabled");
        $('#btnImprimirMedicao').attr("class","btn btn-default btn-xs disabled");
    }

    function habilitarDesabilitarBotoes(codigoSituacao) {
        var podeAprovarLiberar = $('#@Html.IdFor(m => m.PodeAprovarLiberar)').val();
        var podeAprovar = $('#@Html.IdFor(m => m.PodeAprovar)').val();
        var podeLiberar = $('#@Html.IdFor(m => m.PodeLiberar)').val();
        var podeCancelarLiberacao = $('#@Html.IdFor(m => m.PodeCancelarLiberacao)').val();
        var podeAssociarNF = $('#@Html.IdFor(m => m.PodeAssociarNotaFiscal)').val();
        var podeAlterarVencimento = $('#@Html.IdFor(m => m.PodeAlterarDataVencimento)').val();
        var podeImprimirMedicao = $('#@Html.IdFor(m => m.PodeImprimirMedicao)').val();

        switch (codigoSituacao) {
            case 0:
                if (podeAprovarLiberar === '@true') {
                    $('#btnAprovarLiberar').attr("class","btn bg-color-green txt-color-white btn-xs");
                }
                if (podeAprovar === '@true') {
                    $('#btnAprovar').attr("class","btn btn-primary btn-xs");
                }
                if (podeAssociarNF === '@true') {
                    $('#btnAssociarNF').attr("class","btn bg-color-orange txt-color-white btn-xs");
                }
                if (podeImprimirMedicao === '@true') {
                    $('#btnImprimirMedicao').attr("class","btn btn-primary btn-xs");
                }

                break;
            case 1:
                if (podeAprovarLiberar === '@true') {
                    $('#btnAprovarLiberar').attr("class","btn btn bg-color-green txt-color-white btn-xs");
                }
                if (podeLiberar === '@true') {
                    $('#btnLiberar').attr("class","btn btn bg-color-green txt-color-white btn-xs");
                }
                if (podeAssociarNF === '@true') {
                    $('#btnAssociarNF').attr("class","btn bg-color-orange txt-color-white btn-xs");
                }
                if (podeImprimirMedicao === '@true') {
                    $('#btnImprimirMedicao').attr("class","btn btn-primary btn-xs");
                }

                break;
            case 2:
                if (podeCancelarLiberacao === '@true') {
                    $('#btnCancelarLiberacao').attr("class","btn bg-color-red txt-color-white btn-xs");
                }
                if (podeImprimirMedicao === '@true') {
                    $('#btnImprimirMedicao').attr("class","btn btn-primary btn-xs");
                }
                break;
            case 9:
                if (podeAlterarVencimento === '@true') {
                    $('#btnAlterarVencimento').attr("class","btn bg-color-pink txt-color-white btn-xs");
                }
                break;
            default:
                desabilitarBotoes();
                break;
        }

    }

    function tratarAprovar() {
        var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
        var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
            return (item.Selecionado == true)
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("TratarAprovar", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                listaItemLiberacao:JSON.stringify(arr)
            }),
            success: function (result) {
                if (result.ehAprovado) {
                    window.location.href = result.redirectToUrl;
                    smartAlert("Sucesso", result.message, "success");                   
                }
                else {
                    smartAlert("Ocorreu erro ao aprovar !", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro ao aprovar !", result.message, "error");
            }
        });

    }

    function validarTrocarDataVencimento() {
        var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
        var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
            return (item.Selecionado == true)
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ValidarTrocaDataVencimento", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                dataVencimento: $("#@Html.IdFor(m => m.DataVencimento)").val(),
                listaItemLiberacao: JSON.stringify(arr)
            }),
            success: function (result) {
                if (result.ehValidouTrocaDataVencimento) {
                    $('#dlgTrocaDtVencto').dialog('open');
                    return false;
                }
                else {
                    smartAlert("Ocorreu erro ao trocar a data de vencimento !", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro ao trocar a data de vencimento !", result.message, "error");
            }
        });
    }

    function trocarDataVencimento() {
        var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
        var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
            return (item.Selecionado == true)
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("TratarTrocaDataVencimento", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                dataVencimento: $("#@Html.IdFor(m => m.DataVencimento)").val(),
                listaItemLiberacao:JSON.stringify(arr)
            }),
            success: function (result) {
                if (result.trocouDataVencimento) {
                    window.location.href = result.redirectToUrl;
                    smartAlert("Sucesso", result.message, "success");
                }
                else {
                    smartAlert("Ocorreu erro ao trocar a data de vencimento !", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro ao trocar a data de vencimento !", result.message, "error");
            }
        });
    }

    function validarAssociacaoNotaFiscal() {
        var contratoId = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val();
        var contratoRetificacaoId = $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val();
        var tipoDocumentoId = $('#@Html.IdFor(m => m.TipoDocumentoNovoId)').val();
        var numeroDocumento = $('#@Html.IdFor(m => m.NumeroDocumentoNovo)').val();
        var dataEmissao = $('#@Html.IdFor(m => m.DataEmissaoNovo)').val();
        var dataVencimento = $('#@Html.IdFor(m => m.DataVencimentoNovo)').val();
        var contratoRetificacaoItemMedicaoId = $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val();

        if (contratoId == null) {
            smartAlert("Atenção", "Selecione um contrato !", "error");
            return false;
        }

        if (contratoId.length == 0) {
            smartAlert("Atenção","Selecione um contrato !","error");
            return false;
        }

        if (contratoRetificacaoId == null) {
            smartAlert("Atenção","Selecione um contrato !", "error");
            return false;
        }

        if (contratoRetificacaoId.length == 0) {
            smartAlert("Atenção","Selecione um contrato !", "error");
            return false;
        }

        if (contratoRetificacaoItemMedicaoId == null) {
            smartAlert("Atenção","Nenhum item da lista foi selecionado !", "error");
            return false;
        }

        if (contratoRetificacaoItemMedicaoId.length == 0) {
            smartAlert("Atenção","Nenhum item da lista foi selecionado !", "error");
            return false;
        }

        if (tipoDocumentoId == null) {
            smartAlert("Atenção","Informe o campo tipo da nota !", "error");
            return false;
        }

        if (tipoDocumentoId.length == 0) {
            smartAlert("Atenção","Informe o campo tipo da nota !","error");
            return false;
        }

        if (numeroDocumento == null) {
            smartAlert("Informe o campo número do documento", result.message, "error");
            return false;
        }

        if (numeroDocumento.length == 0) {
            smartAlert("Atenção","Informe o campo número do documento", "error");
            return;
        }

        if (dataEmissao == null) {
            smartAlert("Atenção","Informe o campo data de emissão","error");
            return false;
        }

        if (dataEmissao.length == 0) {
            smartAlert("Atenção","Informe o campo data de emissão", "error");
            return;
        }

        var ehDataValida = false;
        ehDataValida = validarData(dataEmissao);
        if (ehDataValida == false) {
            smartAlert("Atenção","Informe a data de emissão válida", "error");
            return;
        }

        if (dataVencimento == null) {
            smartAlert("Atenção","Informe o campo data de vencimento", "error");
            return false;
        }

        if (dataVencimento.length == 0) {
            smartAlert("Atenção","Informe o campo data de vencimento", "error");
            return false;
        }

        ehDataValida = validarData(dataVencimento);
        if (ehDataValida == false) {
            smartAlert("Atenção","Informe a data de vencimento válida", "error");
            return false;
        }

        return true;
    }

    function tratarAssociacaoNotaFiscal() {
        var contratoId = $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val();
        var contratoRetificacaoId = $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val();
        var tipoDocumentoId = $('#@Html.IdFor(m => m.TipoDocumentoNovoId)').val();
        var numeroDocumento = $('#@Html.IdFor(m => m.NumeroDocumentoNovo)').val();
        var dataEmissao = $('#@Html.IdFor(m => m.DataEmissaoNovo)').val();
        var dataVencimento = $('#@Html.IdFor(m => m.DataVencimentoNovo)').val();
        var contratoRetificacaoItemMedicaoId = $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val();

        $.ajax({
            type: 'POST',
            url: '@Url.Action("TratarAssociacaoNotaFiscal", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: contratoId,
                contratoRetificacaoId: contratoRetificacaoId,
                contratoRetificacaoItemMedicaoId : contratoRetificacaoItemMedicaoId,
                tipoDocumentoId : tipoDocumentoId,
                numeroDocumento : numeroDocumento,
                dataEmissao : dataEmissao,
                dataVencimento : dataVencimento
            }),
            success: function (result) {
                if (result.associouNotaFiscal) {
                    window.location.href = result.redirectToUrl;
                    smartAlert("Sucesso", result.message, "success");
                    $('#@Html.IdFor(m => m.ContratoRetificacaoItemMedicaoIdSelecionado)').val(null);
                    $('#associarNotaFiscal_ModalPanel').modal('hide');
                }
                else {
                    smartAlert("Ocorreu erro ao associar a nota fiscal !", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro ao associar a nota fiscal !", result.message, "error");
            }
        });
    }

    function tratarAprovarLiberar() {
        var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
        var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
            return (item.Selecionado == true)
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("TratarAprovarLiberar", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                listaItemLiberacao: JSON.stringify(arr)
            }),
            success: function (result) {
                if (result.ehAprovadoLiberado) {
                    window.location.href = result.redirectToUrl;
                    smartAlert("Sucesso", result.message, "success");
                }
                else {
                    smartAlert("Ocorreu erro ao aprovar e liberar !", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro ao aprovar e liberar !", result.message, "error");
            }
        });
    }

    function tratarLiberar() {
        var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
        var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
            return (item.Selecionado == true)
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("TratarLiberar", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                listaItemLiberacao: JSON.stringify(arr)
            }),
            success: function (result) {
                if (result.ehLiberado) {
                    window.location.href = result.redirectToUrl;
                    smartAlert("Sucesso", result.message, "success");
                }
                else {
                    smartAlert("Ocorreu erro ao liberar !", result.message, "error");
                }
            },
            error: function (result) {
                smartAlert("Ocorreu erro ao liberar !", result.message, "error");
            }
        });
    }

    function tratarCancelar() {
        var jsonListaArraySelecionados = JSON.parse($("#@Html.IdFor(m => m.JsonListaItemLiberacao)").val());
        var arr = jQuery.grep(jsonListaArraySelecionados, function (item, i) {
            return (item.Selecionado == true)
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("TratarCancelar", "LiberacaoContrato", new { Area = "Contrato" })',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                contratoId: $("#@Html.IdFor(m => m.ContratoRetificacaoItemMedicao.ContratoId)").val(),
                contratoRetificacaoId: $("#@Html.IdFor(m => m.ContratoRetificacao.Id)").val(),
                listaItemLiberacao: JSON.stringify(arr)
            }),
            success: function (result) {
                if (result.ehCancelado) {
                    window.location.href = result.redirectToUrl;
                    //smartAlert("Sucesso", result.message, "success");
                    showMessages(result.message);
                }
                else {
                    //smartAlert("Ocorreu erro ao cancelar !", result.message, "error");
                    showMessages(result.message);
                }
            },
            error: function (result) {
                //smartAlert("Ocorreu erro ao cancelar !", result.message, "error");
                showMessages(result.message);
            }
        });
    }

    function showMessages(messages) {
        $(messages).each(function () {
            var typeMessage = '';
            var titleMessage = '';
            switch (this.Type.toString()) {
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Info)':
                    typeMessage = 'info';
                    titleMessage = 'Informação';
                    break;
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Success)':
                    typeMessage = 'success';
                    titleMessage = 'Sucesso';
                    break;
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Warning)':
                    typeMessage = 'warning';
                    titleMessage = 'Alerta';
                    break;
                case '@((int)GIR.Sigim.Infrastructure.Crosscutting.Notification.TypeMessage.Error)':
                default:
                    typeMessage = 'error';
                    titleMessage = 'Erro';
                    break;
            }
            smartAlert(titleMessage, this.Text, typeMessage);
        });
    }

</script>
