@model GIR.Sigim.Presentation.WebUI.Areas.Financeiro.ViewModel.ImpostoFinanceiroViewModel

@{
    ViewBag.Title = "Imposto financeiro";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    <a href="javascript:novo();" class="btn btn-primary" style="float:right;">Novo</a>
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Salvar",
                            "ImpostoFinanceiro",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "refresh", UpdateTargetId = "notificationMessages" },
                            new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="panel-body no-padding">
                            <fieldset>
                                <div class="row">
                                    <section class="col col-3">
                                        @Html.HiddenFor(m => m.ImpostoFinanceiro.Id)
                                        @Html.LabelFor(m => m.ImpostoFinanceiro.Sigla, new { @class = "label" })
                                        <label class="input">
                                            @Html.TextBoxFor(m => m.ImpostoFinanceiro.Sigla, new { @maxlength = "50", @class = "required" })
                                        </label>
                                        @Html.ValidationMessageFor(m => m.ImpostoFinanceiro.Sigla, "", new { @class = "note note-error" })
                                    </section>
                                    <section class="col col-8">
                                        @Html.LabelFor(m => m.ImpostoFinanceiro.Descricao, new { @class = "label" })
                                        <label class="input">
                                            @Html.TextBoxFor(m => m.ImpostoFinanceiro.Descricao, new { @maxlength = "50", @class = "required" })
                                        </label>
                                        @Html.ValidationMessageFor(m => m.ImpostoFinanceiro.Descricao, "", new { @class = "note note-error" })
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-3">
                                        @Html.LabelFor(m => m.ImpostoFinanceiro.Aliquota, new { @class = "label" })
                                        <label class="input">
                                            @Html.TextBoxFor(m => m.ImpostoFinanceiro.Aliquota, "{0:F5}", new { @class = "text-right decimal-5-casas required" })
                                        </label>
                                        @Html.ValidationMessageFor(m => m.ImpostoFinanceiro.Aliquota, "", new { @class = "note note-error" })
                                    </section>
                                    <section class="col col-8">
                                        @Html.LabelFor(m => m.ImpostoFinanceiro.TipoCompromissoId, new { @class = "label" })
                                        <label class="select">
                                            @Html.DropDownListFor(m => m.ImpostoFinanceiro.TipoCompromissoId, Model.ListaTipoCompromisso, string.Empty)<i></i>
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-3">
                                        @Html.LabelFor(m => m.ImpostoFinanceiro.ContaContabil, new { @class = "label" })
                                        <label class="input">
                                            @Html.TextBoxFor(m => m.ImpostoFinanceiro.ContaContabil, new { @class = "label" })
                                        </label>
                                        @Html.ValidationMessageFor(m => m.ImpostoFinanceiro.ContaContabil, "", new { @class = "note note-error" })
                                    </section>
                                    <section class="col col-8">
                                        @Html.LabelFor(m => m.ImpostoFinanceiro.ClienteId, new { @class = "label" })
                                        <label class="select">
                                            @Html.DropDownListFor(m => m.ImpostoFinanceiro.ClienteId, Model.ListaCorrentista, string.Empty)<i></i>
                                        </label>
                                    </section>
                                </div>
                                <div class="row">
                                    <section class="col col-4">
                                        <div class="inline-group">
                                            <label id="labelRetido" class="checkbox">@Html.CheckBoxFor(m => m.ImpostoFinanceiro.EhRetido)<i></i>@Html.DisplayNameFor(m => m.ImpostoFinanceiro.EhRetido) </label>
                                            <label id="labelIndireto" class="checkbox">@Html.CheckBoxFor(m => m.ImpostoFinanceiro.Indireto)<i></i>@Html.DisplayNameFor(m => m.ImpostoFinanceiro.Indireto) </label>
                                            <label id="labelPageletr" class="checkbox">@Html.CheckBoxFor(m => m.ImpostoFinanceiro.PagamentoEletronico)<i></i>@Html.DisplayNameFor(m => m.ImpostoFinanceiro.PagamentoEletronico) </label>
                                        </div>
                                    </section>
                                    <section class="col col-4"> 
                                        <div class="inline-group">
                                            <label class="label">Periodicidade</label>
                                            @foreach (var item in Model.ListaOpcoesPeriodicidade)
                                            {
                                                string idPeriodicidade = "rbtPeriodicidade" + item.Value; 
                                                <label id="labelPeriodicidade@(item.Value)" class="radio state-disabled">@Html.RadioButtonFor(m => m.ImpostoFinanceiro.Periodicidade, @item.Value, new { @id=@idPeriodicidade, @disabled="disabled"}) <i></i>@item.Text</label>
                                            }
									    </div>
								    </section>
                                    <section class="col col-4" style="margin-top:10px;"> 
                                            <label class="col-md-3">Dia vencto</label>
                                            <div class="col-md-2">
                                                <label class="input">
                                                    @Html.TextBoxFor(m => m.ImpostoFinanceiro.DiaVencimento, new { @maxlength = "2", @class = "form-control numeric", @disabled="disabled",@style="background-color:#d5d5d5;" })
                                                </label>
                                                @Html.ValidationMessageFor(m => m.ImpostoFinanceiro.DiaVencimento, "", new { @class = "note note-error" })
                                            </div>
                                    </section>
                                </div>
                                <div class="row" >
                                    <section class="col col-4">
                                        <div class="inline-group">
                                            <label class="label">Fim de semana</label>
                                            @foreach (var item in Model.ListarOpcoesFimDeSemana)
                                            {
                                                string idFimDeSemana = "rbtFimDeSemana" + item.Value; 
                                                <label id="labelFimDeSemana@(item.Value)" class="radio state-disabled">@Html.RadioButtonFor(m => m.ImpostoFinanceiro.FimDeSemana, @item.Value, new { @id=@idFimDeSemana, @disabled="disabled" }) <i></i>@item.Text</label>
                                            }
                                        </div>
                                    </section>
                                    <section class="col col-6"> 
									    <div class="inline-group">
                                            <label class="label">Fato gerador</label>
                                            @foreach (var item in Model.ListarOpcoesFatoGerador)
                                            {
                                                string idFatoGerador = "rbtFatoGerador" + item.Value; 
                                                <label id="labelFatoGerador@(item.Value)" class="radio state-disabled">@Html.RadioButtonFor(m => m.ImpostoFinanceiro.FatoGerador, @item.Value, new { @id=@idFatoGerador, @disabled="disabled" }) <i></i>@item.Text</label>
                                            }
									    </div>
								    </section>
                                </div>
                            </fieldset>
                        </div>
                        <div class="ui-dialog ui-widget ui-widget-content ui-corner-all ui-front ui-dialog-buttons ui-draggable" 
                            tabindex="-1" role="dialog" aria-describedby="dlgSimpleExcluirRegistro" aria-labelledby="ui-id-1" 
                                style="height: auto; width: 600px; top: 220px; left: 262px; display: none;">
                            <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
                                <span id="ui-id-1" class="ui-dialog-title">
                                </span>
                            </div>
                            <div id="dlgSimpleExcluirRegistro" class="ui-dialog-content ui-widget-content" style="width: auto; min-height: 0px; max-height: none; height: auto;">
	                            <p>
		                            Deseja excluir o registro selecionado ?
	                            </p>
                            </div>
                            <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                                <div class="ui-dialog-buttonset">
                                </div>
                            </div>
                        </div>
                        <footer>
                            @{
                                string disableBtnDeletar = string.Empty;
                                if (!Model.PodeDeletar)
                                {
                                    disableBtnDeletar = "disabled";
                                }
                            }
                            <button type="button" id="btnDeletar" class="btn btn-danger @disableBtnDeletar">
                                Deletar
                            </button>
                            @{
                                var url = Url.Action("Imprimir","ImpostoFinanceiro");
                            }
                            @Html.EditorFor(m => m.PodeImprimir, "Imprimir", new { @url = url })
                            @{
                                string disableBtnSalvar = string.Empty;
                                if (!Model.PodeSalvar)
                                {
                                    disableBtnSalvar = "disabled";
                                }
                            }
                            <button type="submit" class="btn btn-primary @disableBtnSalvar">
                                Gravar
                            </button>
                        </footer>
                    }
                    @using (Ajax.BeginForm(
                            "Lista",
                            "ImpostoFinanceiro",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "onSuccess", UpdateTargetId = "resultadoBusca" },
                            new { @id = "formFilter" + Model.Filtro.PaginationParameters.UniqueIdentifier, @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.PageIndex)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.PageSize)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.OrderBy)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.Ascending)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.UniqueIdentifier)
                    }
                    <div id="resultadoBusca"></div>
                </div>
            </div>
        </div>
    </article>
</div>
@section scripts{
    @Html.EditorFor(m => m.Filtro.PaginationParameters, "ListPageScript")
}

<script type="text/javascript">
    $(document).ready(function () {
        $('body').addClass("hidden-menu");

        listarFiltro();

        $(document).on("doFilter@(Model.Filtro.PaginationParameters.UniqueIdentifier)",
            function (e) {
                listarFiltro();
            }
        );

        $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
            _title: function (title) {
                if (!this.options.title) {
                    title.html("&#160;");
                } else {
                    title.html(this.options.title);
                }
            }
        }));

        $('#dlgSimpleExcluirRegistro').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            title: "<div class='widget-header'><h4><i class='fa fa-warning'></i> Atenção</h4></div>",
            buttons: [{
                html: "Excluir",
                "class": "btn btn-primary",
                click: function () {
                    $(this).dialog("close");
                    excluirRegistro();
                }
            }, {
                html: "<i class='fa fa-times'></i>&nbsp; Cancelar",
                "class": "btn btn-default",
                click: function () {
                    $(this).dialog("close");
                }
            }]
        });

        $("#btnDeletar").on("click", function () {
            var id = $('#@Html.IdFor(m => m.ImpostoFinanceiro.Id)').val();
            if (id !== "") {
                $('#dlgSimpleExcluirRegistro').dialog('open');
            }
            else {
                smartAlert("Atenção", "Selecione um registro para excluir !", "warning");
            }
        });

        $("#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)").on("change", function () {
            tratarRetido();
        });

        $("#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)").on("change", function () {
            tratarIndireto();
        });

        $("#rbtPeriodicidade1").on("click", function () {
            desabilitarDiaVencimento();
        });

        $("#rbtPeriodicidade2").on("click", function () {
            habilitarDiaVencimento();
        });

        $(document).on("showFormatoImpressaoModalPanel", function (e) {
            parametrosUrlImpressao = '';
        });
    });

    function excluirRegistro() {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Deletar", "ImpostoFinanceiro")',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({ id: $('#@Html.IdFor(m => m.ImpostoFinanceiro.Id)').val() })
            })
        .success(function (result) {
            $('#notificationMessages').html(result);
            limpaPaginacao();
            clearForm();
            listarFiltro();
        });
    }

    function tratarRetido() {
        if ($("#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)").is(':checked')) {
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)').prop('disabled', 'disabled');
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)').prop('checked', false);
            $('#labelIndireto').addClass("state-disabled");

            habilitarPeriodicidade();
            habilitarFimDeSemana();
            habilitarFatoGerador();

        }
        else {
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)').prop('disabled', '');
            $('#labelIndireto').removeClass("state-disabled");

            desabilitarPeriodicidade();
            desabilitarFimDeSemana();
            desabilitarFatoGerador();
        }
    }

    function tratarIndireto() {
        if ($("#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)").is(':checked')) {
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)').prop('disabled', 'disabled');
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)').prop('checked', false);
            $('#labelRetido').addClass("state-disabled");
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.PagamentoEletronico)').prop('disabled', 'disabled');
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.PagamentoEletronico)').prop('checked', false);
            $('#labelPageletr').addClass("state-disabled");

            habilitarPeriodicidade();
            habilitarFimDeSemana();
            habilitarFatoGerador();

        }
        else {
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)').prop('disabled', '');
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.PagamentoEletronico)').prop('disabled', '');
            $('#labelRetido').removeClass("state-disabled");
            $('#labelPageletr').removeClass("state-disabled");

            desabilitarPeriodicidade();
            desabilitarFimDeSemana();
            desabilitarFatoGerador();
        }
    }

    function habilitarPeriodicidade() {
        @{
            foreach (var item in Model.ListaOpcoesPeriodicidade)
            {
                @:$('#rbtPeriodicidade@(item.Value)').prop('disabled', '');
                @:$('#labelPeriodicidade@(item.Value)').removeClass("state-disabled");               
            }
        }
    }

    function desabilitarDiaVencimento() {
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').prop('disabled', 'disabled');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').val("");
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').attr('style', 'background-color:#d5d5d5;');
    }

    function habilitarDiaVencimento() {
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').prop('disabled', '');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').attr('style', 'background-color:white;');
    }

    function habilitarFimDeSemana() {
        @{
            foreach (var item in Model.ListarOpcoesFimDeSemana)
            {
                @:$('#rbtFimDeSemana@(item.Value)').prop('disabled', '');
                @:$('#labelFimDeSemana@(item.Value)').removeClass("state-disabled");
            }
        }
    }

    function habilitarFatoGerador() {
        @{
            foreach (var item in Model.ListarOpcoesFatoGerador)
            {
                @:$('#rbtFatoGerador@(item.Value)').prop('disabled', '');
                @:$('#labelFatoGerador@(item.Value)').removeClass("state-disabled");
            }
        }
    }

    function desabilitarPeriodicidade() {
        @{
            foreach (var item in Model.ListaOpcoesPeriodicidade)
            {
                @:$('#rbtPeriodicidade@(item.Value)').prop('disabled', 'disabled');
                @:$('#rbtPeriodicidade@(item.Value)').prop('checked', false);
                @:$('#labelPeriodicidade@(item.Value)').addClass("state-disabled");               
            }
        }
    }

    function desabilitarFimDeSemana() {
        @{
            foreach (var item in Model.ListarOpcoesFimDeSemana)
            {
                @:$('#rbtFimDeSemana@(item.Value)').prop('disabled', 'disabled');
                @:$('#rbtFimDeSemana@(item.Value)').prop('checked', false);
                @:$('#labelFimDeSemana@(item.Value)').addClass("state-disabled");
            }
        }
    }

    function desabilitarFatoGerador() {
        @{
            foreach (var item in Model.ListarOpcoesFatoGerador)
            {
                @:$('#rbtFatoGerador@(item.Value)').prop('disabled', 'disabled');
                @:$('#rbtFatoGerador@(item.Value)').prop('checked', false);
                @:$('#labelFatoGerador@(item.Value)').addClass("state-disabled");
            }
        }
    }

    function clearForm()
    {
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.Id)').val('');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.Descricao)').val('');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.Sigla)').val('');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.Aliquota)').val(roundDecimal(floatToString(0), 5));
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.ContaContabil)').val('');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.TipoCompromissoId)').val(0);
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.ClienteId)').val(0);
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)').prop('checked', false);
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)').prop('checked', false);
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.PagamentoEletronico)').prop('checked', false);
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)').prop('disabled', '');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)').prop('disabled', '');
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.PagamentoEletronico)').prop('disabled', '');
        $('#labelRetido').removeClass("state-disabled");
        $('#labelIndireto').removeClass("state-disabled");
        $('#labelPageletr').removeClass("state-disabled");

        desabilitarPeriodicidade();
        desabilitarFimDeSemana();
        desabilitarFatoGerador();
        desabilitarDiaVencimento();


@*        $("input:radio[name='@Html.NameFor(m => m.ImpostoFinanceiro.Periodicidade)']").each(function (i) {
            this.checked = false;
            this.disabled = 'disabled';
        });*@
@*        $("input:radio[name='@Html.NameFor(m => m.ImpostoFinanceiro.FimDeSemana)']").each(function (i) {
            this.checked = false;
            this.disabled = 'disabled';
        });*@
        $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').val('');
@*        $("input:radio[name='@Html.NameFor(m => m.ImpostoFinanceiro.FatoGerador)']").each(function (i) {
            this.checked = false;
            this.disabled = 'disabled';
        });*@
    }

    function novo()
    {
        clearForm();
        $('#notificationMessages').html('');
        $('#ImpostoFinanceiro_Descricao-error').remove();
        $('#ImpostoFinanceiro_Sigla-error').remove();
    }

    function refresh()
    {
        onSuccess();
        clearForm();
        listarFiltro();
    }

    function loadItem(id) 
    {
        novo();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("CarregarItem", "ImpostoFinanceiro")',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                id: id
            })
        })
        .success(function (result) {
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Id)').val(result.Id);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Descricao)').val(result.Descricao);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Sigla)').val(result.Sigla);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Aliquota)').val(roundDecimal(floatToString(result.Aliquota), 5));
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.ContaContabil)').val(result.ContaContabil);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.ClienteId)').val(result.ClienteId);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.TipoCompromissoId)').val(result.TipoCompromissoId);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.EhRetido)').prop('checked', result.EhRetido);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.Indireto)').prop('checked', result.Indireto);
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.PagamentoEletronico)').prop('checked', result.PagamentoEletronico);
            $("input:radio[name='@Html.NameFor(m => m.ImpostoFinanceiro.Periodicidade)']").each(function (i)
            {
                if ($(this).val() == result.Periodicidade)
                    $(this).prop('checked', true);
            });
            $("input:radio[name='@Html.NameFor(m => m.ImpostoFinanceiro.FimDeSemana)']").each(function (i) {
                if ($(this).val() == result.FimDeSemana)
                    $(this).prop('checked', true);
            });
            $('#@Html.IdFor(m => m.ImpostoFinanceiro.DiaVencimento)').val(result.DiaVencimento);
            $("input:radio[name='@Html.NameFor(m => m.ImpostoFinanceiro.FatoGerador)']").each(function (i) {
                if ($(this).val() == result.FatoGerador)
                    $(this).prop('checked', true);
            });
                    
            goToTop();
        });
    }

    function limpaPaginacao() {
        $('#@Html.IdFor(m => m.Filtro.PaginationParameters.PageIndex)').val(0);
    };

    function listarFiltro() {
        $('#formFilter@(Model.Filtro.PaginationParameters.UniqueIdentifier)').submit();
    }

</script>