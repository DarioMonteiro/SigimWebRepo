@using GIR.Sigim.Application.DTO.Financeiro
@model GIR.Sigim.Presentation.WebUI.ViewModel.ListaViewModel

@{IEnumerable<ImpostoFinanceiroDTO> Lista = Model.Records as IEnumerable<ImpostoFinanceiroDTO>;}

<div class="table-container">
    @if (Lista != null && Lista.Any())
    {
        <div class="dt-toolbar table-header hidden-xs">
            <div class="col-sm-12 col-xs-12">
                <div class="dataTables_length" id="dt_basic_length" style="float: right!important;">
                    <label>
                        @Html.DropDownListFor(
                            m => m.PageSize,
                            Model.PageSizeList,
                            new
                            {
                                @id = "pageSizeSelector" + Model.UniqueIdentifier,
                                @aria_controls = "dt_basic",
                                @class = "form-control"
                            })
                    </label>
                </div>
            </div>
        </div>
        <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
            <table id="tableSearchResult@(Model.UniqueIdentifier)" class="table table-bordered table-striped table-condensed table-hover dataTable">
                <thead>
                    <tr role="row">
                        @{
                            string sortingSuffix = Model.Ascending ? "_asc" : "_desc";
                            string idSortingSuffix = "sorting";
                            string descricaoSortingSuffix = "sorting";
                            string siglaSortingSuffix = "sorting";
                            string aliquotaSortingSuffix = "sorting";
                            string compromissoSortingSuffix = "sorting";
                            string clienteSortingSuffix = "sorting";
                            string retidoDescricaoSortingSuffix = "sorting";
                            string indiretoDescricaoSortingSuffix = "sorting";
                            string pagamentoEletronicoDescricaoSortingSuffix = "sorting";
                            string periodicidadeDescricaoSortingSuffix = "sorting";
                            string fimDeSemanaDescricaoSortingSuffix = "sorting";
                            string fatoGeradorDescricaoSortingSuffix = "sorting";
                            string contaContabilSortingSuffix = "sorting";
                            string diaVencimentoSortingSuffix = "sorting";
                            
                            switch (Model.OrderBy)
                            {
                                case "id":
                                    idSortingSuffix += sortingSuffix;
                                    break;
                                case "descricao":
                                    descricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "sigla":
                                    siglaSortingSuffix += sortingSuffix;
                                    break;
                                case "aliquota":
                                    aliquotaSortingSuffix += sortingSuffix;
                                    break;
                                case "compromisso":
                                    compromissoSortingSuffix += sortingSuffix;
                                    break;
                                case "cliente":
                                    clienteSortingSuffix += sortingSuffix;
                                    break;
                                case "retidoDescricao":
                                    retidoDescricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "indiretoDescricao":
                                    indiretoDescricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "pagamentoEletronicoDescricao":
                                    pagamentoEletronicoDescricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "periodicidadeDescricao":
                                    periodicidadeDescricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "fimDeSemanaDescricao":
                                    fimDeSemanaDescricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "fatoGeradorDescricao":
                                    fatoGeradorDescricaoSortingSuffix += sortingSuffix;
                                    break;
                                case "contaContabilDescricao":
                                    contaContabilSortingSuffix += sortingSuffix;
                                    break;
                                case "diaVencimentoDescricao":
                                    diaVencimentoSortingSuffix += sortingSuffix;
                                    break;
                                                                        
                                default:
                                    break;
                            }
                        }
                        <th class="sorting @idSortingSuffix text-left" data-order="id" style="min-width:60px;">Código</th>
                        <th class="sorting @siglaSortingSuffix text-left" data-order="sigla" style="min-width:75px;">Sigla</th>
                        <th class="sorting @descricaoSortingSuffix text-Left" data-order="descricao" style="min-width:300px;">Descrição</th>
                        <th class="sorting @aliquotaSortingSuffix text-left" data-order="aliquota" style="min-width:80px;">Alíquota</th>
                        <th class="sorting @compromissoSortingSuffix text-left" data-order="compromisso" style="min-width:120px;">Compromisso</th>
                        <th class="sorting @clienteSortingSuffix text-left" data-order="cliente" style="min-width:300px;">Correntista</th>
                        <th class="sorting @retidoDescricaoSortingSuffix text-center" data-order="retidoDescricao" style="min-width:70px;">Retido</th>
                        <th class="sorting @indiretoDescricaoSortingSuffix text-center" data-order="indiretoDescricao" style="min-width:70px;">Indireto</th>
                        <th class="sorting @pagamentoEletronicoDescricaoSortingSuffix text-center" data-order="pagamentoEletronicoDescricao" style="min-width:85px;">Pagto elet.</th>
                        <th class="sorting @periodicidadeDescricaoSortingSuffix text-left" data-order="periodicidadeDescricao" style="min-width:95px;">Periodicidade</th>
                        <th class="sorting @diaVencimentoSortingSuffix text-center" data-order="diaVencimento" style="min-width:85px;">Dia Vencto</th>
                        <th class="sorting @fimDeSemanaDescricaoSortingSuffix text-left" data-order="fimDeSemanaDescricao" style="min-width:105px;">Fim de semana</th>
                        <th class="sorting @fatoGeradorDescricaoSortingSuffix text-left" data-order="fatoGeradorDescricao" style="min-width:160px;">Fato gerador</th>
                        <th class="sorting @contaContabilSortingSuffix text-left" data-order="contaContabil" style="min-width:105px;">Conta contábil</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Lista)
                    {
                        <tr>
                            <td class="text-right"><a href="javascript:loadItem(@item.Id.ToString());">@item.Id.ToString()</a></td>
                            <td class="text-left">@item.Sigla</td>
                            <td class="text-left">@item.Descricao</td>
                            <td class="text-right">@item.Aliquota</td>
                            @{if (item.TipoCompromisso == null) 
                                {<td class="text-left"></td>}
                              else
                                {<td class="text-left">@item.TipoCompromisso.Descricao</td>}
                            }
                            @{if (item.Cliente == null) 
                                {<td class="text-left"></td>}
                              else
                                {<td class="text-left">@item.Cliente.Nome</td>}
                            }
                            <td class="text-center">@item.EhRetidoDescricao</td>
                            <td class="text-center">@item.IndiretoDescricao</td>
                            <td class="text-center">@item.PagamentoEletronicoDescricao</td>
                            <td class="text-left">@item.PeriodicidadeDescricao</td>
                            <td class="text-center">@item.DiaVencimento</td>
                            <td class="text-left">@item.FimDeSemanaDescricao</td>
                            <td class="text-left">@item.FatoGeradorDescricao</td>
                            <td class="text-center">@item.ContaContabil</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @Html.Partial("_PaginationPartial", Model)
    }
</div>