@using GIR.Sigim.Application.DTO.Financeiro
@model GIR.Sigim.Presentation.WebUI.ViewModel.ListaViewModel

@{
    IEnumerable<CaixaDTO> Lista = Model.Records as IEnumerable<CaixaDTO>;    
}

<div class="table-container">
    @if (Lista != null && Lista.Any())
    {
        <div class="dt-toolbar table-header hidden-xs">
            <div class="col-sm-12 col-xs-12">
                <div class="dataTables_length" id="dt_basic_length" style="float: right!important;">
                    <label>
                        @Html.DropDownListFor(
                            m => m.PageSize,
                            Model.PageSizeList,
                            new
                            {
                                @id = "pageSizeSelector",
                                @aria_controls = "dt_basic",
                                @class = "form-control",
                                onchange = "changePageSize();"
                            })
                    </label>
                </div>
            </div>
        </div>
        <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
            <table id="tableSearchResult" class="table table-bordered table-striped table-condensed table-hover dataTable">
                <thead>
                    <tr role="row">
                        @{
        string sortingSuffix = Model.Ascending ? "_asc" : "_desc";
        string idSortingSuffix = "sorting";
        string descricaoSortingSuffix = "sorting";
        string situacaoSortingSuffix = "sorting";
        string centroContabilSortingSuffix = "sorting";
        string centroCustoSortingSuffix = "sorting";    

        switch (Model.OrderBy)
        {
            case "id":
                idSortingSuffix += sortingSuffix;
                break;
            case "descricao":
                descricaoSortingSuffix += sortingSuffix;
                break;
            case "situacao":
                situacaoSortingSuffix += sortingSuffix;
                break;
            case "centroContabil":
                centroContabilSortingSuffix += sortingSuffix;
                break;
            case "centroCusto":
                centroCustoSortingSuffix += sortingSuffix;
                break;                        
            default:
                break;
        }
                        }                        
                        <th class="sorting @idSortingSuffix text-center" data-order="id" style="width:60px;">Código</th>
                        <th class="sorting @descricaoSortingSuffix text-center" data-order="descricao" style="min-width:100px;">Descrição</th> 
                        <th class="sorting @situacaoSortingSuffix text-center" data-order="descricao" style="min-width:100px;">Situação</th>
                        <th class="sorting @centroContabilSortingSuffix text-center" data-order="descricao" style="min-width:100px;">Centro contábil</th>
                        <th class="sorting @centroCustoSortingSuffix text-center" data-order="descricao" style="min-width:100px;">Centro de custo</th>           
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Lista)
                       
                    {
                        <tr>                                                
                            <td class="text-right"><a href="javascript:loadItem(@item.Id.ToString());">@item.Id.ToString()</a></td>                          
                            <td class="text-center">@item.Descricao</td>     
                            <td class="text-center">@item.Situacao</td>                      
                            <td class="text-center">@item.CentroContabil</td>
                            <td class="text-center">@item.CentroCustoDescricao</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @Html.Partial("_PaginationPartial", Model)
    }
</div>