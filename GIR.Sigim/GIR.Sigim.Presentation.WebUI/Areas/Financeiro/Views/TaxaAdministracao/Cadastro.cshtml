@model GIR.Sigim.Presentation.WebUI.Areas.Financeiro.ViewModel.TaxaAdministracaoViewModel

@{
    ViewBag.Title = "Taxa de administração";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    <a href="javascript:novo();" class="btn btn-primary" style="float:right;">Novo</a>
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Cadastro",
                            "TaxaAdministracao",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "refresh", UpdateTargetId = "notificationMessages" },
                            new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                    <div class="panel-body no-padding">
                        <fieldset>
                            <div class="row">
                                @Html.EditorFor(m => m.CentroCusto, "CentroCusto", new { @sectionClass = "col col-4", @labelText = "Centro de Custo", @required = true, @somenteNivelFolha = true, @podeEditar = false })

                                @Html.EditorFor(m => m.Cliente, "ClienteFornecedorPesquisaGenerica", new { @sectionClass = "col col-4", 
                                                                                                           @required = true, 
                                                                                                           @label = "Correntista",
                                                                                                           @clienteFornecedorModulo = ((int)GIR.Sigim.Application.Enums.ClienteFornecedorModuloAutoComplete.AReceber),
                                                                                                           @situacao = ((int)GIR.Sigim.Application.Enums.SituacaoAutoComplete.Ativo),
                                                                                                           @exibirBotaoPesquisa = true,
                                                                                                           @sectionStyle = "margin-bottom: 10px; margin-left: -15px;",
                                                                                                           @podeEditar = false 
                                                                                                         })

                            </div>
                        </fieldset>
                        <fieldset id="formItem">
                            @Html.HiddenFor(m => m.JsonItens)
                            @Html.HiddenFor(m => m.IndexSelecionado)
                            <div class="row" style="padding-top:0px;">
                                @Html.EditorFor(m => m.Classe, "Classe", new { @sectionClass = "col col-5", @somenteNivelFolha = false, @centroCustoRequerido = false})
                                <section class="col col-2">
                                    @Html.LabelFor(m => m.Percentual, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.Percentual, "{0:F5}", new { @class = "text-right decimal-5-casas required" })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.Percentual, "", new { @class = "note note-error" })
                                </section>
                            </div>
                             <div class="row">
                                <section class="col col-6">
                                    <button id="btnAddItem" type="button" class="btn btn-primary">Adicionar</button>
                                    <button id="btnRemoverItem" type="button" class="btn btn-danger">Remover</button>
                                </section>
                            </div>
                            <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
                                <table id="tableItens" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                    <thead>
                                        <tr role="row">
                                            <th class="text-center" style="width: 30px;">...</th>
                                            <th class="text-left">Classe</th>
                                            <th class="text-right">Percentual</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>

                        </fieldset>
                    </div>
                    <div class="ui-dialog ui-widget ui-widget-content ui-corner-all ui-front ui-dialog-buttons ui-draggable" 
                        tabindex="-1" role="dialog" aria-describedby="dlgSimpleExcluirRegistro" aria-labelledby="ui-id-1" 
                            style="height: auto; width: 600px; top: 220px; left: 262px; display: none;">
                        <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
                            <span id="ui-id-1" class="ui-dialog-title">
                            </span>
                        </div>
                        <div id="dlgSimpleExcluirRegistro" class="ui-dialog-content ui-widget-content" style="width: auto; min-height: 0px; max-height: none; height: auto;">
	                        <p>
		                        Deseja excluir o registro selecionado ?
	                        </p>
                        </div>
                        <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                            <div class="ui-dialog-buttonset">
                            </div>
                        </div>
                    </div>
                    <footer>
                        @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-primary" })
                        @{
                            string disableBtnDeletar = string.Empty;
                            if (!Model.PodeDeletar)
                            {
                                disableBtnDeletar = "disabled";
                            }
                        }
                        <button type="button" id="btnDeletar" class="btn btn-danger @disableBtnDeletar">
                            Deletar
                        </button>
                        @{
                            var url = Url.Action("Imprimir", "TaxaAdministracao");
                        }
                        @Html.EditorFor(m => m.PodeImprimir, "Imprimir", new { @url = url })
                        @{
                            string disableBtnSalvar = string.Empty;
                            if (!Model.PodeSalvar)
                            {
                                disableBtnSalvar = "disabled";
                            }
                        }
                        <button type="submit" class="btn btn-primary @disableBtnSalvar">
                            Gravar
                        </button>
                    </footer>
                    }
                </div>
            </div>
        </div>
    </article>
</div>
@*@section scripts{
    @Html.EditorFor(m => m.Filtro.PaginationParameters, "ListPageScript")
}*@

<script type="text/javascript">
    jsonItemArray = JSON.parse($("#@Html.IdFor(m => m.JsonItens)").val());

    $(document).ready(function ()
    {
        $('body').addClass("hidden-menu");

        inicializar();

        fillTable();

        $("#@Html.IdFor(m => m.CentroCusto.Codigo)").on("change", function () {
            CarregaRegistros(true);
        });

        $("#@Html.IdFor(m => m.Cliente.Nome)").on("keydown", function ()
        {
            CarregaRegistros(true);
        });

        jQuery.validator.setDefaults({
            ignore: '#formItem *'
        });

        jQuery.validator.addMethod(
            "ehClasseValida",
            function (value, element, params) {
                var isValid = validaClasse_@(Html.IdFor(m => m.Classe.Codigo))();
                $.validator.messages.ehClasseValida = $('#@Html.IdFor(m => m.Classe.Codigo)_ValidationMessage').html();
                return isValid;
            }, ''
        );

        jQuery.validator.addMethod(
            "ehCentroCustoValido",
            function (value, element, params) {
                var isValid = validaCentroCusto();
                $.validator.messages.ehCentroCustoValido = $('#@Html.IdFor(m => m.CentroCusto.Codigo)_ValidationMessage').html();
                return isValid;
            }, ''
        );

        $('#formCadastro').validate({
            rules:
            {
                '@Html.NameFor(m => m.Classe.Codigo)':
                    {
                        ehClasseValida: true,
                        required: true
                    },
                '@Html.NameFor(m => m.CentroCusto.Codigo)': 
                    {
                        ehCentroCustoValido: true,
                        required: true
                    }
            },
            messages: {
                '@Html.NameFor(m => m.CentroCusto.Codigo)': {
                    required: '@string.Format(GIR.Sigim.Application.Resource.Sigim.ErrorMessages.CampoObrigatorio, "Centro de Custo")'
                },
                '@Html.NameFor(m => m.Classe.Codigo)': {
                    required: '@string.Format(GIR.Sigim.Application.Resource.Sigim.ErrorMessages.CampoObrigatorio, "Classe")'
                }
            },
            errorPlacement: function (error, element) {
                var span = getErrorMessageContainer(element.attr("name"));
                span.html(error.append());
            },
            highlight: function (element, errorClass) {
                var span = getErrorMessageContainer($(element).attr("name"));
                span.removeClass("field-validation-valid");
                span.addClass("field-validation-error");
            },
            unhighlight: function (element, errorClass) {
                var span = getErrorMessageContainer($(element).attr("name"));
                span.removeClass("field-validation-error");
                span.addClass("field-validation-valid");
            }


        });

        $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
            _title: function (title) {
                if (!this.options.title) {
                    title.html("&#160;");
                } else {
                    title.html(this.options.title);
                }
            }
        }));

        $('#dlgSimpleExcluirRegistro').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            title: "<div class='widget-header'><h4><i class='fa fa-warning'></i> Atenção</h4></div>",
            buttons: [{
                html: "Excluir",
                "class": "btn btn-primary",
                click: function () {
                    $(this).dialog("close");
                    excluirRegistro();
                }
            }, {
                html: "<i class='fa fa-times'></i>&nbsp; Cancelar",
                "class": "btn btn-default",
                click: function () {
                    $(this).dialog("close");
                }
            }]
        });

        $("#btnDeletar").on("click", function () {
            var clienteId = $('#@Html.IdFor(m => m.Cliente.Id)').val();
            var centroCustoCodigo = $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val();
            var centroCustoDescricao = $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val();

            if ((centroCustoDescricao == "") || (clienteId == "")) {
                smartAlert("Atenção", "Selecione um registro para excluir !", "warning");
            }
            else {
                $('#dlgSimpleExcluirRegistro').dialog('open');
            }
        });

        $(document).on("showFormatoImpressaoModalPanel", function (e) {
            var centroCustoCodigo = $('#@Html.IdFor(m => m.CentroCusto.Codigo )').val();
            var clienteId = $('#@Html.IdFor(m => m.Cliente.Id)').val();
            var centroCustoDescricao = $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val();

            if ((centroCustoCodigo == "" || centroCustoDescricao == "") || (clienteId == "")) {
                smartAlert("Atenção", "Selecione um registro para imprimir !", "warning");
                e.event.preventDefault();
            }

            parametrosUrlImpressao = '&centroCustoCodigo=' + centroCustoCodigo;
            parametrosUrlImpressao += '&clienteId=' + clienteId;
        });

    });

    function inicializar() {
        var centroCustoDescricao = $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val();
        var clienteId = $('#@Html.IdFor(m => m.Cliente.Id)').val();

        if ((centroCustoDescricao == "") && (clienteId == "")) {
            novo();
        }

    }

    function excluirRegistro() {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Deletar", "TaxaAdministracao")',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                centroCustoCodigo: $('#@Html.IdFor(m => m.CentroCusto.Codigo )').val(),
                clienteId: $('#@Html.IdFor(m => m.Cliente.Id)').val()
            })
        })
        .success(function (result) {
            $('#notificationMessages').html(result);
            clearForm();
        });
    }

    $('#btnAddItem').on("click", function ()
    {
        if ($('#formItem input').valid()) {
            if (validaAdicionar() == true) {
                addItem();
            }
        }
    });

    $('#btnRemoverItem').on("click", function ()
    {
        removerItem();
    });

    function clearForm()
    {
        $('#@Html.IdFor(m => m.Cliente.Id)').val(0);
        $('#@Html.IdFor(m => m.Cliente.Nome)').val("");
        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val('');
        $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val('');

        habilitaCorrentistaEhCentroCusto();

        limpaItem();
        limpaLista();

        jsonItemArray = [];
        $("#@Html.IdFor(m => m.JsonItens)").val(null);

    }

    function limpaLista() {
        $("#tableItens tbody").empty();
    }

    function habilitaCorrentistaEhCentroCusto() {
        $('#@Html.IdFor(m => m.Cliente.Nome)').prop('readonly', false);
        $('#@Html.IdFor(m => m.Cliente.Nome)').removeClass('readonly');
        $('#BtnShowModalPanel_Cliente_Id').removeAttr('href');
        $('#BtnShowModalPanel_Cliente_Id').attr('href', '#Cliente_Id_Pesquisa_ModalPanel');
        $('#BtnShowModalPanel_Cliente_Id').attr('data-toggle', 'modal');

        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').prop('readonly', false);
        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').removeClass('readonly');
        $('#BtnShowModalPanel_CentroCusto_Codigo').removeAttr('href');
        $('#BtnShowModalPanel_CentroCusto_Codigo').attr('href', '#CentroCusto_Codigo_ModalPanel');
        $('#BtnShowModalPanel_CentroCusto_Codigo').attr('data-toggle', 'modal');
    }

    function desabilitaCorrentistaEhCentroCusto() {
        $('#@Html.IdFor(m => m.Cliente.Nome)').prop('readonly', true);
        $('#@Html.IdFor(m => m.Cliente.Nome)').addClass('readonly');
        $('#BtnShowModalPanel_Cliente_Id').attr('href', 'javascript:void(0);');
        $('#BtnShowModalPanel_Cliente_Id').removeAttr('data-toggle');

        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').prop('readonly', true);
        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').addClass('readonly');
        $('#BtnShowModalPanel_CentroCusto_Codigo').attr('href', 'javascript:void(0);');
        $('#BtnShowModalPanel_CentroCusto_Codigo').removeAttr('data-toggle');
    }


    function limpaItem()
    {
        $('#@Html.IdFor(m => m.Classe.Codigo)').val('');
        $('#@Html.IdFor(m => m.Classe.Descricao)').val('');
        $('#@Html.IdFor(m => m.Percentual)').val(roundDecimal(floatToString(0), 5));
        $('#@Html.IdFor(m => m.IndexSelecionado)').val(-1);
    }

    function novo()
    {
        clearForm();
        limpaMsg();
    }

    function limpaMsg()
    {
        $('#notificationMessages').html('');
        $('#Classe_Codigo-error').remove();
        $('#CentroCusto_Codigo-error').remove();
    }

    function refresh()
    {
        onSuccess();
        CarregaRegistros(false);
    }

    function loadItem(index)
    {
        $('#@Html.IdFor(m => m.Classe.Codigo)').val(jsonItemArray[index].Classe.Codigo);
        $('#@Html.IdFor(m => m.Classe.Descricao)').val(jsonItemArray[index].Classe.Descricao);
        $('#@Html.IdFor(m => m.Percentual)').val(roundDecimal(floatToString(jsonItemArray[index].Percentual), 5));
        $('#@Html.IdFor(m => m.IndexSelecionado)').val(index);
        goToTop();
    }

    function CarregaRegistros(bolLimpaMsg)
    {
        var centroCustoCodigo = $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val();
        var centroCustoDescricao = $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val();
        var clienteId = parseInt($('#@Html.IdFor(m => m.Cliente.Id)').val());
        if ((centroCustoDescricao != "") && (clienteId != 0))
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CarregarItem", "TaxaAdministracao")',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                                        CentroCustoCodigo: centroCustoCodigo,
                                        ClienteId: clienteId
                                     }),
                success: function (result) {
                    if (bolLimpaMsg == true) {
                        limpaMsg();
                    }
                    limpaItem();
                    desabilitaCorrentistaEhCentroCusto();
                    if (result.lista != "[]") {
                        jsonItemArray = JSON.parse(result.lista);
                        $("#@Html.IdFor(m => m.JsonItens)").val(result.lista);
                        fillTable();
                    }
                },
                error: function (result) {
                    smartAlert("erro");
                }
            });
        }
    };

    function fillTable()
    {
        $("#tableItens tbody").empty();
        if (jsonItemArray.length > 0) {
            for (var intIndex = 0; intIndex < jsonItemArray.length; intIndex++) {
                var row = $('<tr />')
                $("#tableItens tbody").append(row);

                var chkDisabled = '';
                var labelClass = 'checkbox';
                row.append($('<td><label class="' + labelClass + '"><input type="checkbox" name="checkbox" value="' + intIndex + '" ' + chkDisabled + '><i></i>' + '' + '</label></td>'));
                row.append($('<td class="text-left">' + jsonItemArray[intIndex].Classe.Codigo + ' - ' + jsonItemArray[intIndex].Classe.Descricao + '</td>'));
                row.append($('<td class="text-right" onclick="loadItem(' + intIndex + ');">' + roundDecimal(floatToString(jsonItemArray[intIndex].Percentual), 5) + '</td>'));
            }
        }
    }

    function addItem()
    {
        var item = $("#formItem").toObject({ mode: 'combine', skipEmpty: false, nodeCallback: processData })

        var index = -1;
        if (jsonItemArray.length > 0) {
            $.each(jsonItemArray, function (i, obj) {
                if ($('#@Html.IdFor(m => m.IndexSelecionado)').val() == i) {
                    index = i;
                    return false;
                }
            });
        }

        if (index >= 0) {
            jsonItemArray.splice(index, 1, item);
        }
        else {
            jsonItemArray.push(item);
        }

        $("#@Html.IdFor(m => m.JsonItens)").val(JSON.stringify(jsonItemArray));
        fillTable();
        limpaItem();
        $("#@Html.IdFor(m => m.Classe.Codigo)").focus();
    }

    function processData(node)
    {
        var fieldId = node.getAttribute ? node.getAttribute('id') : '';
        var fieldName = node.getAttribute ? node.getAttribute('name') : '';


        if (fieldName != '' && (fieldId == "@Html.IdFor(m => m.Percentual)")) {
            var value = $("#" + fieldId).val();
            return { name: fieldName, value: stringToFloat(value) };
        }

        return false;
    }

    function validaAdicionar()
    {
        var result = true;
        var clienteId = '';

        if (validaClasse_@(Html.IdFor(m => m.Classe.Codigo))() == false)
        {
            result = false;
            smartAlert("Erro", "Informe uma classe válida.", "error");
            return false;
        }

        if (validaCentroCusto() == false) {
            result = false;
            smartAlert("Erro", "Informe um centro de custo válido.", "error");
            return false;
        }

        clienteId = $('#@Html.IdFor(m => m.Cliente.Id)').val();
        if (clienteId == '')
        {
            result = false;
            smartAlert("Erro", "Informe o campo cliente.", "error");
            return false;
        }
        if (($('#@Html.IdFor(m => m.CentroCusto.Codigo)').val() == ''))
        {
            result = false;
            smartAlert("Erro", "Informe o campo centro de custo.", "error");
            return false;
        }
        if (($('#@Html.IdFor(m => m.Classe.Codigo)').val() == ''))
        {
            result = false;
            smartAlert("Erro", "Informe o campo classe.", "error");
            return false;
        }
        if ((stringToFloat($('#@Html.IdFor(m => m.Percentual)').val()) <= 0))
        {
            result = false;
            smartAlert("Erro", "Informe um percentual maior que zero.", "error");
            return false;
        }

        if ((stringToFloat($('#@Html.IdFor(m => m.Percentual)').val()) > 100)) {
            result = false;
            smartAlert("Erro", "O percentual não deve ultrapassar os 100 %", "error");
            return false;
        }

        var percentualTotal = 0;
        if (jsonItemArray.length > 0) {
            $.each(jsonItemArray, function (index, obj) {
                var ehMesmaClasse = (obj.Classe.Codigo == $('#@Html.IdFor(m => m.Classe.Codigo)').val());
                var ehMesmoIndex = (index == $('#@Html.IdFor(m => m.IndexSelecionado)').val());
                var percentual = parseFloat(obj.Percentual);
                var percentualModel = stringToFloat($('#@Html.IdFor(m => m.Percentual)').val());

                if (ehMesmaClasse && !ehMesmoIndex) {
                    result = false;
                    smartAlert("Erro", "Item repetido.", "error");
                    return false;
                }

                if (!ehMesmoIndex) {
                    percentualTotal = percentualTotal + percentual;
                    if ((percentualTotal + percentualModel) > 100) {
                        result = false;
                        smartAlert("Erro", "O percentual não deve ultrapassar os 100 %", "error");
                        return false;
                    }
                }
            });
        }

        return result;
    }

    function removerItem()
    {
        var arrSequencial = [];
        var index;
        $($('#tableItens input[type=checkbox]:checked').get().reverse()).each(function () {
            index = parseInt($(this).val());
            arrSequencial.push(index);
            jsonItemArray.splice(index, 1);
        });

        if (arrSequencial.length > 0)
        {
            $("#@Html.IdFor(m => m.JsonItens)").val(JSON.stringify(jsonItemArray));
            fillTable();
        }
        else
        {
            smartAlert("Erro", "Selecione pelo menos 1 item para remover.", "error");
        }
    }

</script>