@using GIR.Sigim.Application.DTO.Financeiro
@model GIR.Sigim.Presentation.WebUI.Areas.Financeiro.ViewModel.ListaViewModelRelContasPagarTitulo

@{
    IEnumerable<RelContasPagarTitulosDTO> Lista = Model.Records as IEnumerable<RelContasPagarTitulosDTO>;
}

<div class="table-container">
    @if (Lista != null && Lista.Any())
    {
        <div class="jarviswidget jarviswidget-sortable" id="wid-id-0" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" role="widget" style="">
			<header role="heading">
				<span class="widget-icon"></span>
				<h2>Totais </h2>
				<span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
			</header>
			<div role="content">
				<div class="widget-body no-padding">
					<form class="smart-form">
						<fieldset>
							<div class="row">
                                <section class="col col-4">
                                    @Html.LabelFor(m => m.TotalValorTitulo, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TotalValorTitulo, "{0:N2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style = "font-weight:bold" })  
                                    </label>
                                </section>
                                <section class="col col-4">
                                    @Html.LabelFor(m => m.TotalValorLiquido, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TotalValorLiquido, "{0:N2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style = "font-weight:bold" })  
                                    </label>
                                </section>
                                <section class="col col-4">
                                    @Html.LabelFor(m => m.TotalValorApropriacao, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.TotalValorApropriacao, "{0:N2}", new { @readonly = "", @class = "text-right decimal-2-casas readonly", @style = "font-weight:bold" })  
                                    </label>
                                </section>
							</div>
                        </fieldset>
					</form>
				</div>
			</div>
        </div>      
        
        <div class="dt-toolbar table-header hidden-xs">
            <div class="col-sm-12 col-xs-12">
                <div class="dataTables_length" id="dt_basic_length" style="float: right!important;">
                    <label>
                        @Html.DropDownListFor(
                            m => m.PageSize,
                            Model.PageSizeList,
                            new
                            {
                                @id = "pageSizeSelector" + Model.UniqueIdentifier,
                                @aria_controls = "dt_basic",
                                @class = "form-control"
                            })
                    </label>
                </div>
            </div>
        </div>
        <div class="table-responsive" style="width:100%; overflow-x:auto;">
            <table id="tableSearchResult@(Model.UniqueIdentifier)" class="table table-bordered table-striped table-condensed table-hover dataTable">
                <thead>
                    <tr role="row">
                        @{
                            string sortingSuffix = Model.Ascending ? "_asc" : "_desc";
                            string tituloIdSortingSuffix = "sorting";
                            string dataSelecaoSortingSuffix = "sorting";
                            string valorTituloSortingSuffix = "sorting";
                            string valorLiquidoSortingSuffix = "sorting";
                            string valorApropriadoSortingSuffix = "sorting";

                            switch (Model.OrderBy)
                            {
                                case "tituloId":
                                    tituloIdSortingSuffix += sortingSuffix;
                                    break;
                                case "dataSituacao":
                                    dataSelecaoSortingSuffix += sortingSuffix;
                                    break;
                                case "valorTitulo":
                                    valorTituloSortingSuffix += sortingSuffix;
                                    break;
                                case "valorLiquido":
                                    valorLiquidoSortingSuffix += sortingSuffix;
                                    break;
                                case "valorApropriado":
                                    valorApropriadoSortingSuffix += sortingSuffix;
                                    break;
                                default:
                                    break;
                            }
                        }

                        <th class="sorting @tituloIdSortingSuffix text-left" data-order="tituloId" style="min-width:60px;">Título</th>
                        <th class="sorting @dataSelecaoSortingSuffix text-left" data-order="dataSelecao" style="min-width:70px;">Data seleção</th>
                        <th class="sorting @valorTituloSortingSuffix text-left" data-order="valorTitulo" style="min-width:90px;">Valor título</th>
                        <th class="sorting @valorLiquidoSortingSuffix text-left" data-order="valorLiquido" style="min-width:60px;">Valor líquido</th>
                        <th class="sorting @valorApropriadoSortingSuffix text-left" data-order="valorApropriado" style="min-width:60px;">Valor Apropriado</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Lista)
                    {
                        string dataSelecao = "";
                        if (item.DataSelecao.HasValue)
                        {
                            dataSelecao = item.DataSelecao.Value.ToShortDateString();
                        }
                        
                        <tr>
                            <td class="text-right text-nowrap">@item.TituloId</td>
                            <td class="text-center text-nowrap">@dataSelecao</td>
                            <td class="text-right text-nowrap">@item.ValorTitulo.ToString("N2")</td>
                            <td class="text-right text-nowrap">@item.ValorLiquido.ToString("N2")</td>
                            <td class="text-right text-nowrap">@item.ValorApropriado.ToString("N2")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        @Html.Partial("_PaginationPartialRelContasPagarTitulos", Model)
    }
</div>
<script type="text/javascript">
    $(document).ready(function () {

        $('body').addClass("hidden-menu");
    });
</script>