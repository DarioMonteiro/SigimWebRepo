@model GIR.Sigim.Presentation.WebUI.Areas.Financeiro.ViewModel.RelAcompanhamentoFinanceiroListaViewModel
@{
    ViewBag.Title = "Acompanhamento financeiro";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                        "Lista",
                        "RelAcompanhamentoFinanceiro",
                        null,
                        new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "renderTela", UpdateTargetId = "resultadoBusca" },
                        new { @id = "formFilter" + Model.Filtro.PaginationParameters.UniqueIdentifier, @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.PageIndex)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.PageSize)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.OrderBy)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.Ascending)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.UniqueIdentifier)
                        <div class="panel-group smart-accordion-default" id="accordion">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4 class="panel-title">
                                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseFiltro" class="">
                                            <i class="fa fa-lg fa-angle-down pull-right"></i>
                                            <i class="fa fa-lg fa-angle-up pull-right"></i>
                                            Filtro
                                        </a>
                                    </h4>
                                </div>

                                <div id="collapseFiltro" class="panel-collapse collapse in">
                                    <div class="panel-body no-padding">
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.Filtro.DataInicial, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.Filtro.DataInicial, "{0:dd/MM/yyyy}",new { @class = "required" })
                                                    </label>
                                                    <script type="text/javascript">
                                                        $(document).ready(function () {
                                                            $("#@Html.IdFor(m => m.Filtro.DataInicial)").on("change", function () {
                                                                limpaLista();
                                                            });
                                                        });
                                                    </script>
                                                    @Html.ValidationMessageFor(m => m.Filtro.DataInicial, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-3">
                                                    @Html.LabelFor(m => m.Filtro.DataFinal, new { @class = "label" })
                                                    <label class="input">
                                                        <i class="icon-append fa fa-calendar"></i>
                                                        @Html.TextBoxFor(m => m.Filtro.DataFinal, "{0:dd/MM/yyyy}",new { @class = "required" })
                                                    </label>
                                                    <script type="text/javascript">
                                                        $(document).ready(function () {
                                                            $("#@Html.IdFor(m => m.Filtro.DataFinal)").on("change", function () {
                                                                limpaLista();
                                                            });
                                                        });
                                                    </script>
                                                    @Html.ValidationMessageFor(m => m.Filtro.DataFinal, "Informe uma data válida.", new { @class = "note note-error" })
                                                </section>
                                                <script type="text/javascript">
                                                    $(document).ready(function () {
                                                        $('#@Html.IdFor(m => m.Filtro.DataInicial)').datepicker({
                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                            changeMonth: true,
                                                            changeYear: true,
                                                            onClose: function (selectedDate) {
                                                                if (selectedDate == '') {
                                                                    $(this).datepicker('disable');
                                                                    $(this).datepicker('setDate', new Date());
                                                                    $(this).datepicker('enable');
                                                                    selectedDate = new Date();
                                                                }
                                                            }
                                                        });

                                                        $('#@Html.IdFor(m => m.Filtro.DataFinal)').datepicker({
                                                            prevText: '<i class="fa fa-chevron-left"></i>',
                                                            nextText: '<i class="fa fa-chevron-right"></i>',
                                                            changeMonth: true,
                                                            changeYear: true,
                                                            onClose: function (selectedDate) {
                                                                if (selectedDate == '') {
                                                                    $(this).datepicker('disable');
                                                                    $(this).datepicker('setDate', new Date());
                                                                    $(this).datepicker('enable');
                                                                    selectedDate = new Date();
                                                                }
                                                            }
                                                        });
                                                    });
                                                </script>

                                                <section class="col col-1">
                                                    <button id="btnSearch" type="submit" class="btn btn-primary base-align btnSearchWithPagination" title="Buscar" onclick="javascript:goToPage@(Model.Filtro.PaginationParameters.UniqueIdentifier)(0);">
                                                        <i class="fa fa-search fa-lg"></i>
                                                    </button>
                                                </section>

                                            </div>

                                            <div class="row">
                                                <section class="col col-6">
                                                    @Html.LabelFor(m => m.Filtro.IndiceId, new { @class = "label" })                                
                                                    <label class="select">                                                      
                                                        @Html.DropDownListFor(m => m.Filtro.IndiceId, Model.ListaIndice, string.Empty)
                                                        <i></i> 
                                                    </label>    
                                                    <script type="text/javascript">
                                                        $(document).ready(function () {
                                                            $("#@Html.IdFor(m => m.Filtro.IndiceId)").on("change", function () {
                                                                limpaLista();
                                                            });
                                                        });
                                                    </script> 
                                                    @Html.ValidationMessageFor(m => m.Filtro.IndiceId, "", new { @class = "note note-error" })
                                                </section>
                                                <section class="col col-4">
                                                    @Html.LabelFor(m => m.Filtro.Defasagem, new { @class = "label" })
                                                    <label class="input">
                                                        @Html.TextBoxFor(m => m.Filtro.Defasagem, new { @maxlength = "10", @class = "text-right numeric" })
                                                    </label>
                                                    @Html.ValidationMessageFor(m => m.Filtro.Defasagem, "", new { @class = "note note-error" })
                                                </section>

                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <div class="row">
                                                <section class="col col-6">
									                <div class="inline-group">
										                <label class="radio"> @Html.RadioButtonFor(m => m.Filtro.BaseadoPor, 0) <i></i>Baseado títulos financeiro</label>
										                <label class="radio"> @Html.RadioButtonFor(m => m.Filtro.BaseadoPor, 1) <i></i>Baseado % executado</label>
									                </div>
								                </section>

                                                <section class="col col-6">
                                                    <div class="inline-group">
                                                        <label id="lblEhValorCorrigido" class="checkbox">@Html.CheckBoxFor(m => m.Filtro.EhValorCorrigido)<i></i>@Html.DisplayNameFor(m => m.Filtro.EhValorCorrigido)</label>
                                                    </div>
                                                </section>

                                            </div>
                                        </fieldset>
                                        <fieldset>
                                            <div class="row">
                                                @Html.EditorFor(m => m.Filtro.CentroCusto, "CentroCusto", new { @sectionClass = "col col-6", @labelText = "Centro de Custo", @required = true })
                                                <script type="text/javascript">
                                                    $(document).ready(function () {
                                                        $(document).on("centroCustoValidado", function (e) {
                                                            limpaLista();
                                                        });
                                                    });
                                                </script>
                                            </div>
                                        </fieldset>

                                        <fieldset id="formItensClasse">
                                            <div class="row">
                                                @Html.EditorFor(m => m.Classe, "Classe", new { @sectionClass = "col col-6", @labelText = "Classe" })
                                            </div>
                                            <div class="row">
                                                <section class="col col-6">
                                                    <button id="btnAddClasse" type="button" class="btn btn-primary">
                                                        Adicionar
                                                    </button>
                                                    <button id="btnRemoverClasse" type="button" class="btn btn-danger">
                                                        Remover
                                                    </button>
                                                </section>
                                            </div>
                                            @Html.HiddenFor(m => m.JsonItensClasse)
                                            <div class="table-responsive" style="min-height: 115px; height:135px; border: 1px solid #ddd; margin-bottom: 13px; width:100%; overflow: auto;">
                                                <table id="tableItensClasse" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                                    <thead>
                                                        <tr role="row">
                                                            <th>Código</th>
                                                            <th>Descrição</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </fieldset>
                                    </div>
                                </div>
                            </div>
                        </div>
                       
                        <footer>
                            @{
                                var url = Url.Action("Imprimir", "RelAcompanhamentoFinanceiro");
                            }
                            @Html.EditorFor(m => m.PodeImprimir, "Imprimir", new { @url=url })
                        </footer>
                        
                    }
                    <div id="resultadoBusca"></div>
                </div>
            </div>
        </div>
    </article>
</div>
@section scripts{
    @Html.EditorFor(m => m.Filtro.PaginationParameters, "ListPageScript");
}

<script type="text/javascript">
    jsonItemArrayClasse = JSON.parse($("#@Html.IdFor(m => m.JsonItensClasse)").val());

    $(document).ready(function () {

        $('input[type=radio][name="Filtro.BaseadoPor"]').change(function () {
            limpaLista();
        });

        $("#@Html.IdFor(m => m.Filtro.EhValorCorrigido)").on("change", function () {
            limpaLista();
        });

        jQuery.validator.setDefaults({
            ignore: '#formItensClasse *'
        });

        $('#btnAddClasse').on("click", function () {
            if ($('#formItensClasse input').valid()) {
                if (validaAdicionarClasse() == true) {
                    addClasse();
                }
            }
        });

        $('#btnRemoverClasse').on("click", function () {
            removerClasse();
        });

        jQuery.validator.addMethod(
            "ehCentroCustoValido",
            function (value, element, params) {
                var isValid = validaCentroCusto();
                $.validator.messages.ehCentroCustoValido = $('#@Html.IdFor(m => m.Filtro.CentroCusto.Codigo)_ValidationMessage').html();
                return isValid;
            }, ''
        );

        jQuery.validator.addMethod(
            "ehClasseValida",
            function (value, element, params) {
                var isValid = validaClasse_@(Html.IdFor(m => m.Classe.Codigo))();
                $.validator.messages.ehClasseDespesaValida = $('#@Html.IdFor(m => m.Classe.Codigo)_ValidationMessage').html();
                return isValid;
            }, ''
        );


        $('#formFilter@(Model.Filtro.PaginationParameters.UniqueIdentifier)').validate({
            rules: {
                '@Html.NameFor(m => m.Filtro.DataInicial)': {
                    date: true
                },
                '@Html.NameFor(m => m.Filtro.DataFinal)': {
                    date: true
                },
                '@Html.NameFor(m => m.Filtro.CentroCusto.Codigo)': {
                    ehCentroCustoValido: true
                },
                '@Html.NameFor(m => m.Classe.Codigo)': {
                    ehClasseValida: true
                }
            },
            messages: {
                '@Html.NameFor(m => m.Filtro.DataInicial)': {
                    date: '@GIR.Sigim.Application.Resource.Sigim.ErrorMessages.InformeDataValida'
                },
                '@Html.NameFor(m => m.Filtro.DataFinal)': {
                    date: '@GIR.Sigim.Application.Resource.Sigim.ErrorMessages.InformeDataValida'
                },
                '@Html.NameFor(m => m.Filtro.CentroCusto.Codigo)': {
                    required: '@string.Format(GIR.Sigim.Application.Resource.Sigim.ErrorMessages.CampoObrigatorio, "Centro de Custo")'
                }
            },
            errorPlacement: function (error, element) {
                var span = getErrorMessageContainer(element.attr("name"));
                span.html(error.append());
            },
            highlight: function (element, errorClass) {
                var span = getErrorMessageContainer($(element).attr("name"));
                span.removeClass("field-validation-valid");
                span.addClass("field-validation-error");
            },
            unhighlight: function (element, errorClass) {
                var span = getErrorMessageContainer($(element).attr("name"));
                span.removeClass("field-validation-error");
                span.addClass("field-validation-valid");
            }
        });

        if (validaCentroDeCusto() == false) {
            e.event.preventDefault();
        }


    });

    function validaCentroDeCusto() {
        var result = true;
        if (($('#@Html.IdFor(m => m.Filtro.CentroCusto.Codigo)').val() == '')) {
            result = false;
            smartAlert("Erro", "Informe o centro de custo.", "warning");
            return false;
        }

        var ehValidoCentroCusto = validaCentroCusto();
        if (!ehValidoCentroCusto) {
            result = false;
            smartAlert("Erro", "Selecione um centro de custo cadastrado.", "warning");
            return false;
        }

        return result;
    }

    function validaAdicionarClasse() {
        var result = true;
        if (($('#@Html.IdFor(m => m.Classe.Codigo)').val() == '')) {
            result = false;
            smartAlert("Erro", "Informe a classe.", "error");
            return false;
        }

        var ehValidoClasse = validaClasse_@(Html.IdFor(m => m.Classe.Codigo))();
        if (!ehValidoClasse) {
            result = false;
            smartAlert("Erro", "Selecione uma classe cadastrada.", "error");
            return false;
        }

        $.each(jsonItemArrayClasse, function (index, obj) {
            var ehMesmaClasse = (obj.Codigo == $('#@Html.IdFor(m => m.Classe.Codigo)').val());

            if (ehMesmaClasse) {
                result = false;
                smartAlert("Erro", "A classe informada já foi adicionada !", "error");
                return false;
            }

        });

        return result;
    }

    function processData(node) {
        var fieldId = node.getAttribute ? node.getAttribute('id') : '';
        var fieldName = node.getAttribute ? node.getAttribute('name') : '';

        return false;
    }

    function addClasse() {
        var item = $("#formItensClasse").toObject({ mode: 'combine', skipEmpty: false, nodeCallback: processData })

        jsonItemArrayClasse.push(item.Classe);

        $("#@Html.IdFor(m => m.JsonItensClasse)").val(JSON.stringify(jsonItemArrayClasse));
        fillTableClasse();
        clearFormItemClasse();
    }

    function fillTableClasse() {
        $("#tableItensClasse tbody").empty();
        for (var i = 0; i < jsonItemArrayClasse.length; i++) {
            var row = $('<tr />')
            $("#tableItensClasse tbody").append(row);

            var chkDisabled = '';
            var labelClass = 'checkbox';
            row.append($('<td><label class="' + labelClass + '"><input type="checkbox" name="checkbox" value="' + i + '" ' + chkDisabled + '><i></i>' + jsonItemArrayClasse[i].Codigo + '</label></td>'));
            row.append($('<td class="text-left">' + jsonItemArrayClasse[i].Descricao + '</td>'));
        }
    }

    function clearFormItemClasse() {
        $("#@Html.IdFor(m => m.Classe.Codigo)").val('');

        limpaClasseForm_@(Html.IdFor(m => m.Classe.Codigo))();
    }

    function removerClasse() {
        var arrClasseCodigo = [];
        var index;
        $($('#tableItensClasse input[type=checkbox]:checked').get().reverse()).each(function () {
            index = parseInt($(this).val());
            arrClasseCodigo.push(index);
            jsonItemArrayClasse.splice(index, 1);
        });

        if (arrClasseCodigo.length > 0) {
            $("#@Html.IdFor(m => m.JsonItensClasse)").val(JSON.stringify(jsonItemArrayClasse));
            fillTableClasse();
        }
        else {
            smartAlert("Erro", "Selecione pelo menos uma classe para ser removida.", "error");
        }
    }


    function limpaLista() {
        tratarBotoes(false);
        $("#resultadoBusca").empty();
    }

    function tratarBotoes(condicaoImprimir) {
        @{
            bool? podeImprimir = Model.PodeImprimir as bool? ?? false;
        }

        @if(podeImprimir.ToString().ToLower() == "false"){
            @:condicaoImprimir = false;
        }

        if (condicaoImprimir) {
            $('#btnImprimir').attr("class", "btn btn-primary");
        }
        else {
            $('#btnImprimir').attr("class", "btn btn-primary disabled");
        }
    }

</script>