@model GIR.Sigim.Presentation.WebUI.Areas.Financeiro.ViewModel.RateioAutomaticoViewModel
@{
    ViewBag.Title = "Rateio automático";
}
@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    <a href="javascript:novo();" class="btn btn-primary" style="float:right;">Novo</a>
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Salvar",
                            "RateioAutomatico",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "refresh", UpdateTargetId = "notificationMessages" },
                            new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                    <div class="panel-body no-padding">
                        <fieldset>
                            <div class="row">
                                <section class="col col-12">
                                    @Html.LabelFor(m => m.TipoRateioId, new { @class = "label" })
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.TipoRateioId, Model.ListaTipoRateio, string.Empty, new { @class="required", @novalidate = "novalidate" })<i></i>
                                    </label>
                                    @Html.ValidationMessageFor(m => m.TipoRateioId, "", new { @id = Html.IdFor(m => m.TipoRateioId) + "_ValidationMessage", @class = "note note-error" })
                                </section>
                            </div>
                        </fieldset>
                        <fieldset id="formItem">
                            @Html.HiddenFor(m => m.JsonItens)
                            @Html.HiddenFor(m => m.IndexSelecionado)
                            <div class="row" style="padding-top:0px;">
                                @Html.EditorFor(m => m.Classe, "Classe", new { @sectionClass = "col col-4", @somenteNivelFolha = true })
                            </div>
                            <div class="row">
                                @Html.EditorFor(m => m.CentroCusto, "CentroCusto", new { @sectionClass = "col col-4", @labelText = "Centro de Custo", @somenteNivelFolha = true })
                                <section class="col col-2">
                                    @Html.LabelFor(m => m.Percentual, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.Percentual, "{0:F5}", new { @class = "text-right decimal-5-casas required" })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.Percentual, "", new { @class = "note note-error" })
                                </section>
                            </div>
                             <div class="row">
                                <section class="col col-6">
                                    <button id="btnAddItem" type="button" class="btn btn-primary">Adicionar</button>
                                    <button id="btnRemoverItem" type="button" class="btn btn-danger">Remover</button>
                                </section>
                            </div>
                            <div class="table-responsive" style="min-height: 115px; border: 1px solid #ddd; margin-bottom: 13px; overflow-x: auto;">
                                <table id="tableItens" class="table table-bordered table-striped table-condensed table-hover dataTable">
                                    <thead>
                                        <tr role="row">
                                            <th class="text-center" style="width: 30px;">...</th>
                                            <th class="text-left">Classe</th>
                                            <th class="text-left">Centro de custo</th>
                                            <th class="text-right">Percentual</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </fieldset>
                    </div>
                    <div class="ui-dialog ui-widget ui-widget-content ui-corner-all ui-front ui-dialog-buttons ui-draggable" 
                        tabindex="-1" role="dialog" aria-describedby="dlgSimpleExcluirRegistro" aria-labelledby="ui-id-1" 
                            style="height: auto; width: 600px; top: 220px; left: 262px; display: none;">
                        <div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
                            <span id="ui-id-1" class="ui-dialog-title">
                            </span>
                        </div>
                        <div id="dlgSimpleExcluirRegistro" class="ui-dialog-content ui-widget-content" style="width: auto; min-height: 0px; max-height: none; height: auto;">
	                        <p>
		                        Deseja excluir o registro selecionado ?
	                        </p>
                        </div>
                        <div class="ui-dialog-buttonpane ui-widget-content ui-helper-clearfix">
                            <div class="ui-dialog-buttonset">
                            </div>
                        </div>
                    </div>
                    <footer>
                        @{
                            string disableBtnDeletar = string.Empty;
                            if (!Model.PodeDeletar)
                            {
                                disableBtnDeletar = "disabled";
                            }
                        }
                        <button type="button" id="btnDeletar" class="btn btn-danger @disableBtnDeletar">
                            Deletar
                        </button>
                        @{
                            var url = Url.Action("Imprimir", "RateioAutomatico");
                        }
                        @Html.EditorFor(m => m.PodeImprimir, "Imprimir", new { @url = url })
                        @{
                            string disableBtnSalvar = string.Empty;
                            if (!Model.PodeSalvar)
                            {
                                disableBtnSalvar = "disabled";
                            }
                        }
                        <button type="submit" class="btn btn-primary @disableBtnSalvar">
                            Gravar
                        </button>
                    </footer>
                    }
                </div>
            </div>
        </div>
    </article>
</div>
@*@section scripts{
    @Html.EditorFor(m => m.Filtro.PaginationParameters, "ListPageScript")
}*@

<script type="text/javascript">
    jsonItemArray = JSON.parse($("#@Html.IdFor(m => m.JsonItens)").val());

    $(document).ready(function ()
    {

        $('body').addClass("hidden-menu");

        $("#@Html.IdFor(m => m.TipoRateioId)").on("change", function () {
            limpaItem();
            limpaLista();
            CarregaRegistros();
        });

        jQuery.validator.setDefaults({
            ignore: '#formItem *'
        });

        $('#btnAddItem').on("click", function ()
        {
            if ($('#formItem input').valid())
            {
                if (validaAdicionar() == true)
                {
                    addItem();
                }
            }
        });

        $('#btnRemoverItem').on("click", function ()
        {
            removerItem();
        });

        $.widget("ui.dialog", $.extend({}, $.ui.dialog.prototype, {
            _title: function (title) {
                if (!this.options.title) {
                    title.html("&#160;");
                } else {
                    title.html(this.options.title);
                }
            }
        }));

        $('#dlgSimpleExcluirRegistro').dialog({
            autoOpen: false,
            width: 300,
            resizable: false,
            modal: true,
            title: "<div class='widget-header'><h4><i class='fa fa-warning'></i> Atenção</h4></div>",
            buttons: [{
                html: "Excluir",
                "class": "btn btn-primary",
                click: function () {
                    $(this).dialog("close");
                    excluirRegistro();
                }
            }, {
                html: "<i class='fa fa-times'></i>&nbsp; Cancelar",
                "class": "btn btn-default",
                click: function () {
                    $(this).dialog("close");
                }
            }]
        });

        $("#btnDeletar").on("click", function () {
            var id = $('#@Html.IdFor(m => m.TipoRateioId)').val();
            if (id !== "") {
                $('#dlgSimpleExcluirRegistro').dialog('open');
            }
            else {
                smartAlert("Atenção", "Selecione um tipo rateio para excluir !", "warning");
            }
        });

        $(document).on("showFormatoImpressaoModalPanel", function (e) {
            var tipoRateioId = $("#@Html.IdFor(m => m.TipoRateioId)").val();

            if (tipoRateioId == "") {
                smartAlert("Atenção", "Informe o tipo rateio", "warning");
                e.event.preventDefault();
            }

            parametrosUrlImpressao = '&tipoRateioId=' + tipoRateioId;
        });


    });

    function excluirRegistro() {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Deletar", "RateioAutomatico")',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                tipoRateio: $('#@Html.IdFor(m => m.TipoRateioId)').val()
            })
        })
        .success(function (result) {
            $('#notificationMessages').html(result);
            clearForm();
        });
    }

    function clearForm()
    {
        $('#@Html.IdFor(m => m.TipoRateioId)').val(0);
        limpaItem();
        limpaLista();
    }

    function limpaItem()
    {
        $('#@Html.IdFor(m => m.Classe.Codigo)').val('');
        $('#@Html.IdFor(m => m.Classe.Descricao)').val('');
        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val('');
        $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val('');
        $('#@Html.IdFor(m => m.Percentual)').val(roundDecimal(floatToString(0), 5));
        $('#@Html.IdFor(m => m.IndexSelecionado)').val(-1);
    }

    function limpaLista() {
        $("#tableItens tbody").empty();
    }

    function novo()
    {
        clearForm();
        limpaMsg();
    }

    function limpaMsg() {
        $('#notificationMessages').html('');
        $('#Classe_Codigo-error').remove();
        $('#CentroCusto_Codigo-error').remove();
        $('#TipoRateioId-error').remove();
    }

    function refresh()
    {
        onSuccess();
    }

    function loadItem(index)
    {
        $('#@Html.IdFor(m => m.Classe.Codigo)').val(jsonItemArray[index].Classe.Codigo);
        var ehValidoClasse = validaClasse();
        if (ehValidoClasse) {
            $('#@Html.IdFor(m => m.Classe.Descricao)').val(jsonItemArray[index].Classe.Descricao);
        }
        else {
            $('#@Html.IdFor(m => m.Classe.Codigo)').val("");
            $('#@Html.IdFor(m => m.Classe.Descricao)').val("");
        }
        $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val(jsonItemArray[index].CentroCusto.Codigo);
        var ehValidoCentroCusto = validaCentroCusto();
        if (ehValidoCentroCusto) {
            $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val(jsonItemArray[index].CentroCusto.Descricao);
        }
        else {
            $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val("");
            $('#@Html.IdFor(m => m.CentroCusto.Descricao)').val("");
        }

        $('#@Html.IdFor(m => m.Percentual)').val(roundDecimal(floatToString(jsonItemArray[index].Percentual), 5));
        $('#@Html.IdFor(m => m.IndexSelecionado)').val(index);
        goToTop();
    }

    function CarregaRegistros()
    {
        var tipoRateioId = $('#@Html.IdFor(m => m.TipoRateioId)').val();
        if (tipoRateioId !== "") {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CarregarItem", "RateioAutomatico")',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    tipoRateio: $('#@Html.IdFor(m => m.TipoRateioId)').val()
                })
            })
            .success(function (result) {
                limpaMsg();
                limpaItem();
                jsonItemArray = result;
                $("#@Html.IdFor(m => m.JsonItens)").val(JSON.stringify(result));
                fillTable();
                goToTop();
            });
        }
    };

    function fillTable()
    {
        var totalPercentual = 0;
        $("#tableItens tbody").empty();
        for (var intIndex = 0; intIndex < jsonItemArray.length; intIndex++) {
            var row = $('<tr />')
            $("#tableItens tbody").append(row);

            var chkDisabled = '';
            var labelClass = 'checkbox';
            row.append($('<td><label class="' + labelClass + '"><input type="checkbox" name="checkbox" value="' + intIndex + '" ' + chkDisabled + '><i></i>' + '' + '</label></td>'));
            row.append($('<td class="text-left" onclick="loadItem(' + intIndex + ');">' + jsonItemArray[intIndex].Classe.Codigo + ' - ' + jsonItemArray[intIndex].Classe.Descricao + '</td>'));
            row.append($('<td class="text-left">' + jsonItemArray[intIndex].CentroCusto.Codigo + ' - ' + jsonItemArray[intIndex].CentroCusto.Descricao + '</td>'));
            row.append($('<td class="text-right">' + roundDecimal(floatToString(jsonItemArray[intIndex].Percentual), 5) + '</td>'));
            totalPercentual = totalPercentual + jsonItemArray[intIndex].Percentual;
        }
        var row = $('<tr />');
        $("#tableItens tbody").append(row);
        row.append($('<td style="font-size:12px; line-height: 1.42857143;">Total</td>'));
        row.append($('<td></td>'));
        row.append($('<td></td>'));
        row.append($('<td class="text-right">' + roundDecimal(floatToString(totalPercentual), 5) + '</td>'));
        var row = $('<tr />')
        $("#tableItens tbody").append(row);
    }

    function addItem()
    {
        var item = $("#formItem").toObject({ mode: 'combine', skipEmpty: false, nodeCallback: processData })

        var index = -1;
        $.each(jsonItemArray, function (i, obj) {
            if ($('#@Html.IdFor(m => m.IndexSelecionado)').val() == i) {
                index = i;
                return false;
            }
        });

        if (index >= 0)
        {
            jsonItemArray.splice(index, 1, item);
        }
        else
        {
            jsonItemArray.push(item);
        }

        $("#@Html.IdFor(m => m.JsonItens)").val(JSON.stringify(jsonItemArray));
        fillTable();
        limpaItem();
    }

    function processData(node) {
        var fieldId = node.getAttribute ? node.getAttribute('id') : '';
        var fieldName = node.getAttribute ? node.getAttribute('name') : '';


        if (fieldName != '' && (fieldId == "@Html.IdFor(m => m.Percentual)")) {
            var value = $("#" + fieldId).val();
            return { name: fieldName, value: parseFloat(value.toString().replace(".", "").replace(",", ".")) };
        }

        return false;
    }

    function validaAdicionar()
    {
        var result = true;
        if (($('#@Html.IdFor(m => m.Classe.Codigo)').val() == '') && ($('#@Html.IdFor(m => m.CentroCusto.Codigo)').val() == ''))
        {
            result = false;
            smartAlert("Erro", "Informe o campo classe ou centro de custo.", "error");
            return false;
        }
        var ehValidoClasse = validaClasse();
        if (!ehValidoClasse) {
            result = false;
            smartAlert("Erro", "Selecione uma classe do último nivel.", "error");
            return false;
        }
        var ehValidoCentroCusto = validaCentroCusto();
        if (!ehValidoCentroCusto) {
            result = false;
            smartAlert("Erro", "Selecione um centro de custo do último nivel.", "error");
            return false;
        }

        if ((parseFloat($('#@Html.IdFor(m => m.Percentual)').val()) <= 0)) {
            result = false;
            smartAlert("Erro", "Informe um percentual maior que zero.", "error");
            return false;
        }

        var percentualTotal = parseFloat(0);
        $.each(jsonItemArray, function (index, obj)
        {
            var ehMesmaClasse = (obj.Classe.Codigo == $('#@Html.IdFor(m => m.Classe.Codigo)').val());
            var ehMesmoCentroCusto = (obj.CentroCusto.Codigo == $('#@Html.IdFor(m => m.CentroCusto.Codigo)').val());
            var ehMesmoIndex = (index == $('#@Html.IdFor(m => m.IndexSelecionado)').val());
            var percentual = parseFloat(obj.Percentual);
            var percentualModel = stringToFloat($('#@Html.IdFor(m => m.Percentual)').val());

            if (ehMesmaClasse && ehMesmoCentroCusto && !ehMesmoIndex)
            {
                result = false;
                smartAlert("Erro", "Item repetido.", "error");
                return false;
            }

            if (!ehMesmoIndex)
            {
                percentualTotal = percentualTotal + percentual;
                if ((percentualTotal + percentualModel) > 100)
                {
                    result = false;
                    smartAlert("Erro", "O percentual não deve ultrapassar os 100 % .", "error");
                    return false;
                }
            }
        });

        return result;
    }

    function removerItem()
    {
        var arrSequencial = [];
        var index;
        $($('#tableItens input[type=checkbox]:checked').get().reverse()).each(function () {
            index = parseInt($(this).val());
            arrSequencial.push(index);
            jsonItemArray.splice(index, 1);
        });

        if (arrSequencial.length > 0)
        {
            $("#@Html.IdFor(m => m.JsonItens)").val(JSON.stringify(jsonItemArray));
            fillTable();
        }
        else
            smartAlert("Erro", "Selecione pelo menos 1 item para remover.", "error");
    }

</script>