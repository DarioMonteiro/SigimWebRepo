@model GIR.Sigim.Presentation.WebUI.ViewModel.ContaCorrenteCadastroViewModel

@{
    ViewBag.Title = "Conta corrente";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    @Html.ActionLink("Novo", "Cadastro", new { @id = "" }, new { @class = "btn btn-primary", @style = "float:right;" })
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                        "Cadastro",  
                        "ContaCorrente",
                        null,
                        new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "onSuccess", UpdateTargetId = "notificationMessages" },
                        new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        <fieldset>
                            <div class="row">
                                <section class="col col-2" style="padding-top:30px">                                  
                                    <label class="checkbox">
                                        @Html.CheckBoxFor(m => m.ContaCorrente.Inativo)<i></i>@Html.DisplayNameFor(m => m.ContaCorrente.Inativo)
                                    </label>                                                 
                                </section>
                            </div>
                            <div class="row">
                                <section class="col col-6">
                                    @Html.HiddenFor(m => m.ContaCorrente.BancoId)
                                    @Html.LabelFor(m => m.ContaCorrente.Banco.Nome, new { @class = "label" })
                                    <label class="select">                                                      
                                        @Html.DropDownListFor(m => m.ContaCorrente.BancoId, Model.ListaBanco, string.Empty, new {@class = "required" })
                                        <i></i> 
                                    </label>  
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.BancoId, "", new { @class = "note note-error" })
                                </section>    
                                <section class="col col-6">                                 
                                    @Html.LabelFor(m => m.ContaCorrente.Agencia.AgenciaCodigo, new { @class = "label" })                                
                                    <label class="select">                                                      
                                        @Html.DropDownListFor(m => m.ContaCorrente.AgenciaId, Model.ListaAgencia, string.Empty, new {@class = "required" })
                                        <i></i> 
                                    </label>  
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.Agencia.AgenciaCodigo, "", new { @class = "note note-error" })
                                </section>       
                            </div>
                            <div class="row">                                       
                                <section class="col col-6">
                                    @Html.HiddenFor(m => m.ContaCorrente.Id)
                                    @Html.LabelFor(m => m.ContaCorrente.ContaCodigo, new { @class = "label" })
                                    <label class="input">                                        
                                        @Html.TextBoxFor(m => m.ContaCorrente.ContaCodigo, new { @maxlength = "15", @class = "required" })
                                    </label>                                     
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.ContaCodigo, "", new { @class = "note note-error" })
                                </section>
                                <section class="col col-2">
                                     @Html.LabelFor(m => m.ContaCorrente.DVConta, new { @class = "label" })
                                    <label class="input">                                        
                                        @Html.TextBoxFor(m => m.ContaCorrente.DVConta, new { @maxlength = "10" })
                                    </label>                                     
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.DVConta, "", new { @class = "note note-error" })
                                </section>                                
                            </div> 
                            <div class="row">   
                                <section class="col col-12">
                                    @Html.LabelFor(m => m.ContaCorrente.Descricao, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.ContaCorrente.Descricao, new { @maxlength = "50"  })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.Descricao, "", new { @class = "note note-error" })
                                </section>
                            </div>
                            <div class="row">   
                                <section class="col col-6">
                                    @Html.LabelFor(m => m.ContaCorrente.CodigoEmpresa, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.ContaCorrente.CodigoEmpresa, new { @maxlength = "30"  })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.CodigoEmpresa, "", new { @class = "note note-error" })
                                </section>
                                <section class="col col-6">
                                    @Html.LabelFor(m => m.ContaCorrente.CNPJCedente, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.ContaCorrente.CNPJCedente, new { @maxlength = "50"  })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.CNPJCedente, "", new { @class = "note note-error" })
                                </section>
                            </div>
                            <div class="row">   
                                <section class="col col-12">
                                    @Html.LabelFor(m => m.ContaCorrente.Complemento, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.ContaCorrente.Complemento, new { @maxlength = "50"  })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.Complemento, "", new { @class = "note note-error" })
                                </section>
                            </div>                        
                            <div class="row">   

                                <section class="col col-6">
                                    @Html.LabelFor(m => m.ContaCorrente.Tipo, new { @class = "label" })                                
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.ContaCorrente.Tipo, Model.ListaTipo, string.Empty)<i></i>
                                    </label>
                                    @Html.ValidationMessageFor(m => m.ContaCorrente.Tipo, "", new { @class = "note note-error" })
                                </section>                                
                            </div> 
                        </fieldset>                           
                        <footer>
                            @Html.ActionLink("Voltar", "Index", null, null, new { @class = "btn btn-primary" })
                                                                             
                            <button type="button" id="btnDeletar" class="btn btn-primary">
                                Deletar
                            </button>
                            <button id="btnSalvar" type="submit" class="btn btn-primary">
                                Salvar
                            </button>                                                        
                        </footer>
                    }                                                 
                  
                </div>
            </div>
        </div>
    </article>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        $(document).on("change", "#@Html.IdFor(m => m.ContaCorrente.BancoId)", function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CarregaAgencia", "ContaCorrente")',
                cache: false,
                async: false,
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify({
                    id: $(this).val()
                })
            })
            .success(function (result) {
                $.each(result, function (index, item) {
                    $('#@Html.IdFor(m => m.ContaCorrente.AgenciaId)').append($('<option>').text(item.AgenciaCodigo).attr('value', item.Id));
                });
            });
        });

    });


    $("#btnDeletar").on("click", function() {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Deletar", "ContaCorrente")',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                id: $('#@Html.IdFor(m => m.ContaCorrente.Id)').val()
            })
        })
        .success(function (result) {
            $('#notificationMessages').html(result);            
            clearForm();
            doFilter();
        });
    });


    function clearForm() {
        $('#@Html.IdFor(m => m.ContaCorrente.Id)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.Banco)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.Agencia)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.ContaCodigo)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.DVConta)').val('');        
        $('#@Html.IdFor(m => m.ContaCorrente.Descricao)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.CodigoEmpresa)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.CNPJCedente)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.NomeCedente)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.Complemento)').val('');
        $('#@Html.IdFor(m => m.ContaCorrente.Inativo)').prop('checked', false);
        $('#@Html.IdFor(m => m.ContaCorrente.Situacao)').val('A');
        $('#@Html.IdFor(m => m.ContaCorrente.Tipo)').val(1);       
    }

  
</script>


