@model GIR.Sigim.Presentation.WebUI.ViewModel.FormaRecebimentoViewModel

@{
    ViewBag.Title = "Forma de recebimento";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.Partial("_NotificationMessagesPartial")
<div class="row" style="margin: 0 0 13px 0;">
    <a href="javascript:novo();" class="btn btn-primary" style="float:right;">Novo</a>        
</div>
<div class="row">
    <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable centerBox">
        <div class="jarviswidget" id="wid-id-1" data-widget-editbutton="false" data-widget-custombutton="false">
            <header>
                <span class="widget-icon"><i class="fa fa-cog"></i></span>
                <h2>@ViewBag.Title</h2>
            </header>
            <div>
                <div class="widget-body no-padding">
                    @using (Ajax.BeginForm(
                            "Salvar",
                            "FormaRecebimento",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "refresh", UpdateTargetId = "notificationMessages" },
                            new { @id = "formCadastro", @class = "smart-form client-form", @novalidate = "novalidate" }))                                            
                    {
                        @Html.AntiForgeryToken()
                    <div class="panel-body no-padding">
                        <fieldset>
                            <div class="row">
                                <section class="col col-12">
                                    @Html.HiddenFor(m => m.FormaRecebimento.Id)
                                    @Html.LabelFor(m => m.FormaRecebimento.Descricao, new { @class = "label" })
                                    <label class="input">
                                        @Html.TextBoxFor(m => m.FormaRecebimento.Descricao, new { @maxlength = "50",  @class = "required" })
                                    </label>
                                    @Html.ValidationMessageFor(m => m.FormaRecebimento.Descricao, "", new { @class = "note note-error" })
                                </section>
                            </div>
                            <div class="row">
                                <section class="col col-6">
                                    @Html.LabelFor(m => m.FormaRecebimento.TipoRecebimento, new { @class = "label" })                                
                                    <label class="select">
                                        @Html.DropDownListFor(m => m.FormaRecebimento.TipoRecebimento, Model.ListaTipoRecebimento, string.Empty, new { @class="required" })<i></i>
                                    </label>
                                    @Html.ValidationMessageFor(m => m.FormaRecebimento.TipoRecebimento, "", new { @class = "note note-error" })
                                </section>
                                <section class="col col-3">
                                    @Html.LabelFor(m => m.FormaRecebimento.NumeroDias, new { @class = "label" })                                
                                    @{
                                        if (!Model.PodeHabilitarNumeroDias)
                                        {
                                            <label class="input">
                                                @Html.TextBoxFor(m => m.FormaRecebimento.NumeroDias, new { @maxlength = "10" , @class = "numeric text-right readonly" , @readonly="readonly" })
                                            </label>
                                        }
                                        else{
                                            <label class="input">
                                                @Html.TextBoxFor(m => m.FormaRecebimento.NumeroDias, new { @maxlength = "10" , @class = "numeric text-right"})
                                            </label>
                                        }
                                    }
                                    @Html.ValidationMessageFor(m => m.FormaRecebimento.NumeroDias, "", new { @class = "note note-error" })
                                </section>
                            </div>                           
                        </fieldset>
                    </div>
                    <footer>                       
                        @{
                        string disableBtnDeletar = string.Empty;
                            if (!Model.PodeDeletar)
                            {
                                disableBtnDeletar = "disabled";
                            }
                        }
                        <button type="button" id="btnDeletar" class="btn btn-primary @disableBtnDeletar">
                            Deletar
                        </button>
                        @{
                            string disableBtnSalvar = string.Empty;
                            if (!Model.PodeSalvar)
                            {
                                disableBtnSalvar = "disabled";
                            }
                        }
                        <button type="submit" id="btnSalvar" class="btn btn-primary @disableBtnSalvar">
                            Gravar
                        </button>
                    </footer>
                    }                        
                    @using (Ajax.BeginForm(
                            "Lista",
                            "FormaRecebimento",
                            null,
                            new AjaxOptions() { InsertionMode = InsertionMode.Replace, HttpMethod = "POST", OnSuccess = "onSuccess", UpdateTargetId = "resultadoBusca" },
                            new { @id = "formFilter" + Model.Filtro.PaginationParameters.UniqueIdentifier, @class = "smart-form client-form", @novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.PageIndex)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.PageSize)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.OrderBy)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.Ascending)
                        @Html.HiddenFor(m => m.Filtro.PaginationParameters.UniqueIdentifier)
                    }
                    <div id="resultadoBusca"></div>
                </div>
            </div>
        </div>
    </article>
</div>
@section scripts{
    @Html.EditorFor(m => m.Filtro.PaginationParameters, "ListPageScript")
}

<script type="text/javascript">
    $(document).ready(function () {
        listarFiltro();

        $(document).on("doFilter@(Model.Filtro.PaginationParameters.UniqueIdentifier)",
            function (e) {
                listarFiltro();
            }
        );

        $(document).on("change", "#@Html.IdFor(m => m.FormaRecebimento.TipoRecebimento)", function () {
            habilitaDesabilitaNumeroDeDias();           
        });


    });

    $("#btnDeletar").on("click", function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Deletar", "FormaRecebimento")',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                id: $('#@Html.IdFor(m => m.FormaRecebimento.Id)').val()
            })
        })
        .success(function (result) {
            $('#notificationMessages').html(result);
            limpaPaginacao();
            clearForm();
            listarFiltro();
        });
    });

    function clearForm() {
        $('#@Html.IdFor(m => m.FormaRecebimento.Id)').val('');
        $('#@Html.IdFor(m => m.FormaRecebimento.Descricao)').val('');
        $('#@Html.IdFor(m => m.FormaRecebimento.TipoRecebimento)').val('');
        $("#@Html.IdFor(m => m.FormaRecebimento.NumeroDias)").val();
    }

    function novo() {
        clearForm();
        $('#notificationMessages').html('');
        $('#FormaRecebimento_Descricao-error').remove();
        $('#FormaRecebimento_TipoRecebimento-error').remove();
        tratarBotoes(true, true);
    }

    function refresh() {
        onSuccess();
        clearForm();
        listarFiltro();
    }

    function loadItem(id) {
        novo();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("CarregarItem", "FormaRecebimento")',
            cache: false,
            async: false,
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify({
                id: id
            })
        })
        .success(function (result) {
            $('#@Html.IdFor(m => m.FormaRecebimento.Id)').val(result.Id);
            $('#@Html.IdFor(m => m.FormaRecebimento.Descricao)').val(result.Descricao);
            $('#@Html.IdFor(m => m.FormaRecebimento.TipoRecebimento)').val(result.TipoRecebimento);
            $('#@Html.IdFor(m => m.FormaRecebimento.Automatico)').val(result.Automatico);
            $('#@Html.IdFor(m => m.FormaRecebimento.NumeroDias)').val(result.NumeroDias);
            tratarBotoes(!result.Automatico, !result.Automatico);
            habilitaDesabilitaNumeroDeDias();
            goToTop();

        });
    }

    function limpaPaginacao() {
        $('#@Html.IdFor(m => m.Filtro.PaginationParameters.PageIndex)').val(0);
    }

    function tratarBotoes(condicaoSalvar, condicaoDeletar) {
        @{
            bool? podeSalvar = Model.PodeSalvar as bool? ?? false;
        }

        @{
            bool? podeDeletar = Model.PodeDeletar as bool? ?? false;
        }

@*        @{
            bool? podeImprimir = Model.PodeImprimir as bool? ?? false;
        }*@

        @if(podeSalvar.ToString().ToLower() == "false"){
            @:condicaoSalvar = false;
        }

        @if(podeDeletar.ToString().ToLower() == "false"){
            @:condicaoDeletar = false;
        }

@*        @if(podeImprimir.ToString().ToLower() == "false"){
            @:condicaoImprimir = false;
        }*@


        if (condicaoSalvar) {
            document.getElementById('btnSalvar').className = "btn btn-primary right";
        }
        else {
            document.getElementById('btnSalvar').className = "btn btn-primary right disabled";
        }
        if (condicaoDeletar) {
            document.getElementById('btnDeletar').className = "btn btn-primary";
        }
        else {
            document.getElementById('btnDeletar').className = "btn btn-primary disabled";
        }

        //if (condicaoImprimir) {
        //    document.getElementById('btnImprimir').className = "btn btn-primary";
        //}
        //else {
        //    document.getElementById('btnImprimir').className = "btn btn-primary disabled";
        //}

    }

    function listarFiltro() {
        $('#formFilter@(Model.Filtro.PaginationParameters.UniqueIdentifier)').submit();
    }

    function habilitaDesabilitaNumeroDeDias() {
        var tipoRecementoId = $("#@Html.IdFor(m => m.FormaRecebimento.TipoRecebimento)").val();       
        if (tipoRecementoId == "1") {
            $('#@Html.IdFor(m => m.FormaRecebimento.NumeroDias)').prop('readonly', false);
            document.getElementById('@Html.IdFor(m => m.FormaRecebimento.NumeroDias)').className = "numeric text-right";
            $("#@Html.IdFor(m => m.FormaRecebimento.NumeroDias)").val(0);
        }
        else {
            $('#@Html.IdFor(m => m.FormaRecebimento.NumeroDias)').prop('readonly', true);
            document.getElementById('@Html.IdFor(m => m.FormaRecebimento.NumeroDias)').className = "numeric text-right readonly";
            $("#@Html.IdFor(m => m.FormaRecebimento.NumeroDias)").val("");
        }
        
    }
</script>

